Only in /home/yajat/Desktop/aosp12_r11/packages/apps/BasicSmsReceiver: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Bluetooth: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Bluetooth/src/com/android/bluetooth/opp/BluetoothOppNotification.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Bluetooth/src/com/android/bluetooth/opp/BluetoothOppNotification.java
49a50,54
> import android.bluetooth.BluetoothDevice;
> import android.os.SystemProperties;
> import android.content.BroadcastReceiver;
> import android.content.IntentFilter;
> import android.content.ComponentName;
121a127,157
>     ///AW CODE: [feat] add BroadcastReceiver for INCOMINGFILE
>     public final BroadcastReceiver mReceiver = new BroadcastReceiver() {
>         @Override
>         public void onReceive(Context context, Intent intent) {
>             String action = intent.getAction();
>             if (V) {
>                 Log.d(TAG, "onReceive. Broadcast Intent = " + intent.toString());
>             }
>             if (BluetoothDevice.ACTION_INCOMINGFILE_CONFIRM_ACCEPT.equals(action)) {
>                 Cursor cursor = mContentResolver.query(BluetoothShare.CONTENT_URI, null,
>                                          WHERE_CONFIRM_PENDING, null, BluetoothShare._ID);
>                 if (cursor == null) {
>                     return;
>                 }
>                 for (cursor.moveToFirst(); !cursor.isAfterLast(); cursor.moveToNext()) {
>                     BluetoothOppTransferInfo info = new BluetoothOppTransferInfo();
>                     BluetoothOppUtility.fillRecord(mContext, cursor, info);
>                     Uri contentUri = Uri.parse(BluetoothShare.CONTENT_URI + "/" + info.mID);
>                     Intent baseIntent = new Intent().setDataAndNormalize(contentUri)
>                         .setClassName(Constants.THIS_PACKAGE_NAME,
>                                 BluetoothOppReceiver.class.getName());
>                     //accept transfer file
>                     Intent mIntent = new Intent(baseIntent).setAction(Constants.ACTION_ACCEPT);
>                     mContext.sendBroadcast(mIntent);
>                 }
>                 cursor.close();
>             }
>         }
>     };
>     ///AW: add end
> 
161a198,203
> 
>         ///AW CODE: [feat] add INCOMINGFILE_CONFIRM_ACCEPT action
>         IntentFilter filter = new IntentFilter();
>         filter.addAction(BluetoothDevice.ACTION_INCOMINGFILE_CONFIRM_ACCEPT);
>         mContext.registerReceiver(mReceiver, filter);
>         ///AW: add end
650c692,701
<             mNotificationMgr.notify(NOTIFICATION_ID_PROGRESS, n);
---
>             ///AW CODE: [feat] send BluetoothIncomingFileRequest broadcast
>             if ("homlet".equals(SystemProperties.get("ro.product.platform", null)) ||
>                 "homlet".equals(SystemProperties.get("ro.build.characteristics", null))) {
>                 Intent intent = new Intent().setAction(BluetoothDevice.ACTION_INCOMINGFILE_REQUEST);
>                 intent.setComponent(new ComponentName("android","com.android.server.BluetoothIncomingFileRequest"));
>                 mContext.sendBroadcast(intent);
>             } else {
>                 mNotificationMgr.notify(NOTIFICATION_ID_PROGRESS, n);
>             }
>             ///AW: add end
661a713,720
>     ///AW CODE: [feat] unregister INCOMINGFILE receiver
>     void clear(){
>         if (V) {
>             Log.v(TAG, "clear!");
>         }
>         mContext.unregisterReceiver(mReceiver);
>     }
>     ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Bluetooth/src/com/android/bluetooth/opp/BluetoothOppService.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Bluetooth/src/com/android/bluetooth/opp/BluetoothOppService.java
245a246,248
>         ///AW CODE: [feat] clear BluetoothOppNotification
>         mNotifier.clear();
>         ///AW: add end
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Browser2: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Calendar: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: AndroidManifest.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2/Android.mk /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2/Android.mk
4a5,6
> LOCAL_MANIFEST_FILE := app/AndroidManifest.xml
> 
20,22c22,24
< LOCAL_SRC_FILES := $(call all-java-files-under, src)
< LOCAL_SRC_FILES += $(call all-java-files-under, src_pd)
< LOCAL_SRC_FILES += $(call all-java-files-under, src_pd_gcam)
---
> LOCAL_SRC_FILES := $(call all-java-files-under, app/src)
> LOCAL_SRC_FILES += $(call all-java-files-under, app/src_pd)
> LOCAL_SRC_FILES += $(call all-java-files-under, app/src_pd_gcam)
25,26c27,28
< 	$(LOCAL_PATH)/res \
< 	$(LOCAL_PATH)/res_p
---
> 	$(LOCAL_PATH)/app/res \
> 	$(LOCAL_PATH)/app/res_p
41a44
> LOCAL_CERTIFICATE := platform
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: app
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: assets
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: build.gradle
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2/.gitignore /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2/.gitignore
8d7
< libs/
13a13,25
> 
> # Andorid Studio
> app/build/
> /.gradle
> /.idea
> 
> # cscope and ctags
> cscope.files
> cscope.in.out
> cscope.out
> cscope.po.out
> tags
> 
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: gradle
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: gradle.properties
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: gradlew
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: gradlew.bat
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: jni
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: local.properties
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: res
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: res_p
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Camera2: settings.gradle
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: src
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: src_pd
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Camera2: src_pd_gcam
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Calendar: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Cluster: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/DebuggingRestrictionController: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Dialer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Hvac: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/LatinIME: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Launcher: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/libs: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/LinkViewer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/LocalMediaPlayer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Media: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Messenger: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Notification: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Provision: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Radio: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/RotaryController: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/Settings: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/SettingsIntelligence: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/SystemUI: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/SystemUpdater: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Car/tests: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/CarrierConfig: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/CellBroadcastReceiver: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/CertInstaller: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Contacts: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Contacts/src/com/android/contacts/activities/AttachPhotoActivity.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Contacts/src/com/android/contacts/activities/AttachPhotoActivity.java
200c200,201
<             if (!hasIntentHandler(intent)) {
---
>             final ResolveInfo intentHandler = getIntentHandler(intent);
>             if (intentHandler == null) {
213a215
>             intent.setPackage(intentHandler.activityInfo.packageName);
240,243c242,246
<     private boolean hasIntentHandler(Intent intent) {
<         final List<ResolveInfo> resolveInfo = getPackageManager()
<                 .queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);
<         return resolveInfo != null && resolveInfo.size() > 0;
---
>     private ResolveInfo getIntentHandler(Intent intent) {
>         final List<ResolveInfo> resolveInfos = getPackageManager()
>                 .queryIntentActivities(intent,
>                         PackageManager.MATCH_DEFAULT_ONLY | PackageManager.MATCH_SYSTEM_ONLY);
>         return (resolveInfos != null && resolveInfos.size() > 0) ? resolveInfos.get(0) : null;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Contacts/src/com/android/contacts/detail/PhotoSelectionHandler.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Contacts/src/com/android/contacts/detail/PhotoSelectionHandler.java
245c245,246
<         if (!hasIntentHandler(intent)) {
---
>         final ResolveInfo intentHandler = getIntentHandler(intent);
>         if (intentHandler == null) {
254a256
>         intent.setPackage(intentHandler.activityInfo.packageName);
325,328c327,331
<     private boolean hasIntentHandler(Intent intent) {
<         final List<ResolveInfo> resolveInfo = mContext.getPackageManager()
<                 .queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);
<         return resolveInfo != null && resolveInfo.size() > 0;
---
>     private ResolveInfo getIntentHandler(Intent intent) {
>         final List<ResolveInfo> resolveInfos = mContext.getPackageManager()
>                 .queryIntentActivities(intent,
>                         PackageManager.MATCH_DEFAULT_ONLY | PackageManager.MATCH_SYSTEM_ONLY);
>         return (resolveInfos != null && resolveInfos.size() > 0) ? resolveInfos.get(0) : null;
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/DeskClock: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/DeskClock/src/com/android/deskclock/alarms/AlarmStateManager.kt /home/yajat/Desktop/H618-Android12-Src/packages/apps/DeskClock/src/com/android/deskclock/alarms/AlarmStateManager.kt
122c122
<                     PendingIntent.getService(context, instance.hashCode(),
---
>                     PendingIntent.getForegroundService(context, instance.hashCode(),
1011c1011
< }
\ No newline at end of file
---
> }
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/DeskClock/src/com/android/deskclock/data/TimerModel.kt /home/yajat/Desktop/H618-Android12-Src/packages/apps/DeskClock/src/com/android/deskclock/data/TimerModel.kt
759a760,763
>         if (!mNotificationBuilder.isCreateChannel) {
>             mNotificationBuilder.buildChannel(mContext, mNotificationManager)
>         }
> 
809c813
< }
\ No newline at end of file
---
> }
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/DeskClock/src/com/android/deskclock/data/TimerNotificationBuilder.kt /home/yajat/Desktop/H618-Android12-Src/packages/apps/DeskClock/src/com/android/deskclock/data/TimerNotificationBuilder.kt
52a53,54
>     /* check if create channel */
>     var isCreateChannel = false
59a62
>             isCreateChannel = true
423c426
< }
\ No newline at end of file
---
> }
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/DeskClock/src/com/android/deskclock/settings/ScreensaverSettingsActivity.kt /home/yajat/Desktop/H618-Android12-Src/packages/apps/DeskClock/src/com/android/deskclock/settings/ScreensaverSettingsActivity.kt
58,60d57
<             if (Utils.isNOrLater) {
<                 getPreferenceManager().setStorageDeviceProtected()
<             }
63c60,63
<         override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String) {
---
>         override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?) {
>             if (Utils.isNOrLater) {
>                 preferenceManager.setStorageDeviceProtected()
>             }
92c92
< }
\ No newline at end of file
---
> }
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/DevCamera: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Dialer: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Dialer/java/com/android/voicemail/impl/sms/LegacyModeSmsHandler.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Dialer/java/com/android/voicemail/impl/sms/LegacyModeSmsHandler.java
112c112
<               PendingIntent.FLAG_UPDATE_CURRENT);
---
>               PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
125c125
<               PendingIntent.FLAG_UPDATE_CURRENT);
---
>               PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/DocumentsUI: .git
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps: Email
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/EmergencyInfo: .git
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps: ExactCalculator
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Gallery: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Gallery2: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/HTMLViewer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/ImsServiceEntitlement: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/KeyChain/AndroidManifest.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/KeyChain/AndroidManifest.xml
8a9
>     <uses-permission android:name="android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS"/>
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/KeyChain: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/KeyChain/src/com/android/keychain/KeyChainActivity.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/KeyChain/src/com/android/keychain/KeyChainActivity.java
79a80,81
> import static android.view.WindowManager.LayoutParams.SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS;
> 
130a133
>         getWindow().addSystemFlags(SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS);
554a558,560
>         dialog.create();
>         // Prevents screen overlay attack.
>         dialog.getButton(DialogInterface.BUTTON_POSITIVE).setFilterTouchesWhenObscured(true);
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/Android.mk /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/Android.mk
163c163
< LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 Launcher3QuickStep
---
> LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 Launcher3QuickStep Launcher3Go
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/go/quickstep/src/com/android/quickstep/TaskOverlayFactoryGo.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/go/quickstep/src/com/android/quickstep/TaskOverlayFactoryGo.java
256c256,257
<             mNIUPackageName = assistantPackage.split("/", 2)[0];
---
>             if (assistantPackage != null)
>                 mNIUPackageName = assistantPackage.split("/", 2)[0];
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/quickstep/res/values/config.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/quickstep/res/values/config.xml
40a41
>     <integer name="assistant_height_factor">1</integer>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/quickstep/src/com/android/quickstep/OrientationTouchTransformer.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/quickstep/src/com/android/quickstep/OrientationTouchTransformer.java
316c316,318
<         float assistantHeight = Math.max(navbarHeight, mContractInfo.getWindowCornerRadius());
---
>         // AW_CODE: add assistantHeight factor
>         int ahFactor = mResources.getInteger(R.integer.assistant_height_factor);
>         float assistantHeight = Math.max(navbarHeight, mContractInfo.getWindowCornerRadius()) * ahFactor;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/src/com/android/launcher3/LauncherFiles.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/src/com/android/launcher3/LauncherFiles.java
17a18
>     public static final String LAUNCHER_5_BY_6_DB = "launcher_5_by_6.db";
33a35
>             LAUNCHER_5_BY_6_DB,
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/src/com/android/launcher3/Launcher.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/src/com/android/launcher3/Launcher.java
216a217,222
> // AW:Added for BOOTEVENT
> import java.io.FileOutputStream;
> import java.io.FileNotFoundException;
> import java.io.IOException;
> 
> 
361a368,392
>     // AW:Added for BOOTEVENT
>     private static boolean sBootEventenable = "true".equals(Utilities.getSystemProperty("persist.sys.bootevent", "true"));
>     static void logBootEvent(String bootevent) {
>         if (!sBootEventenable) {
>             return ;
>         }
>         FileOutputStream fos =null;
>         try {
>             fos = new FileOutputStream("/proc/bootevent");
>             fos.write(bootevent.getBytes());
>             fos.flush();
>         } catch (FileNotFoundException e) {
>             Log.e("BOOTEVENT","Failure open /proc/bootevent,not found!",e);
>         } catch (java.io.IOException e) {
>             Log.e("BOOTEVENT","Failure open /proc/bootevent entry",e);
>         } finally {
>             if (fos != null) {
>                 try {
>                     fos.close();
>                 } catch (IOException e) {
>                     Log.e ("BOOTEVENT","Failure close /proc/bootevent entry",e);
>                 }
>             }
>         }
>     }
419a451,452
>         // AW:BOOTEVENT
>         logBootEvent("Launcher:onCreate start");
420a454
>         Log.i(TAG,"Launcher:onCreate start");
495a530,531
>         logBootEvent("Launcher:onCreate end");
>         Log.i(TAG,"Launcher:onCreate end");
1096a1133,1135
>         // AW:BOOTEVENT
>         logBootEvent("Launcher:onResume start");
>         Log.i(TAG,"Launcher:onResume start");
1106a1146,1149
>         // AW:BOOTEVENT Launcher displayed end,turn off bootevent
>         Log.i(TAG,"Launcher:onResume end");
>         logBootEvent("Launcher:onResume end");
>         logBootEvent("0");
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Launcher3/src/com/android/launcher3/qsb/QsbWidgetHostView.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Launcher3/src/com/android/launcher3/qsb/QsbWidgetHostView.java
18a19,20
> import android.annotation.Nullable;
> import android.app.ActivityManager;
19a22,23
> import android.content.pm.PackageManager;
> import android.util.Log;
36a41,78
>     /// AW：[BugFix] #54936 Solve the problem of high CPU consumption wangchende
>     private final int mBlankImageId;
> 
>     private void removeBlankImage() {
>         if (mBlankImageId != 0) {
>             View imageView = findViewById(mBlankImageId);
>             if (imageView != null) {
>                 ViewGroup parent = (ViewGroup) imageView.getParent();
>                 ((ViewGroup) parent.getParent()).removeView(parent);
>                 Log.i("QsbWidgetHostView", "removeView imageView=" + imageView);
>             }
>         }
>     }
> 
>     private int getBlankImageId(Context context) {
>         try {
>             if (ActivityManager.isLowRamDeviceStatic()) {
>                 Context appContext = context.createPackageContext("com.google.android.apps.searchlite", Context.CONTEXT_IGNORE_SECURITY);
>                 return appContext.getResources().getIdentifier("blank_image", "id", "com.google.android.apps.searchlite");
>             }
>         } catch (PackageManager.NameNotFoundException e) {
>             Log.i("QsbWidgetHostView", "NameNotFoundException =", e);
>         }
>         return 0;
>     }
> 
>     @Override
>     protected void applyRemoteViews(@Nullable RemoteViews remoteViews, boolean useAsyncIfPossible) {
>         super.applyRemoteViews(remoteViews, useAsyncIfPossible);
>         removeBlankImage();
>     }
> 
>     @Override
>     protected void prepareView(View view) {
>         super.prepareView(view);
>         removeBlankImage();
>     }
>     /// AW：add end
41a84,86
>         /// AW：[BugFix] #54936 Solve the problem of high CPU consumption wangchende
>         mBlankImageId = getBlankImageId(context);
>         /// AW：add end
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/LegacyCamera: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/ManagedProvisioning: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/ManagedProvisioning/src/com/android/managedprovisioning/task/UpdateInteractAcrossProfilesAppOpTask.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/ManagedProvisioning/src/com/android/managedprovisioning/task/UpdateInteractAcrossProfilesAppOpTask.java
50a51
>     private final UserManager mUserManager;
61a63
>         mUserManager = context.getSystemService(UserManager.class);
136c138
<         List<UserHandle> profiles = mContext.getSystemService(UserManager.class).getAllProfiles();
---
>         List<UserHandle> profiles = mUserManager.getAllProfiles();
138,139c140,151
<             apps.addAll(mContext.createContextAsUser(profile, /* flags= */ 0).getPackageManager()
<                     .getInstalledApplications(/* flags= */ 0));
---
>             if (profile.getIdentifier() != mContext.getUserId()
>                     && !mUserManager.isManagedProfile(profile.getIdentifier())) {
>                 continue;
>             }
>             try {
>                 apps.addAll(
>                         mContext.createPackageContextAsUser(
>                         /* packageName= */ "android", /* flags= */ 0, profile)
>                                 .getPackageManager().getInstalledApplications(/* flags= */ 0));
>             } catch (PackageManager.NameNotFoundException ignored) {
>                 // Should never happen.
>             }
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Messaging: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Music: Android.bp
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Music/AndroidManifest.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/AndroidManifest.xml
17d16
< 
20c19,20
< 	  xmlns:tools="http://schemas.android.com/tools">
---
>           android:versionCode="2"
>           android:versionName="2.0">
29a30,34
>     <uses-permission android:name="android.permission.WRITE_SETTINGS"/>
>     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
>     <uses-permission android:name="android.permission.WAKE_LOCK"/>
>     <uses-permission android:name="android.permission.INTERNET"/>
>     <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
31c36,38
< 
---
>     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
>     <uses-permission android:name="android.permission.BROADCAST_STICKY"/>
>     <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
34,38c41,62
<             android:allowBackup="true"
<             android:label="@string/app_name"
<             android:supportsRtl="true"
<             android:launchMode="singleTop"
<             android:requestLegacyExternalStorage="true">
---
>             android:name="com.android.music.MusicApp"
>             android:icon="@mipmap/ic_launcher_music"
>             android:label="@string/musicbrowserlabel"
>             android:taskAffinity="android.task.music"
>             android:allowTaskReparenting="true"
>             android:usesCleartextTraffic="true">
> 
>         <!-- Meta Data -->
>         <meta-data android:name="com.google.android.gms.car.application"
>                    android:resource="@xml/automotive_app_desc"/>
> 
>         <!-- Main Activity -->
>         <activity android:name="com.android.music.MusicBrowserActivity"
>                   android:theme="@android:style/Theme.NoTitleBar"
>                   android:exported="true">
>             <intent-filter>
>                 <action android:name="android.intent.action.MAIN"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <category android:name="android.intent.category.LAUNCHER"/>
>                 <category android:name="android.intent.category.APP_MUSIC"/>
>             </intent-filter>
>         </activity>
46a71
>                 <data android:mimeType="audio/mpeg"/>
63c88
<                     android:priority="-1">
---
>                     android:priority="0">
96a122,198
>         <!--
>             This is the "current music playing" panel, which has special
>             launch behavior.  We clear its task affinity, so it will not
>             be associated with the main media task and if launched
>             from a notification will not bring the rest of the media app
>             to the foreground.  We make it singleTask so that when others
>             launch it (such as media) we will launch in to our own task.
>             We set clearTaskOnLaunch because the user
>             can go to a playlist from this activity, so if they later return
>             to it we want it back in its initial state.  We exclude from
>             recents since this is accessible through a notification when
>             appropriate.
>         -->
>         <activity android:name="com.android.music.MediaPlaybackActivity"
>                   android:theme="@android:style/Theme.NoTitleBar"
>                   android:label="@string/mediaplaybacklabel"
>                   android:taskAffinity=""
>                   android:launchMode="singleTask"
>                   android:clearTaskOnLaunch="true"
>                   android:excludeFromRecents="true"
>                   android:exported="true">
>             <intent-filter>
>                 <action android:name="android.intent.action.VIEW"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:scheme="content"/>
>                 <data android:host="media"/>
>                 <data android:mimeType="audio/*"/>
>                 <data android:mimeType="application/ogg"/>
>                 <data android:mimeType="application/x-ogg"/>
>                 <data android:mimeType="application/itunes"/>
>             </intent-filter>
>             <intent-filter>
>                 <action android:name="com.android.music.PLAYBACK_VIEWER"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>             </intent-filter>
>         </activity>
> 
>         <activity android:name="com.android.music.ArtistAlbumBrowserActivity"
>                   android:exported="false">
>             <intent-filter>
>                 <action android:name="android.intent.action.PICK"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:mimeType="vnd.android.cursor.dir/artistalbum"/>
>             </intent-filter>
>         </activity>
> 
>         <activity android:name="com.android.music.AlbumBrowserActivity" android:exported="false">
>             <intent-filter>
>                 <action android:name="android.intent.action.PICK"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:mimeType="vnd.android.cursor.dir/album"/>
>             </intent-filter>
>         </activity>
> 
>         <activity android:name="com.android.music.TrackBrowserActivity" android:exported="false">
>             <intent-filter>
>                 <action android:name="android.intent.action.PICK"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:mimeType="vnd.android.cursor.dir/track"/>
>             </intent-filter>
>         </activity>
> 
>         <activity android:name="com.android.music.PlaylistBrowserActivity"
>                   android:label="@string/musicbrowserlabel"
>                   android:exported="true">
>             <intent-filter>
>                 <action android:name="android.intent.action.PICK"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:mimeType="vnd.android.cursor.dir/playlist"/>
>             </intent-filter>
>             <intent-filter>
>                 <action android:name="android.intent.action.VIEW"/>
>                 <category android:name="android.intent.category.DEFAULT"/>
>                 <data android:mimeType="vnd.android.cursor.dir/playlist"/>
>             </intent-filter>
>         </activity>
> 
99c201
<                  android:label="Android Open Source Music Playback Service">
---
>                  android:label="Android Open Source Music Player">
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music: Android.mk
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Music/CleanSpec.mk /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/CleanSpec.mk
46d45
< $(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/Music)
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Music: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Music: kotlin
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music: MODULE_LICENSE_APACHE2
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music: res
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: AlbumBrowserActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: ArtistAlbumBrowserActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: MediaPlaybackActivity.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Music/src/com/android/music/MediaPlaybackService.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music/MediaPlaybackService.java
21a22,24
> import android.graphics.Bitmap;
> import android.media.MediaDescription;
> import android.media.MediaMetadata;
25a29,34
> import android.os.Handler;
> import android.os.Binder;
> import android.os.IBinder;
> import android.os.Message;
> import android.os.Build;
> import android.os.SystemClock;
26a36
> import android.text.TextUtils;
28c38,42
< 
---
> import com.android.music.utils.*;
> import android.app.Notification;
> import android.app.NotificationChannel;
> import android.app.NotificationManager;
> import java.lang.ref.WeakReference;
30a45,47
> import static com.android.music.utils.MediaIDHelper.*;
> import com.android.music.MusicApp;
> 
35c52,70
< public class MediaPlaybackService extends MediaBrowserService {
---
> public class MediaPlaybackService extends MediaBrowserService implements Playback.Callback, MusicApp.MountCallback {
>     private static final String TAG = LogHelper.makeLogTag(MediaPlaybackService.class);
> 
>     // Delay stopSelf by using a handler.
>     private static final int STOP_DELAY = 30000;
> 
>     public static final String ACTION_CMD = "com.android.music.ACTION_CMD";
>     public static final String CMD_NAME = "CMD_NAME";
>     public static final String CMD_PAUSE = "CMD_PAUSE";
>     public static final String CMD_REPEAT = "CMD_PAUSE";
>     public static final String REPEAT_MODE = "REPEAT_MODE";
>     private static final int NOTIFICATION_ID = 1234;
>     private static final String CHANNEL_ID="music_notification_channel";
>     private static final String CHANNELNAME="music";
> 
>     public enum RepeatMode { REPEAT_NONE, REPEAT_ALL, REPEAT_CURRENT }
> 
>     // Music catalog manager
>     private MusicProvider mMusicProvider;
36a72,85
>     // "Now playing" queue:
>     private List<MediaSession.QueueItem> mPlayingQueue = null;
>     private int mCurrentIndexOnQueue = -1;
>     private MediaNotificationManager mMediaNotificationManager;
>     // Indicates whether the service was started.
>     private boolean mServiceStarted;
>     private DelayedStopHandler mDelayedStopHandler = new DelayedStopHandler(this);
>     private Playback mPlayback;
>     // Default mode is repeat none
>     private RepeatMode mRepeatMode = RepeatMode.REPEAT_NONE;
> 
>     // Extra information for this session
>     private Bundle mExtras;
>     private NotificationManager mNotificationManager;
41a91
>         LogHelper.d(TAG, "onCreate()");
42a93,95
>         LogHelper.d(TAG, "Create MusicProvider");
>         mPlayingQueue = new ArrayList<>();
>         mMusicProvider = new MusicProvider(this);
43a97
>         LogHelper.d(TAG, "Create MediaSession");
45a100,103
>         // Set extra information
>         mExtras = new Bundle();
>         mExtras.putInt(REPEAT_MODE, mRepeatMode.ordinal());
>         mSession.setExtras(mExtras);
52a111,113
>         // MediaSessionCallback() has methods that handle callbacks from a media controller
>         mSession.setCallback(new MediaSessionCallback());
>         // Set the session's token so that client activities can communicate with it.
54a116,120
>         mPlayback = new Playback(this, mMusicProvider);
>         mPlayback.setState(PlaybackState.STATE_NONE);
>         mPlayback.setCallback(this);
>         mPlayback.start();
> 
59a126,130
> 
>         updatePlaybackState(null);
>         mMediaNotificationManager = new MediaNotificationManager(this);
> 
>         ((MusicApp)getApplication()).addMountCallback(this);
63a135,150
>         if (startIntent != null) {
>             String action = startIntent.getAction();
>             String command = startIntent.getStringExtra(CMD_NAME);
>             if (ACTION_CMD.equals(action)) {
>                 if (CMD_PAUSE.equals(command)) {
>                     if (mPlayback != null && mPlayback.isPlaying()) {
>                         handlePauseRequest();
>                     }
>                 }
>             }
>         } else {
>             Log.d(TAG, "MediaPlaybackService was killed, and now restart and cancel Notification");
>             mMediaNotificationManager.cancelNotification();
>             stopSelf();
>             return START_NOT_STICKY;   //no need to restart this service when app crash or be killed
>         }
68,69c155,164
<     public void onDestroy() {}
< 
---
>     public void onDestroy() {
>         Log.d(TAG, "onDestroy");
>         ((MusicApp)getApplication()).removeMountCallback(this);
>         // Service is being killed, so make sure we release our resources
>         handleStopRequest("destroy");
>         mDelayedStopHandler.removeCallbacksAndMessages(null);
>         // Always release the MediaSession to clean up resources
>         // and notify associated MediaController(s).
>         mSession.release();
>     }
72c167,171
<         return null;
---
>         Log.d(TAG,
>                 "OnGetRoot: clientPackageName=" + clientPackageName + "; clientUid=" + clientUid
>                         + " ; rootHints=" + rootHints);
>         // Allow everyone to browse
>         return new BrowserRoot(MEDIA_ID_ROOT, null);
77,78c176,338
<         result.sendResult(null);
<         return;
---
>         Log.d(TAG, "OnLoadChildren: parentMediaId=" + parentMediaId);
>         //  Browsing not allowed
>         if (parentMediaId == null) {
>             result.sendResult(null);
>             return;
>         }
>         if (!mMusicProvider.isInitialized()) {
>             // Use result.detach to allow calling result.sendResult from another thread:
>             result.detach();
> 
>             mMusicProvider.retrieveMediaAsync(new MusicProvider.MusicProviderCallback() {
>                 @Override
>                 public void onMusicCatalogReady(boolean success) {
>                     Log.d(TAG, "Received catalog result, success:  " + String.valueOf(success));
>                     if (success) {
>                          List<MediaItem> mediaItems = new ArrayList<>();
> 
>                          switch (parentMediaId) {
>                             case MEDIA_ID_ROOT:
>                                 Log.d(TAG, "OnLoadChildren.ROOT");
>                                 mediaItems.add(new MediaItem(new MediaDescription.Builder()
>                                                                      .setMediaId(MEDIA_ID_MUSICS_BY_ARTIST)
>                                                                      .setTitle("Artists")
>                                                                      .build(),
>                                         MediaItem.FLAG_BROWSABLE));
>                                 mediaItems.add(new MediaItem(new MediaDescription.Builder()
>                                                                      .setMediaId(MEDIA_ID_MUSICS_BY_ALBUM)
>                                                                      .setTitle("Albums")
>                                                                      .build(),
>                                         MediaItem.FLAG_BROWSABLE));
>                                 mediaItems.add(new MediaItem(new MediaDescription.Builder()
>                                                                      .setMediaId(MEDIA_ID_MUSICS_BY_SONG)
>                                                                      .setTitle("Songs")
>                                                                      .build(),
>                                         MediaItem.FLAG_BROWSABLE));
>                                 mediaItems.add(new MediaItem(new MediaDescription.Builder()
>                                                                      .setMediaId(MEDIA_ID_MUSICS_BY_PLAYLIST)
>                                                                      .setTitle("Playlists")
>                                                                      .build(),
>                                         MediaItem.FLAG_BROWSABLE));
>                                 break;
>                             case MEDIA_ID_MUSICS_BY_ARTIST:
>                                 Log.d(TAG, "OnLoadChildren.ARTIST");
>                                 for (String artist : mMusicProvider.getArtists()) {
>                                     MediaItem item = new MediaItem(
>                                             new MediaDescription.Builder()
>                                                     .setMediaId(MediaIDHelper.createBrowseCategoryMediaID(
>                                                             MEDIA_ID_MUSICS_BY_ARTIST, artist))
>                                                     .setTitle(artist)
>                                                     .build(),
>                                             MediaItem.FLAG_BROWSABLE);
>                                     mediaItems.add(item);
>                                 }
>                                 break;
>                             case MEDIA_ID_MUSICS_BY_PLAYLIST:
>                                 LogHelper.d(TAG, "OnLoadChildren.PLAYLIST");
>                                 for (String playlist : mMusicProvider.getPlaylists()) {
>                                     MediaItem item = new MediaItem(
>                                             new MediaDescription.Builder()
>                                                     .setMediaId(MediaIDHelper.createBrowseCategoryMediaID(
>                                                             MEDIA_ID_MUSICS_BY_PLAYLIST, playlist))
>                                                     .setTitle(playlist)
>                                                     .build(),
>                                             MediaItem.FLAG_BROWSABLE);
>                                     mediaItems.add(item);
>                                 }
>                                 break;
>                             case MEDIA_ID_MUSICS_BY_ALBUM:
>                                 Log.d(TAG, "OnLoadChildren.ALBUM");
>                                 loadAlbum(mMusicProvider.getAlbums(), mediaItems);
>                                 break;
>                             case MEDIA_ID_MUSICS_BY_SONG:
>                                 Log.d(TAG, "OnLoadChildren.SONG");
>                                 String hierarchyAwareMediaID = MediaIDHelper.createBrowseCategoryMediaID(
>                                         parentMediaId, MEDIA_ID_MUSICS_BY_SONG);
>                                 loadSong(mMusicProvider.getMusicList(), mediaItems, hierarchyAwareMediaID);
>                                 break;
>                             default:
>                                 if (parentMediaId.startsWith(MEDIA_ID_MUSICS_BY_ARTIST)) {
>                                     String artist = MediaIDHelper.getHierarchy(parentMediaId)[1];
>                                     Log.d(TAG, "OnLoadChildren.SONGS_BY_ARTIST  artist=" + artist);
>                                     loadAlbum(mMusicProvider.getAlbumByArtist(artist), mediaItems);
>                                 } else if (parentMediaId.startsWith(MEDIA_ID_MUSICS_BY_ALBUM)) {
>                                     String album = MediaIDHelper.getHierarchy(parentMediaId)[1];
>                                     Log.d(TAG, "OnLoadChildren.SONGS_BY_ALBUM  album=" + album);
>                                     loadSong(mMusicProvider.getMusicsByAlbum(album), mediaItems, parentMediaId);
>                                 } else if (parentMediaId.startsWith(MEDIA_ID_MUSICS_BY_PLAYLIST)) {
>                                     String playlist = MediaIDHelper.getHierarchy(parentMediaId)[1];
>                                     LogHelper.d(TAG, "OnLoadChildren.SONGS_BY_PLAYLIST playlist=", playlist);
>                                     if (playlist.equals(MEDIA_ID_NOW_PLAYING) && mPlayingQueue != null
>                                             && mPlayingQueue.size() > 0) {
>                                         loadPlayingQueue(mediaItems, parentMediaId);
>                                     } else {
>                                         loadSong(mMusicProvider.getMusicsByPlaylist(playlist), mediaItems,
>                                                 parentMediaId);
>                                     }
>                                 } else {
>                                     Log.w(TAG, "Skipping unmatched parentMediaId: " + parentMediaId);
>                                 }
>                                 break;
>                         }
>                         Log.d(TAG,
>                                 "OnLoadChildren sending " + mediaItems.size() + " results for "
>                                         + parentMediaId);
>                         result.sendResult(mediaItems);
>                     } else {
>                                 result.sendResult(Collections.emptyList());
>                             }
>                         }
>                     });
> 
>         }
>     }
> 
>     private void loadPlayingQueue(List<MediaItem> mediaItems, String parentId) {
>         for (MediaSession.QueueItem queueItem : mPlayingQueue) {
>             MediaItem mediaItem =
>                     new MediaItem(queueItem.getDescription(), MediaItem.FLAG_PLAYABLE);
>             mediaItems.add(mediaItem);
>         }
>     }
> 
>     private void loadSong(
>             Iterable<MediaMetadata> songList, List<MediaItem> mediaItems, String parentId) {
>         for (MediaMetadata metadata : songList) {
>             String hierarchyAwareMediaID =
>                     MediaIDHelper.createMediaID(metadata.getDescription().getMediaId(), parentId);
>             Bundle songExtra = new Bundle();
>             songExtra.putLong(MediaMetadata.METADATA_KEY_DURATION,
>                     metadata.getLong(MediaMetadata.METADATA_KEY_DURATION));
>             String title = metadata.getString(MediaMetadata.METADATA_KEY_TITLE);
>             String artistName = metadata.getString(MediaMetadata.METADATA_KEY_ARTIST);
>             MediaItem item = new MediaItem(new MediaDescription.Builder()
>                                                    .setMediaId(hierarchyAwareMediaID)
>                                                    .setTitle(title)
>                                                    .setSubtitle(artistName)
>                                                    .setExtras(songExtra)
>                                                    .build(),
>                     MediaItem.FLAG_PLAYABLE);
>             mediaItems.add(item);
>         }
>     }
> 
>     private void loadAlbum(Iterable<MediaMetadata> albumList, List<MediaItem> mediaItems) {
>         for (MediaMetadata albumMetadata : albumList) {
>             String albumName = albumMetadata.getString(MediaMetadata.METADATA_KEY_ALBUM);
>             String artistName = albumMetadata.getString(MediaMetadata.METADATA_KEY_ARTIST);
>             Bundle albumExtra = new Bundle();
>             albumExtra.putLong(MediaMetadata.METADATA_KEY_NUM_TRACKS,
>                     albumMetadata.getLong(MediaMetadata.METADATA_KEY_NUM_TRACKS));
>             MediaItem item = new MediaItem(
>                     new MediaDescription.Builder()
>                             .setMediaId(MediaIDHelper.createBrowseCategoryMediaID(
>                                     MEDIA_ID_MUSICS_BY_ALBUM, albumName))
>                             .setTitle(albumName)
>                             .setSubtitle(artistName)
>                             .setIconBitmap(
>                                     albumMetadata.getBitmap(MediaMetadata.METADATA_KEY_ALBUM_ART))
>                             .setExtras(albumExtra)
>                             .build(),
>                     MediaItem.FLAG_BROWSABLE);
>             mediaItems.add(item);
>         }
83c343,357
<         public void onPlay() {}
---
>         public void onPlay() {
>             Log.d(TAG, "play");
> 
>             if (mPlayingQueue == null || mPlayingQueue.isEmpty()) {
>                 mPlayingQueue = QueueHelper.getRandomQueue(mMusicProvider);
>                 mSession.setQueue(mPlayingQueue);
>                 mSession.setQueueTitle(getString(R.string.random_queue_title));
>                 // start playing from the beginning of the queue
>                 mCurrentIndexOnQueue = 0;
>             }
> 
>             if (mPlayingQueue != null && !mPlayingQueue.isEmpty()) {
>                 handlePlayRequest();
>             }
>         }
86c360,369
<         public void onSkipToQueueItem(long queueId) {}
---
>         public void onSkipToQueueItem(long queueId) {
>             LogHelper.d(TAG, "OnSkipToQueueItem:", queueId);
> 
>             if (mPlayingQueue != null && !mPlayingQueue.isEmpty()) {
>                 // set the current index on queue from the music Id:
>                 mCurrentIndexOnQueue = QueueHelper.getMusicIndexOnQueue(mPlayingQueue, queueId);
>                 // play the music
>                 handlePlayRequest();
>             }
>         }
89c372,380
<         public void onSeekTo(long position) {}
---
>         public void onSeekTo(long position) {
>             Log.d(TAG, "onSeekTo:" + position);
>             mPlayback.seekTo((int) position);
>             // when the song play complete, and we seekTo somewhere, we should play it again
>             if (mPlayback.getState() == PlaybackState.STATE_STOPPED) {
>                 mCurrentIndexOnQueue--;
>                 handlePlayRequest();
>             }
>         }
92c383,409
<         public void onPlayFromMediaId(String mediaId, Bundle extras) {}
---
>         public void onPlayFromMediaId(String mediaId, Bundle extras) {
>             LogHelper.d(TAG, "playFromMediaId mediaId:", mediaId, "  extras=", extras);
> 
>             // The mediaId used here is not the unique musicId. This one comes from the
>             // MediaBrowser, and is actually a "hierarchy-aware mediaID": a concatenation of
>             // the hierarchy in MediaBrowser and the actual unique musicID. This is necessary
>             // so we can build the correct playing queue, based on where the track was
>             // selected from.
>             mPlayingQueue = QueueHelper.getPlayingQueue(mediaId, mMusicProvider);
>             mSession.setQueue(mPlayingQueue);
>             String queueTitle = getString(R.string.browse_musics_by_genre_subtitle,
>                     MediaIDHelper.extractBrowseCategoryValueFromMediaID(mediaId));
>             mSession.setQueueTitle(queueTitle);
> 
>             if (mPlayingQueue != null && !mPlayingQueue.isEmpty()) {
>                 // set the current index on queue from the media Id:
>                 mCurrentIndexOnQueue = QueueHelper.getMusicIndexOnQueue(mPlayingQueue, mediaId);
> 
>                 if (mCurrentIndexOnQueue < 0) {
>                     LogHelper.e(TAG, "playFromMediaId: media ID ", mediaId,
>                             " could not be found on queue. Ignoring.");
>                 } else {
>                     // play the music
>                     handlePlayRequest();
>                 }
>             }
>         }
95c412,415
<         public void onPause() {}
---
>         public void onPause() {
>             LogHelper.d(TAG, "pause. current state=" + mPlayback.getState());
>             handlePauseRequest();
>         }
98c418,421
<         public void onStop() {}
---
>         public void onStop() {
>             LogHelper.d(TAG, "stop. current state=" + mPlayback.getState());
>             handleStopRequest(null);
>         }
101c424,441
<         public void onSkipToNext() {}
---
>         public void onSkipToNext() {
>             LogHelper.d(TAG, "skipToNext");
>             mCurrentIndexOnQueue++;
>             if (mPlayingQueue != null && mCurrentIndexOnQueue >= mPlayingQueue.size()) {
>                 // This sample's behavior: skipping to next when in last song returns to the
>                 // first song.
>                 mCurrentIndexOnQueue = 0;
>             }
>             if (QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>                 handlePlayRequest();
>             } else {
>                 LogHelper.e(TAG,
>                         "skipToNext: cannot skip to next. next Index=" + mCurrentIndexOnQueue
>                                 + " queue length="
>                                 + (mPlayingQueue == null ? "null" : mPlayingQueue.size()));
>                 handleStopRequest("Cannot skip");
>             }
>         }
104c444,462
<         public void onSkipToPrevious() {}
---
>         public void onSkipToPrevious() {
>             LogHelper.d(TAG, "skipToPrevious");
>             mCurrentIndexOnQueue--;
>             if (mPlayingQueue != null && mCurrentIndexOnQueue < 0) {
>                 // This sample's behavior: skipping to previous when in first song restarts the
>                 // first song.
>                 //mCurrentIndexOnQueue = 0;
>                 mCurrentIndexOnQueue = mPlayingQueue.size() -1;
>             }
>             if (QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>                 handlePlayRequest();
>             } else {
>                 LogHelper.e(TAG,
>                         "skipToPrevious: cannot skip to previous. previous Index="
>                                 + mCurrentIndexOnQueue + " queue length="
>                                 + (mPlayingQueue == null ? "null" : mPlayingQueue.size()));
>                 handleStopRequest("Cannot skip");
>             }
>         }
107c465,489
<         public void onPlayFromSearch(String query, Bundle extras) {}
---
>         public void onPlayFromSearch(String query, Bundle extras) {
>             LogHelper.d(TAG, "playFromSearch  query=", query);
> 
>             if (TextUtils.isEmpty(query)) {
>                 // A generic search like "Play music" sends an empty query
>                 // and it's expected that we start playing something. What will be played depends
>                 // on the app: favorite playlist, "I'm feeling lucky", most recent, etc.
>                 mPlayingQueue = QueueHelper.getRandomQueue(mMusicProvider);
>             } else {
>                 mPlayingQueue = QueueHelper.getPlayingQueueFromSearch(query, mMusicProvider);
>             }
> 
>             LogHelper.d(TAG, "playFromSearch  playqueue.length=" + mPlayingQueue.size());
>             mSession.setQueue(mPlayingQueue);
> 
>             if (mPlayingQueue != null && !mPlayingQueue.isEmpty()) {
>                 // immediately start playing from the beginning of the search results
>                 mCurrentIndexOnQueue = 0;
> 
>                 handlePlayRequest();
>             } else {
>                 // if nothing was found, we need to warn the user and stop playing
>                 handleStopRequest(getString(R.string.no_search_results));
>             }
>         }
110c492,793
<         public void onCustomAction(String action, Bundle extras) {}
---
>         public void onCustomAction(String action, Bundle extras) {
>             LogHelper.d(TAG, "onCustomAction action=", action, ", extras=", extras);
>             switch (action) {
>                 case CMD_REPEAT:
>                     mRepeatMode = RepeatMode.values()[extras.getInt(REPEAT_MODE)];
>                     mExtras.putInt(REPEAT_MODE, mRepeatMode.ordinal());
>                     mSession.setExtras(mExtras);
>                     LogHelper.d(TAG, "modified repeatMode=", mRepeatMode);
>                     break;
>                 default:
>                     LogHelper.d(TAG, "Unkown action=", action);
>                     break;
>             }
>         }
>     }
> 
>     /**
>      * Handle a request to play music
>      */
>     private void handlePlayRequest() {
>         LogHelper.d(TAG, "handlePlayRequest: mState=" + mPlayback.getState());
>         mDelayedStopHandler.removeCallbacksAndMessages(null);
>         LogHelper.v(TAG, "Starting service");
>         // The MusicService needs to keep running even after the calling MediaBrowser
>         // is disconnected. Call startService(Intent) and then stopSelf(..) when we no longer
>         // need to play media.
>         if( Build.VERSION.SDK_INT >= 26 ){
>               startForegroundService(new Intent(getApplicationContext(), MediaPlaybackService.class));
>               mMediaNotificationManager.startNotification();
>         }else{
>               startService(new Intent(getApplicationContext(), MediaPlaybackService.class));
>         }
>         mServiceStarted = true;
> 
>         if (!mSession.isActive()) {
>             mSession.setActive(true);
>         }
> 
>         if (QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>             updateMetadata();
>             mPlayback.play(mPlayingQueue.get(mCurrentIndexOnQueue));
>         }
>     }
> 
>     /**
>      * Handle a request to pause music
>      */
>     private void handlePauseRequest() {
>         LogHelper.d(TAG, "handlePauseRequest: mState=" + mPlayback.getState());
>         mPlayback.pause();
>         // reset the delayed stop handler.
>         mDelayedStopHandler.removeCallbacksAndMessages(null);
>         mDelayedStopHandler.sendEmptyMessageDelayed(0, STOP_DELAY);
>     }
> 
>     /**
>      * Handle a request to stop music
>      */
>     private void handleStopRequest(String withError) {
>         LogHelper.d(
>                 TAG, "handleStopRequest: mState=" + mPlayback.getState() + " error=", withError);
>         mPlayback.stop(true);
>         // reset the delayed stop handler.
>         mDelayedStopHandler.removeCallbacksAndMessages(null);
>         mDelayedStopHandler.sendEmptyMessageDelayed(0, STOP_DELAY);
> 
>         updatePlaybackState(withError);
> 
>         // service is no longer necessary. Will be started again if needed.
>         if (!"destroy".equals(withError))
>             stopSelf();
>         mServiceStarted = false;
>     }
> 
>     private void updateMetadata() {
>         if (!QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>             LogHelper.e(TAG, "Can't retrieve current metadata.");
>             updatePlaybackState(getResources().getString(R.string.error_no_metadata));
>             return;
>         }
>         MediaSession.QueueItem queueItem = mPlayingQueue.get(mCurrentIndexOnQueue);
>         String musicId =
>                 MediaIDHelper.extractMusicIDFromMediaID(queueItem.getDescription().getMediaId());
>         MediaMetadata track = mMusicProvider.getMusicByMediaId(musicId).getMetadata();
>         final String trackId = track.getString(MediaMetadata.METADATA_KEY_MEDIA_ID);
>         if (!musicId.equals(trackId)) {
>             IllegalStateException e = new IllegalStateException("track ID should match musicId.");
>             LogHelper.e(TAG, "track ID should match musicId.", " musicId=", musicId,
>                     " trackId=", trackId,
>                     " mediaId from queueItem=", queueItem.getDescription().getMediaId(),
>                     " title from queueItem=", queueItem.getDescription().getTitle(),
>                     " mediaId from track=", track.getDescription().getMediaId(),
>                     " title from track=", track.getDescription().getTitle(),
>                     " source.hashcode from track=",
>                     track.getString(MusicProvider.CUSTOM_METADATA_TRACK_SOURCE).hashCode(), e);
>             throw e;
>         }
>         LogHelper.d(TAG, "Updating metadata for MusicID= " + musicId);
>         mSession.setMetadata(track);
> 
>         // Set the proper album artwork on the media session, so it can be shown in the
>         // locked screen and in other places.
>         if (track.getDescription().getIconBitmap() == null
>                 && track.getDescription().getIconUri() != null) {
>             String albumUri = track.getDescription().getIconUri().toString();
>             AlbumArtCache.getInstance().fetch(albumUri, new AlbumArtCache.FetchListener() {
>                 @Override
>                 public void onFetched(String artUrl, Bitmap bitmap, Bitmap icon) {
>                     MediaSession.QueueItem queueItem = mPlayingQueue.get(mCurrentIndexOnQueue);
>                     MediaMetadata track = mMusicProvider.getMusicByMediaId(trackId).getMetadata();
>                     track = new MediaMetadata
>                                     .Builder(track)
> 
>                                     // set high resolution bitmap in METADATA_KEY_ALBUM_ART. This is
>                                     // used, for
>                                     // example, on the lockscreen background when the media session
>                                     // is active.
>                                     .putBitmap(MediaMetadata.METADATA_KEY_ALBUM_ART, bitmap)
> 
>                                     // set small version of the album art in the DISPLAY_ICON. This
>                                     // is used on
>                                     // the MediaDescription and thus it should be small to be
>                                     // serialized if
>                                     // necessary..
>                                     .putBitmap(MediaMetadata.METADATA_KEY_DISPLAY_ICON, icon)
> 
>                                     .build();
> 
>                     mMusicProvider.updateMusic(trackId, track);
> 
>                     // If we are still playing the same music
>                     String currentPlayingId = MediaIDHelper.extractMusicIDFromMediaID(
>                             queueItem.getDescription().getMediaId());
>                     if (trackId.equals(currentPlayingId)) {
>                         mSession.setMetadata(track);
>                     }
>                 }
>             });
>         }
>     }
> 
>     /**
>      * Update the current media player state, optionally showing an error message.
>      *
>      * @param error if not null, error message to present to the user.
>      */
>     private void updatePlaybackState(String error) {
>         LogHelper.d(TAG, "updatePlaybackState, playback state=" + mPlayback.getState());
>         long position = PlaybackState.PLAYBACK_POSITION_UNKNOWN;
>         if (mPlayback != null && mPlayback.isConnected()) {
>             position = mPlayback.getCurrentStreamPosition();
>         }
> 
>         PlaybackState.Builder stateBuilder =
>                 new PlaybackState.Builder().setActions(getAvailableActions());
> 
>         int state = mPlayback.getState();
> 
>         // If there is an error message, send it to the playback state:
>         if (error != null) {
>             // Error states are really only supposed to be used for errors that cause playback to
>             // stop unexpectedly and persist until the user takes action to fix it.
>             stateBuilder.setErrorMessage(error);
>             state = PlaybackState.STATE_ERROR;
>         }
>         stateBuilder.setState(state, position, 1.0f, SystemClock.elapsedRealtime());
> 
>         // Set the activeQueueItemId if the current index is valid.
>         if (QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>             MediaSession.QueueItem item = mPlayingQueue.get(mCurrentIndexOnQueue);
>             stateBuilder.setActiveQueueItemId(item.getQueueId());
>         }
> 
>         mSession.setPlaybackState(stateBuilder.build());
> 
>         if (state == PlaybackState.STATE_PLAYING || state == PlaybackState.STATE_PAUSED) {
>             mMediaNotificationManager.startNotification();
>         }
>     }
> 
>     private long getAvailableActions() {
>         long actions = PlaybackState.ACTION_PLAY | PlaybackState.ACTION_PLAY_FROM_MEDIA_ID
>                 | PlaybackState.ACTION_PLAY_FROM_SEARCH;
>         if (mPlayingQueue == null || mPlayingQueue.isEmpty()) {
>             return actions;
>         }
>         if (mPlayback.isPlaying()) {
>             actions |= PlaybackState.ACTION_PAUSE;
>         }
>         if (mCurrentIndexOnQueue > 0) {
>             actions |= PlaybackState.ACTION_SKIP_TO_PREVIOUS;
>         }
>         if (mCurrentIndexOnQueue < mPlayingQueue.size() - 1) {
>             actions |= PlaybackState.ACTION_SKIP_TO_NEXT;
>         }
>         return actions;
>     }
> 
>     private MediaMetadata getCurrentPlayingMusic() {
>         if (QueueHelper.isIndexPlayable(mCurrentIndexOnQueue, mPlayingQueue)) {
>             MediaSession.QueueItem item = mPlayingQueue.get(mCurrentIndexOnQueue);
>             if (item != null) {
>                 LogHelper.d(TAG,
>                         "getCurrentPlayingMusic for musicId=", item.getDescription().getMediaId());
>                 return mMusicProvider
>                         .getMusicByMediaId(MediaIDHelper.extractMusicIDFromMediaID(
>                                 item.getDescription().getMediaId()))
>                         .getMetadata();
>             }
>         }
>         return null;
>     }
> 
>     /**
>      * Implementation of the Playback.Callback interface
>      */
>     @Override
>     public void onCompletion() {
>         // The media player finished playing the current song, so we go ahead
>         // and start the next.
>         if (mPlayingQueue != null && !mPlayingQueue.isEmpty()) {
>             switch (mRepeatMode) {
>                 case REPEAT_ALL:
>                     // Increase the index
>                     mCurrentIndexOnQueue++;
>                     // Restart queue when reaching the end
>                     if (mCurrentIndexOnQueue >= mPlayingQueue.size()) {
>                         mCurrentIndexOnQueue = 0;
>                     }
>                     break;
>                 case REPEAT_CURRENT:
>                     // Do not change the index
>                     break;
>                 case REPEAT_NONE:
>                 default:
>                     // Increase the index
>                     mCurrentIndexOnQueue++;
>                     // Stop the queue when reaching the end
>                     if (mCurrentIndexOnQueue >= mPlayingQueue.size()) {
>                         handleStopRequest(null);
>                         return;
>                     }
>                     break;
>             }
>             handlePlayRequest();
>         } else {
>             // If there is nothing to play, we stop and release the resources:
>             handleStopRequest(null);
>         }
>     }
> 
>     @Override
>     public void onPlaybackStatusChanged(int state) {
>         updatePlaybackState(null);
>     }
> 
>     @Override
>     public void onError(String error) {
>         updatePlaybackState(error);
>     }
> 
>     /**
>      * A simple handler that stops the service if playback is not active (playing)
>      */
>     private static class DelayedStopHandler extends Handler {
>         private final WeakReference<MediaPlaybackService> mWeakReference;
> 
>         private DelayedStopHandler(MediaPlaybackService service) {
>             mWeakReference = new WeakReference<>(service);
>         }
> 
>         @Override
>         public void handleMessage(Message msg) {
>             MediaPlaybackService service = mWeakReference.get();
>             if (service != null && service.mPlayback != null) {
>                 if (service.mPlayback.isPlaying()) {
>                     Log.d(TAG, "Ignoring delayed stop since the media player is in use.");
>                     return;
>                 }
>                 Log.d(TAG, "Stopping service with delay handler.");
>                 service.stopSelf();
>                 service.mServiceStarted = false;
>             }
>         }
>     }
> 
>     @Override
>     public void onAppMountChanged(boolean isMounted) {
>         LogHelper.d(TAG, "mount changed: isMounted: " + isMounted + ", stop playing ... ");
>         // when mount or unmount we:
>         // 1. stop music play
>         // 2. cancel foreground service and notification
>         // 3. check service destory
>         //
>         // this handle is for no activity just background play music case, we let service destroy when mount or unmount.
>         // for MediaBrowser session can re-build an new one to referesh media list.
>         /*
>         handleStopRequest("mount changed");
>         mMediaNotificationManager.stopNotification();
>         mDelayedStopHandler.removeCallbacksAndMessages(null);
>         mDelayedStopHandler.sendEmptyMessage(0);
>         */
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: MusicAlphabetIndexer.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: MusicApp.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Music/src/com/android/music/MusicBrowserActivity.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music/MusicBrowserActivity.java
18a19
> import android.Manifest.permission;
19a21
> import android.content.pm.PackageManager;
20a23
> import com.android.music.utils.LogHelper;
22,24d24
< /**
<  * A skeleton class that provides empty implementations for Activity class.
<  */
25a26,29
>     private static final String TAG = LogHelper.makeLogTag(MusicBrowserActivity.class);
> 
>     private static final int MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE = 42;
> 
27a32,34
>     /**
>      * Called when the activity is first created.
>      */
29c36,56
<     public void onCreate(Bundle icicle) {}
---
>     public void onCreate(Bundle icicle) {
>         super.onCreate(icicle);
>         LogHelper.d(TAG, "onCreate()");
>         if (checkSelfPermission(permission.READ_EXTERNAL_STORAGE)
>                 != PackageManager.PERMISSION_GRANTED) {
>             requestPermissions(new String[] {permission.READ_EXTERNAL_STORAGE},
>                     MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);
>             return;
>         }
>         initApp();
>     }
> 
>     public void initApp() {
>         int activeTab = MusicUtils.getIntPref(this, "activetab", R.id.artisttab);
>         LogHelper.d(TAG, "initApp() activeTab = ", activeTab);
>         if (activeTab != R.id.artisttab && activeTab != R.id.albumtab && activeTab != R.id.songtab
>                 && activeTab != R.id.playlisttab) {
>             activeTab = R.id.artisttab;
>         }
>         MusicUtils.activateTab(this, activeTab);
>     }
32c59,62
<     public void onDestroy() {}
---
>     public void onDestroy() {
>         LogHelper.d(TAG, "onDestroy()");
>         super.onDestroy();
>     }
36c66,77
<             int requestCode, String permissions[], int[] grantResults) {}
---
>             int requestCode, String permissions[], int[] grantResults) {
>         switch (requestCode) {
>             case MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE: {
>                 if (grantResults.length == 0
>                         || grantResults[0] != PackageManager.PERMISSION_GRANTED) {
>                     finish();
>                     return;
>                 }
>                 initApp();
>             }
>         }
>     }
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Music/src/com/android/music/MusicPicker.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music/MusicPicker.java
2c2
<  * Copyright (C) 2019 The Android Open Source Project
---
>  * Copyright (C) 2008 The Android Open Source Project
19a20,22
> import android.content.AsyncQueryHandler;
> import android.content.ContentUris;
> import android.content.Context;
20a24,28
> import android.database.CharArrayBuffer;
> import android.database.Cursor;
> import android.media.AudioManager;
> import android.media.MediaPlayer;
> import android.media.RingtoneManager;
22a31
> import android.os.Parcelable;
23a33
> import android.text.TextUtils;
27a38,41
> import android.view.ViewGroup;
> import android.view.Window;
> import android.view.animation.AnimationUtils;
> import android.widget.ImageView;
28a43,51
> import android.widget.RadioButton;
> import android.widget.SectionIndexer;
> import android.widget.SimpleCursorAdapter;
> import android.widget.TextView;
> 
> import java.io.IOException;
> import java.text.Collator;
> import java.util.Formatter;
> import java.util.Locale;
31c54,63
<  * A placeholder class to handle android.intent.action.PICK Intent.
---
>  * Activity allowing the user to select a music track on the device, and
>  * return it to its caller.  The music picker user interface is fairly
>  * extensive, providing information about each track like the music
>  * application (title, author, album, duration), as well as the ability to
>  * previous tracks and sort them in different orders.
>  *
>  * <p>This class also illustrates how you can load data from a content
>  * provider asynchronously, providing a good UI while doing so, perform
>  * indexing of the content for use inside of a {@link FastScrollView}, and
>  * perform filtering of the data as the user presses keys.
33c65,66
< public class MusicPicker extends ListActivity implements View.OnClickListener {
---
> public class MusicPicker
>         extends ListActivity implements View.OnClickListener, MediaPlayer.OnCompletionListener {
36a70,101
>     /** Holds the previous state of the list, to restore after the async
>      * query has completed. */
>     static final String LIST_STATE_KEY = "liststate";
>     /** Remember whether the list last had focus for restoring its state. */
>     static final String FOCUS_KEY = "focused";
>     /** Remember the last ordering mode for restoring state. */
>     static final String SORT_MODE_KEY = "sortMode";
> 
>     /** Arbitrary number, doesn't matter since we only do one query type. */
>     static final int MY_QUERY_TOKEN = 42;
> 
>     /** Menu item to sort the music list by track title. */
>     static final int TRACK_MENU = Menu.FIRST;
>     /** Menu item to sort the music list by album title. */
>     static final int ALBUM_MENU = Menu.FIRST + 1;
>     /** Menu item to sort the music list by artist name. */
>     static final int ARTIST_MENU = Menu.FIRST + 2;
> 
>     /** These are the columns in the music cursor that we are interested in. */
>     static final String[] CURSOR_COLS = new String[] {MediaStore.Audio.Media._ID,
>             MediaStore.Audio.Media.TITLE, MediaStore.Audio.Media.TITLE_KEY,
>             MediaStore.Audio.Media.DATA, MediaStore.Audio.Media.ALBUM,
>             MediaStore.Audio.Media.ARTIST, MediaStore.Audio.Media.ARTIST_ID,
>             MediaStore.Audio.Media.DURATION, MediaStore.Audio.Media.TRACK};
> 
>     /** Formatting optimization to avoid creating many temporary objects. */
>     static StringBuilder sFormatBuilder = new StringBuilder();
>     /** Formatting optimization to avoid creating many temporary objects. */
>     static Formatter sFormatter = new Formatter(sFormatBuilder, Locale.getDefault());
>     /** Formatting optimization to avoid creating many temporary objects. */
>     static final Object[] sTimeArgs = new Object[5];
> 
39a105,396
>     /** This is the adapter used to display all of the tracks. */
>     TrackListAdapter mAdapter;
>     /** Our instance of QueryHandler used to perform async background queries. */
>     QueryHandler mQueryHandler;
> 
>     /** Used to keep track of the last scroll state of the list. */
>     Parcelable mListState = null;
>     /** Used to keep track of whether the list last had focus. */
>     boolean mListHasFocus;
> 
>     /** The current cursor on the music that is being displayed. */
>     Cursor mCursor;
>     /** The actual sort order the user has selected. */
>     int mSortMode = -1;
>     /** SQL order by string describing the currently selected sort order. */
>     String mSortOrder;
> 
>     /** Container of the in-screen progress indicator, to be able to hide it
>      * when done loading the initial cursor. */
>     View mProgressContainer;
>     /** Container of the list view hierarchy, to be able to show it when done
>      * loading the initial cursor. */
>     View mListContainer;
>     /** Set to true when the list view has been shown for the first time. */
>     boolean mListShown;
> 
>     /** View holding the okay button. */
>     View mOkayButton;
>     /** View holding the cancel button. */
>     View mCancelButton;
> 
>     /** Which track row ID the user has last selected. */
>     long mSelectedId = -1;
>     /** Completel Uri that the user has last selected. */
>     Uri mSelectedUri;
> 
>     /** If >= 0, we are currently playing a track for preview, and this is its
>      * row ID. */
>     long mPlayingId = -1;
> 
>     /** This is used for playing previews of the music files. */
>     MediaPlayer mMediaPlayer;
> 
>     /**
>      * A special implementation of SimpleCursorAdapter that knows how to bind
>      * our cursor data to our list item structure, and takes care of other
>      * advanced features such as indexing and filtering.
>      */
>     class TrackListAdapter extends SimpleCursorAdapter implements SectionIndexer {
>         final ListView mListView;
> 
>         private final StringBuilder mBuilder = new StringBuilder();
>         private final String mUnknownArtist;
>         private final String mUnknownAlbum;
> 
>         private int mIdIdx;
>         private int mTitleIdx;
>         private int mArtistIdx;
>         private int mAlbumIdx;
>         private int mDurationIdx;
> 
>         private boolean mLoading = true;
>         private int mIndexerSortMode;
>         private MusicAlphabetIndexer mIndexer;
> 
>         class ViewHolder {
>             TextView line1;
>             TextView line2;
>             TextView duration;
>             RadioButton radio;
>             ImageView play_indicator;
>             CharArrayBuffer buffer1;
>             char[] buffer2;
>         }
> 
>         TrackListAdapter(Context context, ListView listView, int layout, String[] from, int[] to) {
>             super(context, layout, null, from, to);
>             mListView = listView;
>             mUnknownArtist = context.getString(R.string.unknown_artist_name);
>             mUnknownAlbum = context.getString(R.string.unknown_album_name);
>         }
> 
>         /**
>          * The mLoading flag is set while we are performing a background
>          * query, to avoid displaying the "No music" empty view during
>          * this time.
>          */
>         public void setLoading(boolean loading) {
>             mLoading = loading;
>         }
> 
>         @Override
>         public boolean isEmpty() {
>             if (mLoading) {
>                 // We don't want the empty state to show when loading.
>                 return false;
>             } else {
>                 return super.isEmpty();
>             }
>         }
> 
>         @Override
>         public View newView(Context context, Cursor cursor, ViewGroup parent) {
>             View v = super.newView(context, cursor, parent);
>             ViewHolder vh = new ViewHolder();
>             vh.line1 = (TextView) v.findViewById(R.id.line1);
>             vh.line2 = (TextView) v.findViewById(R.id.line2);
>             vh.duration = (TextView) v.findViewById(R.id.duration);
>             vh.radio = (RadioButton) v.findViewById(R.id.radio);
>             vh.play_indicator = (ImageView) v.findViewById(R.id.play_indicator);
>             vh.buffer1 = new CharArrayBuffer(100);
>             vh.buffer2 = new char[200];
>             v.setTag(vh);
>             return v;
>         }
> 
>         @Override
>         public void bindView(View view, Context context, Cursor cursor) {
>             ViewHolder vh = (ViewHolder) view.getTag();
> 
>             cursor.copyStringToBuffer(mTitleIdx, vh.buffer1);
>             vh.line1.setText(vh.buffer1.data, 0, vh.buffer1.sizeCopied);
> 
>             int secs = cursor.getInt(mDurationIdx) / 1000;
>             if (secs == 0) {
>                 vh.duration.setText("");
>             } else {
>                 vh.duration.setText(MusicUtils.makeTimeString(context, secs));
>             }
> 
>             final StringBuilder builder = mBuilder;
>             builder.delete(0, builder.length());
> 
>             String name = cursor.getString(mAlbumIdx);
>             if (name == null || name.equals("<unknown>")) {
>                 builder.append(mUnknownAlbum);
>             } else {
>                 builder.append(name);
>             }
>             builder.append('\n');
>             name = cursor.getString(mArtistIdx);
>             if (name == null || name.equals("<unknown>")) {
>                 builder.append(mUnknownArtist);
>             } else {
>                 builder.append(name);
>             }
>             int len = builder.length();
>             if (vh.buffer2.length < len) {
>                 vh.buffer2 = new char[len];
>             }
>             builder.getChars(0, len, vh.buffer2, 0);
>             vh.line2.setText(vh.buffer2, 0, len);
> 
>             // Update the checkbox of the item, based on which the user last
>             // selected.  Note that doing it this way means we must have the
>             // list view update all of its items when the selected item
>             // changes.
>             final long id = cursor.getLong(mIdIdx);
>             vh.radio.setChecked(id == mSelectedId);
>             if (DBG)
>                 Log.v(TAG,
>                         "Binding id=" + id + " sel=" + mSelectedId + " playing=" + mPlayingId
>                                 + " cursor=" + cursor);
> 
>             // Likewise, display the "now playing" icon if this item is
>             // currently being previewed for the user.
>             ImageView iv = vh.play_indicator;
>             if (id == mPlayingId) {
>                 iv.setImageResource(R.drawable.indicator_ic_mp_playing_list);
>                 iv.setVisibility(View.VISIBLE);
>             } else {
>                 iv.setVisibility(View.GONE);
>             }
>         }
> 
>         /**
>          * This method is called whenever we receive a new cursor due to
>          * an async query, and must take care of plugging the new one in
>          * to the adapter.
>          */
>         @Override
>         public void changeCursor(Cursor cursor) {
>             super.changeCursor(cursor);
>             if (DBG)
>                 Log.v(TAG, "Setting cursor to: " + cursor + " from: " + MusicPicker.this.mCursor);
> 
>             MusicPicker.this.mCursor = cursor;
> 
>             if (cursor != null) {
>                 // Retrieve indices of the various columns we are interested in.
>                 mIdIdx = cursor.getColumnIndex(MediaStore.Audio.Media._ID);
>                 mTitleIdx = cursor.getColumnIndex(MediaStore.Audio.Media.TITLE);
>                 mArtistIdx = cursor.getColumnIndex(MediaStore.Audio.Media.ARTIST);
>                 mAlbumIdx = cursor.getColumnIndex(MediaStore.Audio.Media.ALBUM);
>                 mDurationIdx = cursor.getColumnIndex(MediaStore.Audio.Media.DURATION);
> 
>                 // If the sort mode has changed, or we haven't yet created an
>                 // indexer one, then create a new one that is indexing the
>                 // appropriate column based on the sort mode.
>                 if (mIndexerSortMode != mSortMode || mIndexer == null) {
>                     mIndexerSortMode = mSortMode;
>                     int idx = mTitleIdx;
>                     switch (mIndexerSortMode) {
>                         case ARTIST_MENU:
>                             idx = mArtistIdx;
>                             break;
>                         case ALBUM_MENU:
>                             idx = mAlbumIdx;
>                             break;
>                     }
>                     mIndexer = new MusicAlphabetIndexer(
>                             cursor, idx, getResources().getString(R.string.fast_scroll_alphabet));
> 
>                     // If we have a valid indexer, but the cursor has changed since
>                     // its last use, then point it to the current cursor.
>                 } else {
>                     mIndexer.setCursor(cursor);
>                 }
>             }
> 
>             // Ensure that the list is shown (and initial progress indicator
>             // hidden) in case this is the first cursor we have gotten.
>             makeListShown();
>         }
> 
>         /**
>          * This method is called from a background thread by the list view
>          * when the user has typed a letter that should result in a filtering
>          * of the displayed items.  It returns a Cursor, when will then be
>          * handed to changeCursor.
>          */
>         @Override
>         public Cursor runQueryOnBackgroundThread(CharSequence constraint) {
>             if (DBG) Log.v(TAG, "Getting new cursor...");
>             return doQuery(true, constraint.toString());
>         }
> 
>         public int getPositionForSection(int section) {
>             Cursor cursor = getCursor();
>             if (cursor == null) {
>                 // No cursor, the section doesn't exist so just return 0
>                 return 0;
>             }
> 
>             return mIndexer.getPositionForSection(section);
>         }
> 
>         public int getSectionForPosition(int position) {
>             return 0;
>         }
> 
>         public Object[] getSections() {
>             if (mIndexer != null) {
>                 return mIndexer.getSections();
>             }
>             return null;
>         }
>     }
> 
>     /**
>      * This is our specialization of AsyncQueryHandler applies new cursors
>      * to our state as they become available.
>      */
>     private final class QueryHandler extends AsyncQueryHandler {
>         public QueryHandler(Context context) {
>             super(context.getContentResolver());
>         }
> 
>         @Override
>         protected void onQueryComplete(int token, Object cookie, Cursor cursor) {
>             if (!isFinishing()) {
>                 // Update the adapter: we are no longer loading, and have
>                 // a new cursor for it.
>                 mAdapter.setLoading(false);
>                 mAdapter.changeCursor(cursor);
>                 setProgressBarIndeterminateVisibility(false);
> 
>                 // Now that the cursor is populated again, it's possible to restore the list state
>                 if (mListState != null) {
>                     getListView().onRestoreInstanceState(mListState);
>                     if (mListHasFocus) {
>                         getListView().requestFocus();
>                     }
>                     mListHasFocus = false;
>                     mListState = null;
>                 }
>             } else {
>                 cursor.close();
>             }
>         }
>     }
> 
43a401,415
> 
>         requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
> 
>         int sortMode = TRACK_MENU;
>         if (icicle == null) {
>             mSelectedUri =
>                     getIntent().getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI);
>         } else {
>             mSelectedUri = (Uri) icicle.getParcelable(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI);
>             // Retrieve list state. This will be applied after the
>             // QueryHandler has run
>             mListState = icicle.getParcelable(LIST_STATE_KEY);
>             mListHasFocus = icicle.getBoolean(FOCUS_KEY);
>             sortMode = icicle.getInt(SORT_MODE_KEY, sortMode);
>         }
47a420,424
>             if (mBaseUri == null) {
>                 Log.w("MusicPicker", "No data URI given to PICK action");
>                 finish();
>                 return;
>             }
49c426,476
<         Log.w("MusicPicker", "Doesn't handle for data URI given to PICK action");
---
> 
>         setContentView(R.layout.music_picker);
> 
>         mSortOrder = MediaStore.Audio.Media.TITLE_KEY;
> 
>         final ListView listView = getListView();
> 
>         listView.setItemsCanFocus(false);
> 
>         mAdapter = new TrackListAdapter(
>                 this, listView, R.layout.music_picker_item, new String[] {}, new int[] {});
> 
>         setListAdapter(mAdapter);
> 
>         listView.setTextFilterEnabled(true);
> 
>         // We manually save/restore the listview state
>         listView.setSaveEnabled(false);
> 
>         mQueryHandler = new QueryHandler(this);
> 
>         mProgressContainer = findViewById(R.id.progressContainer);
>         mListContainer = findViewById(R.id.listContainer);
> 
>         mOkayButton = findViewById(R.id.okayButton);
>         mOkayButton.setOnClickListener(this);
>         mCancelButton = findViewById(R.id.cancelButton);
>         mCancelButton.setOnClickListener(this);
> 
>         // If there is a currently selected Uri, then try to determine who
>         // it is.
>         if (mSelectedUri != null) {
>             Uri.Builder builder = mSelectedUri.buildUpon();
>             String path = mSelectedUri.getEncodedPath();
>             int idx = path.lastIndexOf('/');
>             if (idx >= 0) {
>                 path = path.substring(0, idx);
>             }
>             builder.encodedPath(path);
>             Uri baseSelectedUri = builder.build();
>             if (DBG) Log.v(TAG, "Selected Uri: " + mSelectedUri);
>             if (DBG) Log.v(TAG, "Selected base Uri: " + baseSelectedUri);
>             if (DBG) Log.v(TAG, "Base Uri: " + mBaseUri);
>             if (baseSelectedUri.equals(mBaseUri)) {
>                 // If the base Uri of the selected Uri is the same as our
>                 // content's base Uri, then use the selection!
>                 mSelectedId = ContentUris.parseId(mSelectedUri);
>             }
>         }
> 
>         setSortMode(sortMode);
54a482
>         doQuery(false, null);
58a487,489
>         if (setSortMode(item.getItemId())) {
>             return true;
>         }
64a496,498
>         menu.add(Menu.NONE, TRACK_MENU, Menu.NONE, R.string.sort_by_track);
>         menu.add(Menu.NONE, ALBUM_MENU, Menu.NONE, R.string.sort_by_album);
>         menu.add(Menu.NONE, ARTIST_MENU, Menu.NONE, R.string.sort_by_artist);
70a505,509
>         // Save list state in the bundle so we can restore it after the
>         // QueryHandler has run
>         icicle.putParcelable(LIST_STATE_KEY, getListView().onSaveInstanceState());
>         icicle.putBoolean(FOCUS_KEY, getListView().hasFocus());
>         icicle.putInt(SORT_MODE_KEY, mSortMode);
75a515
>         stopMediaPlayer();
80a521,615
> 
>         // We don't want the list to display the empty state, since when we
>         // resume it will still be there and show up while the new query is
>         // happening. After the async query finishes in response to onResume()
>         // setLoading(false) will be called.
>         mAdapter.setLoading(true);
>         mAdapter.changeCursor(null);
>     }
> 
>     /**
>      * Changes the current sort order, building the appropriate query string
>      * for the selected order.
>      */
>     boolean setSortMode(int sortMode) {
>         if (sortMode != mSortMode) {
>             switch (sortMode) {
>                 case TRACK_MENU:
>                     mSortMode = sortMode;
>                     mSortOrder = MediaStore.Audio.Media.TITLE_KEY;
>                     doQuery(false, null);
>                     return true;
>                 case ALBUM_MENU:
>                     mSortMode = sortMode;
>                     mSortOrder = MediaStore.Audio.Media.ALBUM_KEY + " ASC, "
>                             + MediaStore.Audio.Media.TRACK + " ASC, "
>                             + MediaStore.Audio.Media.TITLE_KEY + " ASC";
>                     doQuery(false, null);
>                     return true;
>                 case ARTIST_MENU:
>                     mSortMode = sortMode;
>                     mSortOrder = MediaStore.Audio.Media.ARTIST_KEY + " ASC, "
>                             + MediaStore.Audio.Media.ALBUM_KEY + " ASC, "
>                             + MediaStore.Audio.Media.TRACK + " ASC, "
>                             + MediaStore.Audio.Media.TITLE_KEY + " ASC";
>                     doQuery(false, null);
>                     return true;
>             }
>         }
>         return false;
>     }
> 
>     /**
>      * The first time this is called, we hide the large progress indicator
>      * and show the list view, doing fade animations between them.
>      */
>     void makeListShown() {
>         if (!mListShown) {
>             mListShown = true;
>             mProgressContainer.startAnimation(
>                     AnimationUtils.loadAnimation(this, android.R.anim.fade_out));
>             mProgressContainer.setVisibility(View.GONE);
>             mListContainer.startAnimation(
>                     AnimationUtils.loadAnimation(this, android.R.anim.fade_in));
>             mListContainer.setVisibility(View.VISIBLE);
>         }
>     }
> 
>     /**
>      * Common method for performing a query of the music database, called for
>      * both top-level queries and filtering.
>      *
>      * @param sync If true, this query should be done synchronously and the
>      * resulting cursor returned.  If false, it will be done asynchronously and
>      * null returned.
>      * @param filterstring If non-null, this is a filter to apply to the query.
>      */
>     Cursor doQuery(boolean sync, String filterstring) {
>         // Cancel any pending queries
>         mQueryHandler.cancelOperation(MY_QUERY_TOKEN);
> 
>         StringBuilder where = new StringBuilder();
>         where.append(MediaStore.Audio.Media.TITLE + " != ''");
> 
>         // We want to show all audio files, even recordings.  Enforcing the
>         // following condition would hide recordings.
>         // where.append(" AND " + MediaStore.Audio.Media.IS_MUSIC + "=1");
> 
>         Uri uri = mBaseUri;
>         if (!TextUtils.isEmpty(filterstring)) {
>             uri = uri.buildUpon().appendQueryParameter("filter", Uri.encode(filterstring)).build();
>         }
> 
>         if (sync) {
>             try {
>                 return getContentResolver().query(
>                         uri, CURSOR_COLS, where.toString(), null, mSortOrder);
>             } catch (UnsupportedOperationException ex) {
>             }
>         } else {
>             mAdapter.setLoading(true);
>             setProgressBarIndeterminateVisibility(true);
>             mQueryHandler.startQuery(
>                     MY_QUERY_TOKEN, null, uri, CURSOR_COLS, where.toString(), null, mSortOrder);
>         }
>         return null;
84c619,653
<     protected void onListItemClick(ListView l, View v, int position, long id) {}
---
>     protected void onListItemClick(ListView l, View v, int position, long id) {
>         mCursor.moveToPosition(position);
>         if (DBG)
>             Log.v(TAG,
>                     "Click on " + position + " (id=" + id + ", cursid="
>                             + mCursor.getLong(mCursor.getColumnIndex(MediaStore.Audio.Media._ID))
>                             + ") in cursor " + mCursor + " adapter=" + l.getAdapter());
>         setSelected(mCursor);
>     }
> 
>     void setSelected(Cursor c) {
>         Uri uri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
>         long newId = mCursor.getLong(mCursor.getColumnIndex(MediaStore.Audio.Media._ID));
>         mSelectedUri = ContentUris.withAppendedId(uri, newId);
> 
>         mSelectedId = newId;
>         if (newId != mPlayingId || mMediaPlayer == null) {
>             stopMediaPlayer();
>             mMediaPlayer = new MediaPlayer();
>             try {
>                 mMediaPlayer.setDataSource(this, mSelectedUri);
>                 mMediaPlayer.setOnCompletionListener(this);
>                 mMediaPlayer.setAudioStreamType(AudioManager.STREAM_RING);
>                 mMediaPlayer.prepare();
>                 mMediaPlayer.start();
>                 mPlayingId = newId;
>                 getListView().invalidateViews();
>             } catch (IOException e) {
>                 Log.w("MusicPicker", "Unable to play track", e);
>             }
>         } else if (mMediaPlayer != null) {
>             stopMediaPlayer();
>             getListView().invalidateViews();
>         }
>     }
86,87c655,688
<     public void onClick(View v) {}
< }
---
>     public void onCompletion(MediaPlayer mp) {
>         if (mMediaPlayer == mp) {
>             mp.stop();
>             mp.release();
>             mMediaPlayer = null;
>             mPlayingId = -1;
>             getListView().invalidateViews();
>         }
>     }
> 
>     void stopMediaPlayer() {
>         if (mMediaPlayer != null) {
>             mMediaPlayer.stop();
>             mMediaPlayer.release();
>             mMediaPlayer = null;
>             mPlayingId = -1;
>         }
>     }
> 
>     public void onClick(View v) {
>         switch (v.getId()) {
>             case R.id.okayButton:
>                 if (mSelectedId >= 0) {
>                     setResult(RESULT_OK, new Intent().setData(mSelectedUri));
>                     finish();
>                 }
>                 break;
> 
>             case R.id.cancelButton:
>                 finish();
>                 break;
>         }
>     }
> }
\ No newline at end of file
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: MusicUtils.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: PlaylistBrowserActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: RepeatingImageButton.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: SharedPreferencesCompat.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: TouchInterceptor.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: TrackBrowserActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: utils
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music/src/com/android/music: VerticalTextSpinner.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Music: tests
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/MusicFX: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Nfc: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Nfc/nci/jni/NfcTag.cpp /home/yajat/Desktop/H618-Android12-Src/packages/apps/Nfc/nci/jni/NfcTag.cpp
291a292,295
>   } else {
>     LOG(ERROR) << StringPrintf("%s: exceed max=%d", fn, MAX_NUM_TECHNOLOGY);
>     android_errorWriteLog(0x534e4554, "189942532");
>     goto TheEnd;
415a420
> TheEnd:
1627c1632
< int NfcTag::getNumDiscNtf() { return mNumDiscNtf; }
\ No newline at end of file
---
> int NfcTag::getNumDiscNtf() { return mNumDiscNtf; }
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/OnDeviceAppPrediction: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/OneTimeInitializer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/PhoneCommon: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Protips: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Provision: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/QuickAccessWallet: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/QuickSearchBox: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/QuickSearchBox/src/com/android/quicksearchbox/SearchWidgetProvider.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/QuickSearchBox/src/com/android/quicksearchbox/SearchWidgetProvider.java
180a181
>             intent.setPackage(context.getPackageName());
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/RemoteProvisioner: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/SafetyRegulatoryInfo: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/SampleLocationAttribution: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/SecureElement: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/Android.bp /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/Android.bp
75a76
>         "softwinner.display.output",
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/AndroidManifest.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/AndroidManifest.xml
997a998,1009
>         <service
>             android:name=".display.AwReadingModeTileService"
>             android:label="@string/reading_mode"
>             android:icon="@drawable/tile_icon_reading_mode"
>             android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
>             android:exported="true"
>             android:enabled="true">
>             <intent-filter>
>                 <action android:name="android.service.quicksettings.action.QS_TILE" />
>             </intent-filter>
>         </service>
> 
2204a2217
>                   android:permission="android.permission.BLUETOOTH_PRIVILEGED"
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Settings: .git
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/drawable: tile_icon_reading_mode.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/drawable-nodpi: gesture_swipe_screenrecord
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/drawable-nodpi: gesture_swipe_screenshot
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/raw: gesture_swipe_screenrecord.mp4
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/raw: gesture_swipe_screenshot.mp4
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values: aw_arrays.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values: aw_config.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values: aw_strings.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values: custom_config.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values: custom.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values/strings.xml
3351a3352,3353
>     <!-- About phone screen, status item label  [CHAR LIMIT=40] -->
>     <string name="version_number">Version number</string>
4033a4036,4040
>     <!-- recovery mode -->
>     <string name="reboot_recovery_title">Recovery mode</string>
>     <string name="reboot_recovery_desc">Reboot to recovery mode now?</string>
>     <string name="reboot_recovery_button">REBOOT NOW</string>
> 
4805c4812
<     <string name="clear_data_dlg_text">All this app\u2019s data will be deleted permanently. This includes all files, settings, accounts, databases, etc.</string>
---
>     <string name="clear_data_dlg_text">This app\u2019s data will be permanently deleted. This includes files, settings, databases, and other app data.</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-af/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-af/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Alle data van hierdie program sal permanent uitgevee word. Dit sluit alle lêers, instellings, rekeninge, databasisse ens. in."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Hierdie program se data sal permanent uitgevee word. Dit sluit lêers, instellings, databasisse en ander programdata in."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-am/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-am/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"የዚህ መተግበሪያ ውሂቦች ሁሉ በቋሚነት ይሰረዛሉ።እነዚህም ፋይሎችን፣ ቅንብሮችን፣ መለያዎችን፣ የውሂብ ጎታዎች እና የመሳሰሉትን ያካትታሉ።"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"የዚህ መተግበሪያ ውሂብ እስከመጨረሻው ይሰረዛል። ይህ ፋይሎችን፣ ቅንብሮችን፣ የውሂብ ጎታን እና ሌላ የመተግበሪያ ውሂብን ያካትታል።"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ar/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ar/strings.xml
2188c2188
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"سيتم حذف جميع بيانات هذا التطبيق نهائيًا. ويشمل ذلك جميع الملفات والإعدادات والحسابات وقواعد البيانات وما إلى ذلك."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"سيتم حذف بيانات هذا التطبيق نهائيًا، بما في ذلك الملفات والإعدادات وقواعد البيانات وبيانات التطبيق الأخرى."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-as/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-as/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"এই এপটোৰ সকলো ডেটা স্থায়ীভাৱে মচা হ\'ব। সেই ডেটাসমূহৰ ভিতৰত ফাইল ছেটিং, একাউণ্ট, ডেটাবে\'ছ আদি অন্তৰ্ভুক্ত।"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"এই এপৰ ডেটাখিনি স্থায়ীভাৱে মচা হ’ব। ইয়াত ফাইল, ছেটিং, ডেটাবে’ছ আৰু অন্য এপৰ ডেটা অন্তৰ্ভুক্ত।"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-az/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-az/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Bu tətbiq datası həmişəlik silinəcək. Buraya bütün fayllar, ayarlar, hesablar, verilənlər bazası və sairləri aiddir."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Bu tətbiq datası həmişəlik silinəcək. Buraya fayllar, ayarlar, data bazaları və digər tətbiq datası daxildir."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-be/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-be/strings.xml
2142c2142
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Усе даныя гэтай праграмы будуць назаўсёды выдалены. Гэта датычыцца ўсiх файлаў, налад, уліковых запісаў, баз даных і г. д."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Даныя гэтай праграмы (файлы, налады, базы даных і г. д.) будуць выдалены назаўсёды."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-bg/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-bg/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Всички данни на това приложение ще бъдат изтрити за постоянно. Това включва всички файлове, настройки, профили и т.н."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Данните на приложението ще бъдат изтрити за постоянно. Това включва файловете, настройките, базите от данни и други данни от приложението."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-bn/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-bn/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"এই অ্যাপের সমস্ত ডেটা স্থায়ীভাবে মুছে যাবে। সমস্ত ফাইল, সেটিংস, অ্যাকাউন্ট, ডেটাবেস ইত্যাদি সবই।"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"এই অ্যাপের ডেটা স্থায়ীভাবে মুছে ফেলা হবে। এর মধ্যে ফাইল, সেটিংস, ডেটাবেস এবং অন্য অ্যাপ ডেটা আছে।"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-bs/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-bs/strings.xml
2116c2116
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Svi podaci ove aplikacije će biti trajno izbrisani. To uključuje sve fajlove, postavke, račune, baze podataka itd."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Ovi podaci aplikacije će se trajno izbrisati. To obuhvata fajlove, postavke, baze podataka i ostale podatke aplikacije."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-b+sr+Latn/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-b+sr+Latn/strings.xml
2116c2116
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Svi podaci ove aplikacije biće trajno izbrisani. To obuhvata sve datoteke, podešavanja, naloge, baze podataka itd."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Podaci ove aplikacije će se trajno izbrisati. To obuhvata fajlove, podešavanja, baze podataka i druge podatke aplikacija."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ca/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ca/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Se suprimiran totes les dades d\'aquesta aplicació permanentment. Això inclou tots els fitxers, les opcions de configuració, els comptes, les bases de dades, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Les dades d'aquesta aplicació se suprimiran permanentment. Això inclou fitxers, opcions de configuració, bases de dades i altres dades de l'aplicació."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-cs/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-cs/strings.xml
2140c2140
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Veškerá data (všechny soubory, nastavení, účty, databáze apod.) této aplikace budou trvale vymazána."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Data této aplikace budou trvale smazána. To zahrnuje soubory, nastavení, databáze a další data aplikace."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-da/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-da/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Alle data i denne app slettes permanent. Det omfatter alle filer, indstillinger, konti, databaser osv."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Denne apps data slettes permanent. Det omfatter filer, indstillinger, databaser og andre appdata."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-de/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-de/strings.xml
2095c2095
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Alle Daten dieser App werden endgültig gelöscht. Dazu zählen alle Dateien, Einstellungen, Konten, Datenbanken usw."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Die Daten dieser App werden endgültig gelöscht. Dazu gehören Dateien, Einstellungen, Datenbanken und sonstige App-Daten."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-el/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-el/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Όλα τα δεδομένα της εφαρμογής θα διαγραφούν μόνιμα. Αυτό περιλαμβάνει όλα τα αρχεία, τις ρυθμίσεις, τους λογαριασμούς, τις βάσεις δεδομένων κ.λπ."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Τα δεδομένα αυτής της εφαρμογής θα διαγραφούν οριστικά. Σε αυτά περιλαμβάνονται αρχεία, ρυθμίσεις, βάσεις δεδομένων και άλλα δεδομένα εφαρμογών."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-en-rAU/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-en-rAU/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"All of this app\'s data will be deleted permanently. This includes all files, settings, accounts, databases, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"This app’s data will be permanently deleted. This includes files, settings, databases and other app data."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-en-rCA/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-en-rCA/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"All of this app\'s data will be deleted permanently. This includes all files, settings, accounts, databases, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"This app’s data will be permanently deleted. This includes files, settings, databases and other app data."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-en-rGB/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-en-rGB/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"All of this app\'s data will be deleted permanently. This includes all files, settings, accounts, databases, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"This app’s data will be permanently deleted. This includes files, settings, databases and other app data."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-en-rIN/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-en-rIN/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"All of this app\'s data will be deleted permanently. This includes all files, settings, accounts, databases, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"This app’s data will be permanently deleted. This includes files, settings, databases and other app data."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-en-rXC/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-en-rXC/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"‎‏‎‎‎‎‎‏‎‏‏‏‎‎‎‎‎‎‏‎‎‏‎‎‎‏‎‏‏‏‏‏‏‏‏‎‏‏‎‏‎‎‏‏‏‎‏‎‎‏‏‎‏‏‎‏‏‎‏‏‏‎‏‎‏‏‎‏‏‏‎‏‎‎‎‏‎‎‏‎‏‎‎‏‎‏‎‏‎‏‎‏‏‏‎‎‎All this app’s data will be deleted permanently. This includes all files, settings, accounts, databases, etc.‎‏‎‎‏‎"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"‎‏‎‎‎‎‎‏‎‏‏‏‎‎‎‎‎‎‏‎‎‏‎‎‎‏‎‏‏‏‏‎‎‏‏‏‏‎‏‎‏‏‏‏‏‎‎‎‎‎‏‏‎‎‏‎‎‏‏‎‎‏‏‎‏‎‎‎‎‎‎‏‏‏‏‎‏‎‏‏‎‏‏‎‎‏‏‎‏‏‏‏‎‎This app’s data will be permanently deleted. This includes files, settings, databases, and other app data.‎‏‎‎‏‎"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-es/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-es/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Todos los datos de esta aplicación se eliminarán de forma permanente. Esto incluye todos los archivos, ajustes, cuentas, bases de datos, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Los datos de esta aplicación se eliminarán de forma permanente, incluidos los archivos, ajustes, bases de datos y otros datos relacionados con ella."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-es-rUS/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-es-rUS/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Se eliminarán de forma permanente todos los datos de esta aplicación, incluidos archivos, ajustes, cuentas, bases de datos, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Se borrarán de forma permanente los datos de esta app. Se incluyen archivos, parámetros de configuración, bases de datos y otros datos de app."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-et/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-et/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Rakenduse kõik andmed kustutatakse lõplikult. See hõlmab kõiki faile, seadeid, kontosid, andmebaase jne."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Selle rakenduse andmed kustutatakse jäädavalt. See hõlmab faile, seadeid, andmebaase ja muid rakenduse andmeid."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-eu/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-eu/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Aplikazio honetako datu guztiak betiko ezabatuko dira; besteak beste, fitxategi, ezarpen, kontu, datu-base eta abar guztiak."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Aplikazio honen datuak betiko ezabatuko dira; besteak beste, fitxategiak, ezarpenak, datu-baseak eta aplikazioko beste batu batzuk."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-fa/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-fa/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"همه داده‌های این برنامه به صورت دائمی حذف می‌شود. این شامل تمام فایل‌ها، تنظیمات، حساب‌ها، پایگاه‌های داده و دیگر موارد می‌شود."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"داده‌های این برنامه به‌طور دائم حذف خواهد شد. این شامل فایل‌ها، تنظیمات، پایگاه‌های داده، و دیگر داده‌های برنامه می‌شود."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-fi/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-fi/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Kaikki tämän sovelluksen tiedot poistetaan pysyvästi. Tähän sisältyvät kaikki tiedostot, asetukset, tilit, tietokannat jne."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Sovelluksen data poistetaan pysyvästi. Tämä koskee tiedostoja, asetuksia, tietokantoja ja muuta sovellusdataa."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-fr/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-fr/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Toutes les données de cette application (fichiers, paramètres, comptes, bases de données, etc.) seront définitivement supprimées."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Les données de cette application (fichiers, paramètres, comptes, bases de données, etc.) seront définitivement supprimées."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-fr-rCA/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-fr-rCA/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Toutes les données de cette application seront supprimées définitivement, y compris tous les fichiers, les paramètres, les comptes, les bases de données, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Les données de cette application seront définitivement supprimées. Cela inclut les fichiers, les paramètres, les bases de données et d'autres données de l'application."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-gl/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-gl/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Eliminaranse todos os datos desta aplicación permanentemente. Entre estes inclúense todos os ficheiros, opcións de configuracións, contas, bases de datos etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Os datos desta aplicación (como os ficheiros, a configuración e as bases de datos) eliminaranse de forma permanente."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-gu/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-gu/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"આ તમામ ઍપનો ડેટા કાયમી રીતે ડિલીટ કરવામાં આવશે. આમાં તમામ ફાઇલો, સેટિંગ, એકાઉન્ટ, ડેટાબેઝ વગેરે શામેલ છે."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"આ ઍપના ડેટાને કાયમી રીતે કાઢી નાખવામાં આવશે. આમાં ફાઇલો, સેટિંગ, ડેટાબેઝ અને અન્ય ઍપ ડેટા પણ શામેલ હોય છે."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-hi/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-hi/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"इस ऐप्लिकेशन का पूरा डेटा हमेशा के लिए मिटा दिया जाएगा. इसमें सभी फ़ाइलें, सेटिंग, खाते, डेटाबेस वगैरह शामिल हैं."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"इस ऐप्लिकेशन का डेटा हमेशा के लिए मिटा दिया जाएगा. इसमें फ़ाइलें, सेटिंग, डेटाबेस, और ऐप्लिकेशन का दूसरा डेटा शामिल है."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-hr/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-hr/strings.xml
2118c2118
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Svi podaci ove aplikacije trajno će se izbrisati. To obuhvaća sve datoteke, postavke, račune, baze podataka itd."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Podaci aplikacije trajno će se izbrisati. To uključuje datoteke, postavke, baze podataka i druge podatke aplikacije."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-hu/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-hu/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Az alkalmazás minden adatát véglegesen törölni fogja. Ez magában foglalja az összes fájlt, beállítást, fiókot, adatbázist stb."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Az alkalmazás adatai véglegesen törlődnek. Így törlődni fognak a fájlok, a beállítások, az adatbázisok és az egyéb alkalmazásadatok is."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-hy/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-hy/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Այս հավելվածի բոլոր տվյալներն ընդմիշտ կջնջվեն: Այն կներառի բոլոր ֆայլերը, կարգավորումները, հաշիվները, տվյալների շտեմարանները և այլն:"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Այս հավելվածի տվյալներն ընդմիշտ կջնջվեն։Դա վերաբերում է ֆայլերին, կարգավորումներին, տվյալների շտեմարաններին և հավելվածի այլ տվյալներին։"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-in/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-in/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Semua data aplikasi ini akan dihapus secara permanen, termasuk semua file, setelan, akun, database, dll."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Data aplikasi ini akan dihapus secara permanen. Data ini termasuk file, setelan, database, dan data aplikasi lainnya."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-is/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-is/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Öllum gögnum þessa forrits verður eytt fyrir fullt og allt. Í þessu felast allar skrár, stillingar, reikningar, gagnagrunnar o.s.frv."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Gögnum þessa forrits verður eytt fyrir fullt og allt. Þetta á við um skrár, stillingar, gagnagrunna og önnur forritsgögn."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-it/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-it/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Tutti i dati dell\'app verranno eliminati definitivamente, inclusi tutti i file, le impostazioni, gli account, i database e così via."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"I dati di questa app verranno eliminati definitivamente, inclusi file, impostazioni, database e altri dati dell'app."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-iw/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-iw/strings.xml
2142c2142
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"כל נתוני האפליקציה יימחקו לתמיד. הנתונים האלה כוללים את כל הקבצים, ההגדרות, החשבונות, מסדי הנתונים וכדומה."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"נתוני האפליקציה יימחקו באופן סופי. לרבות קבצים, הגדרות, מסדי נתונים ונתונים אחרים מהאפליקציה."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ja/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ja/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"このアプリのすべてのデータ（ファイル、設定、アカウント、データベースを含む）が完全に削除されます。"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"このアプリのデータが完全に削除されます。ファイル、設定、データベース、その他のアプリデータが対象になります。"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ka/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ka/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"აპის მონაცემები, მათ შორის ყველა ფაილი, პარამეტრი, ანგარიში, მონაცემთა ბაზა და ა.შ. სამუდამოდ წაიშლება."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ამ აპის მონაცემები სამუდამოდ წაიშლება. ეს ეხება ფაილებს, პარამეტრებს, მონაცემთა ბაზებსა და აპის სხვა მონაცემებს."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-kk/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-kk/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Бұл қолданбаның барлық дерегі біржола жойылады. Бұған барлық файл, параметр, есептік жазба, дерекқор және т.б. кіреді."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Бұл қолданбаның дерегі біржола жойылады. Оған файлдар, параметрлер, дерекқорлар және тағы басқа қолданба дерегі кіреді."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-km/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-km/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ទិន្នន័យ​របស់​កម្មវិធី​នេះ​ទាំងអស់​នឹង​ត្រូវ​បាន​លុប​ជា​អចិន្ត្រៃយ៍។ ទិន្នន័យទាំងនេះរួមមាន ឯកសារ​ទាំងអស់ ការ​កំណត់ គណនី មូលដ្ឋាន​ទិន្នន័យ ។ល។"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ទិន្នន័យ​របស់កម្មវិធីនេះ​នឹងត្រូវបានលុប​ជាអចិន្ត្រៃយ៍។ ទិន្នន័យនេះ​រួមមាន​ឯកសារ ការកំណត់ មូលដ្ឋាន​ទិន្នន័យ និង​ទិន្នន័យកម្មវិធី​ផ្សេងទៀត។"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-kn/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-kn/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ಈ ಆ್ಯಪ್‍‍ನ ಎಲ್ಲಾ ಡೇಟಾವನ್ನು ಶಾಶ್ವತವಾಗಿ ಅಳಿಸಲಾಗುತ್ತದೆ. ಇದರಲ್ಲಿ ಎಲ್ಲಾ ಫೈಲ್‌ಗಳು, ಸೆಟ್ಟಿಂಗ್‌ಗಳು, ಖಾತೆಗಳು, ಡೇಟಾಬೇಸ್‌ಗಳು, ಇತ್ಯಾದಿಗಳು ಸೇರಿರುತ್ತವೆ."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ಈ ಆ್ಯಪ್‌ನ ಡೇಟಾವನ್ನು ಶಾಶ್ವತವಾಗಿ ಅಳಿಸಲಾಗುವುದು. ಇದು ಫೈಲ್‌ಗಳು, ಸೆಟ್ಟಿಂಗ್‌ಗಳು, ಡೇಟಾಬೇಸ್‌ಗಳು ಮತ್ತು ಇತರ ಆ್ಯಪ್ ಡೇಟಾ ಒಳಗೊಂಡಿದೆ."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ko/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ko/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"앱의 전체 데이터가 영구적으로 삭제됩니다. 여기에는 모든 파일, 설정, 계정, 데이터베이스 등이 포함됩니다."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"이 앱 데이터가 영구적으로 삭제됩니다. 삭제 대상에는 파일, 설정, 데이터베이스, 기타 앱 데이터가 포함됩니다."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ky/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ky/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Бул колдонмодогу файлдар, жөндөөлөр, аккаунттар жана маалымат базасы сыяктуу бардык нерселер биротоло өчүрүлөт."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Бул колдонмодогу маалымат биротоло жок кылынат. Ага файлдар, жөндөөлөр, дайындар базалары жана колдонмонун башка дайындары кирет."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-lo/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-lo/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ຂໍ້ມູນທັງໝົດຂອງແອັບນີ້ຈະຖືກລຶບອອກຖາວອນ ເຊິ່ງຮວມເຖິງໄຟລ໌, ການຕັ້ງຄ່າ, ບັນຊີ, ຖານຂໍ້ມູນ ແລະ ອື່ນໆທັງໝົດນຳ."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ຂໍ້ມູນຂອງແອັບນີ້ຈະຖືກລຶບອອກຖາວອນ. ນີ້ຮວມເຖິງໄຟລ໌, ການຕັ້ງຄ່າ, ຖານຂໍ້ມູນ ແລະ ຂໍ້ມູນແອັບອື່ນໆນຳ"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-lt/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-lt/strings.xml
2140c2140
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Visi šios programos duomenys bus visam laikui ištrinti. Tai taikoma visiems failams, nustatymams, paskyroms, duomenims ir kt."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Šios programos duomenys bus visam laikui ištrinti. Įtraukiami failai, nustatymai, duomenų bazės ir kiti programos duomenys."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-lv/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-lv/strings.xml
2116c2116
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Tiks neatgriezeniski dzēsti visi šīs lietotnes dati, tostarp visi faili, iestatījumi, konti, datu bāzes un citi vienumi."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Tiks neatgriezeniski dzēsti šīs lietotnes dati, tostarp faili, iestatījumi, datu bāzes un citi lietotnes dati."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-mk/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-mk/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Сите податоци на оваа апликација ќе бидат трајно избришани. Ова ги опфаќа сите датотеки, поставки, сметки, бази на податоци итн."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Податоците од апликацијава трајно ќе се избришат. Ова вклучува датотеки, поставки, бази на податоци и други податоци од апликацијата."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ml/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ml/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ഈ ആപ്പിന്‍റെ എല്ലാ ഡാറ്റയും ശാശ്വതമായി ഇല്ലാതാക്കും. ഫയലുകൾ, ക്രമീകരണങ്ങൾ, അക്കൗണ്ടുകൾ, ഡാറ്റാബേസുകൾ തുടങ്ങിയവയെല്ലാം ഇതിൽ ഉൾപ്പെടും."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ഈ ആപ്പിന്റെ ഡാറ്റ ശാശ്വതമായി ഇല്ലാതാക്കും. ഇതിൽ ഫയലുകളും ക്രമീകരണവും ഡാറ്റാബേസുകളും മറ്റ് ആപ്പ് ഡാറ്റയും ഉൾപ്പെടുന്നു."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-mn/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-mn/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Энэ апп-н бүх өгөгдөл бүрмөсөн устах болно. Үүнд бүх файл, тохиргоо, бүртгэл, өгөгдөл гэх мэт орно."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Энэ аппын өгөгдлийг бүрмөсөн устгана. Үүнд файл, тохиргоо, өгөгдлийн бааз болон бусад аппын өгөгдөл багтана."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-mr/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-mr/strings.xml
2093c2093
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"या अ‍ॅपचा सर्व डेटा कायमचा हटवला जाईल. यात सर्व फाइल, सेटिंग्ज, खाती, डेटाबेस इ. समाविष्ट असेल."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"या ॲपचा डेटा कायमचा हटवला जाईल. यामध्ये फाइल, सेटिंग्ज, डेटाबेस आणि इतर अ‍ॅप डेटा यांचा समावेश आहे."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ms/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ms/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Semua data aplikasi ini akan dipadamkan secara kekal. Ini termasuk semua fail, tetapan, akaun, pangkalan data, dll."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Data apl ini akan dipadamkan secara kekal. Kandungan ini termasuk fail, tetapan, pangkalan data dan data apl yang lain."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-my/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-my/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ဤအက်ပ်၏ ဒေတာအားလုံးကို အပြီးဖျက်ပါမည်။ ဖိုင်၊ ဆက်တင်၊ အကောင့်၊ ဒေတာဘေ့စ်စသည်တို့ အားလုံးပါဝင်သည်။"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ဤအက်ပ်၏ ဒေတာကို အပြီးဖျက်ပါမည်။ ၎င်းတွင် ဖိုင်၊ ဆက်တင်၊ ဒေတာဘေ့စ်နှင့် အခြားအက်ပ် ဒေတာများ ပါဝင်သည်။"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-nb/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-nb/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Alle data i appen slettes permanent. Dette omfatter alle filer, innstillinger, kontoer, databaser osv."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Dataene i denne appen slettes permanent. Dette inkluderer filer, innstillinger, databaser og andre appdata."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ne/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ne/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"यस एपका सम्पूर्ण डेटाहरू स्थायी रूपमा मेटाइने छ। यसमा सम्पूर्ण फाइल, सेटिङ, खाताहरू, डेटाबेस आदि पर्दछन्।"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"यो एपका डेटा सदाका लागि मेटाइने छ। यसमा फाइल, सेटिङ, डेटाबेस र एपका अन्य डेटा पर्छन्।"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-nl/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-nl/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Alle gegevens van deze app worden permanent verwijderd. Dit omvat alle bestanden, instellingen, accounts, databases, enzovoort."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"De gegevens van deze app worden definitief verwijderd. Dit omvat bestanden, instellingen, databases en andere app-gegevens."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-or/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-or/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ଏହି ଆପ୍‌ର ସମସ୍ତ ଡାଟା ସ୍ଥାୟୀ ଭାବେ ଡିଲିଟ୍‌ ହୋଇଯିବ। ଏଥିରେ ରହିଛି, ସମସ୍ତ ଫାଇଲ୍‌, ସେଟିଙ୍ଗ, ଆକାଉଣ୍ଟ, ଡାଟାବେସ୍‌ ଆଦି"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ଏହି ଆପର ଡାଟା ସ୍ଥାୟୀ ଭାବେ ଡିଲିଟ ହୋଇଯିବ। ଏଥିରେ ଫାଇଲ, ସେଟିଂସ, ଡାଟାବେସ ଏବଂ ଅନ୍ୟ ଆପ ଡାଟା ଅନ୍ତର୍ଭୁକ୍ତ।"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-pa/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-pa/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ਇਸ ਐਪ ਦਾ ਸਾਰਾ ਡਾਟਾ ਸਥਾਈ ਤੌਰ ਤੇ ਮਿਟਾਇਆ ਜਾਏਗਾ। ਇਸ ਵਿੱਚ ਸਾਰੀਆਂ ਫ਼ਾਈਲਾਂ, ਸੈਟਿੰਗਾਂ, ਖਾਤੇ, ਡਾਟਾਬੇਸ ਆਦਿ ਸ਼ਾਮਲ ਹਨ।"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ਇਸ ਐਪ ਦਾ ਡਾਟਾ ਪੱਕੇ ਤੌਰ 'ਤੇ ਮਿਟਾ ਦਿੱਤਾ ਜਾਵੇਗਾ। ਇਸ ਵਿੱਚ ਫ਼ਾਈਲਾਂ, ਸੈਟਿੰਗਾਂ, ਡਾਟਾਬੇਸ ਅਤੇ ਹੋਰ ਐਪ ਡਾਟਾ ਸ਼ਾਮਲ ਹੈ।"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-pl/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-pl/strings.xml
2140c2140
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Wszystkie dane tej aplikacji zostaną trwale usunięte. Dotyczy to wszystkich plików, ustawień, kont, baz danych itd."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Dane tej aplikacji zostaną trwale usunięte. Dotyczy to plików, ustawień, baz danych i innych danych aplikacji."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-pt/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-pt/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Todos os dados deste app serão excluídos permanentemente. Isso inclui todos os arquivos, configurações, contas, bancos de dados e outros."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Os dados do app serão excluídos permanentemente, incluindo arquivos, configurações, bancos de dados, entre outros."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-pt-rBR/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-pt-rBR/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Todos os dados deste app serão excluídos permanentemente. Isso inclui todos os arquivos, configurações, contas, bancos de dados e outros."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Os dados do app serão excluídos permanentemente, incluindo arquivos, configurações, bancos de dados, entre outros."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-pt-rPT/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-pt-rPT/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Todos os dados desta aplicação serão eliminados permanentemente. Isto inclui todos os ficheiros, definições, contas, bases de dados, etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Os dados desta app serão permanentemente eliminados. Estão incluídos ficheiros, definições, bases de dados e outros dados de apps."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ro/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ro/strings.xml
2118c2118
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Toate datele acestei aplicații vor fi șterse definitiv. Aici sunt incluse toate fișierele, setările, conturile, bazele de date etc."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Datele acestei aplicații vor fi șterse definitiv. Aici sunt incluse fișierele, setările, bazele de date și alte date ale aplicației."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ru/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ru/strings.xml
2140c2140
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Все данные этого приложения (включая файлы, базы данных, настройки, аккаунты и т. д.) будут удалены без возможности восстановления."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Данные этого приложения (включая файлы, базы данных, настройки и т. д.) будут удалены без возможности восстановления."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-si/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-si/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"මෙම යෙදුමේ සියලු දත්ත ස්ථිරව මකා දමනු ඇත. මෙයට සියලු ගොනු, සැකසීම්, ගිණුම්, දත්ත සමූහ සහ තවත් අඩංගුය."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"මෙම යෙදුමේ දත්ත ස්ථිරවම මකනු ඇත. මෙයට ගොනු, සැකසීම්, දත්ත සමුදායන් සහ වෙනත් යෙදුම් දත්ත ඇතුළත් වේ."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sk/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sk/strings.xml
2142c2142
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Všetky dáta tejto aplikácie vrátane súborov, nastavení, účtov, databáz atď. budú navždy odstránené."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Dáta tejto aplikácie budú natrvalo odstránené. Zahrnujú súbory, nastavenia, databázy a ďalšie dáta aplikácie."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sl/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sl/strings.xml
2142c2142
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Vsi podatki te aplikacije bodo trajno izbrisani. To med drugim vključuje vse datoteke, nastavitve, račune in podatkovne zbirke."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Podatki te aplikacije bodo trajno izbrisani. To vključuje datoteke, nastavitve, zbirke podatkov in druge podatke aplikacije."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sq/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sq/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Të gjitha të dhënat e këtij aplikacioni do të fshihen përgjithmonë. Kjo përfshin të gjithë skedarët, cilësimet, llogaritë, bazat e të dhënave etj."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Të dhënat e këtij aplikacioni do të fshihen përgjithmonë. Këtu përfshihen skedarët, cilësimet, bazat e të dhënave dhe të dhëna të tjera të aplikacionit."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sr/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sr/strings.xml
2116c2116
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Сви подаци ове апликације биће трајно избрисани. То обухвата све датотеке, подешавања, налоге, базе података итд."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Подаци ове апликације ће се трајно избрисати. То обухвата фајлове, подешавања, базе података и друге податке апликација."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sv/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sv/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Appens samtliga data tas bort permanent. Det inkluderar alla filer, inställningar, konton, databaser och så vidare."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Appens data raderas permanent. Detta omfattar filer, inställningar, databaser och annan appdata."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-sw/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-sw/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Data yote ya programu hii itafutwa kabisa. Hii inajumuisha faili, mipangilio, akaunti, hifadhidata zote na mengineyo."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Data iliyo kwenye programu hii itafutwa kabisa. Hii ni pamoja na faili, mipangilio, hifadhidata na data nyingine ya programu."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ta/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ta/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ஆப்ஸின் எல்லா தகவலும் நிரந்தரமாக நீக்கப்படும். இதில் எல்லா ஃபைல்களும், அமைப்புகளும், கணக்குகளும், தரவுத்தளங்களும், மேலும் பலவும் அடங்கும்."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"இந்த ஆப்ஸின் தரவு நிரந்தரமாக நீக்கப்படும். ஃபைல்கள், அமைப்புகள், தரவுத்தளங்கள், பிற ஆப்ஸ் தரவு ஆகியவை இதிலடங்கும்."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-te/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-te/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ఈ యాప్ డేటా మొత్తం శాశ్వతంగా తొలగించబడుతుంది. ఇందులో అన్ని ఫైళ్లు, సెట్టింగ్‌లు, ఖాతాలు, డేటాబేస్‌లు మొ. ఉన్నాయి."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ఈ యాప్ డేటా శాశ్వతంగా తొలగించబడుతుంది. ఇందులో ఫైల్స్, సెట్టింగ్‌లు, డేటాబేస్‌లు, ఇతర యాప్ డేటా ఉంటాయి."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-th/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-th/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"ระบบจะลบข้อมูลทั้งหมดของแอปนี้โดยถาวร ซึ่งรวมถึงไฟล์ การตั้งค่า บัญชี ฐานข้อมูล ฯลฯ"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"ระบบจะลบข้อมูลของแอปนี้อย่างถาวร ซึ่งรวมถึงไฟล์ การตั้งค่า ฐานข้อมูล และข้อมูลแอปอื่นๆ"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-tl/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-tl/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Permanenteng made-delete ang lahat ng data ng app na ito. Kabilang dito ang lahat ng file, setting, account, database, atbp."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Permanenteng made-delete ang data ng app na ito. Kasama rito ang mga file, setting, database, at iba pang data ng app."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-tr/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-tr/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Bu uygulamanın tüm verileri kalıcı olarak silinecek. Bu veriler arasında tüm dosyalar, ayarlar, hesaplar, veritabanları vb. yer alıyor."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Bu uygulamanın verileri kalıcı olarak silinecek. Buna dosyalar, ayarlar, veritabanları ve diğer uygulama verileri de dahildir."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-uk/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-uk/strings.xml
2140c2140
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Усі дані цього додатка буде видалено назавжди: файли, налаштування, облікові записи, бази даних тощо."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Дані цього додатка буде назавжди видалено. До них належать файли, налаштування, бази даних тощо."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-ur/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-ur/strings.xml
2092c2092
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"اس ایپ کا سبھی ڈیٹا مستقل طور پر حذف ہو جائے گا۔ اس میں سبھی فائلیں، ترتیبات، اکاؤنٹس، ڈیٹا بیسز وغیرہ شامل ہیں۔"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"اس ایپ کا ڈیٹا مستقل طور پر حذف کر دیا جائے گا۔ اس میں فائلز، ترتیبات، ڈیٹا بیس اور دیگر ایپ کا ڈیٹا شامل ہے۔"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-uz/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-uz/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Ushbu ilovaning barcha ma’lumotlari, jumladan, fayllar, ma’lumotlar bazalari, sozlamalar, hisoblar va boshqa narsalar o‘chirib tashlanadi. Keyin ularni qayta tiklab bo‘lmaydi."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Bu ilova maʼlumotlari butunlay oʻchirib tashlanadi. Unga fayllar, sozlamalar, ma’lumotlar bazalari va boshqa ilovaga tegishli maʼlumotlar kiradi"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-vi/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-vi/strings.xml
2094c2094
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Tất cả dữ liệu của ứng dụng này sẽ bị xóa vĩnh viễn, bao gồm tất cả các tệp, các tùy chọn cài đặt, tài khoản, cơ sở dữ liệu, v.v."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Dữ liệu của ứng dụng này sẽ bị xóa vĩnh viễn. Dữ liệu này bao gồm các tệp, chế độ cài đặt, cơ sở dữ liệu và dữ liệu ứng dụng khác."</string>
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zh-rCN: aw_strings.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zh-rCN: custom.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-zh-rCN/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zh-rCN/strings.xml
1479a1480
>     <string name="version_number">"版本号"</string>
1768a1770,1772
>     <string name="reboot_recovery_title">Recovery模式</string>
>     <string name="reboot_recovery_desc">现在重启进入recovery?</string>
>     <string name="reboot_recovery_button">立即重启</string>
2092c2096
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"系统会永久删除此应用的所有数据。删除的内容包括所有文件、设置、帐号、数据库等。"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"系统将永久删除此应用的数据，其中包括文件、设置、数据库和其他应用数据。"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-zh-rHK/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zh-rHK/strings.xml
2095c2095
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"這個應用程式的所有資料都將被永久刪除，包含所有檔案、設定、帳戶、資料庫等。"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"系統會永久刪除此應用程式的資料，包括檔案、設定、資料庫和其他應用程式資料。"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-zh-rTW/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zh-rTW/strings.xml
1770a1771,1773
>     <string name="reboot_recovery_title">Recovery模式</string>
>     <string name="reboot_recovery_desc">現在重啓進入recovery?</string>
>     <string name="reboot_recovery_button">立即重啓</string>
2094c2097
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"系統會永久刪除這個應用程式的所有資料，包含所有檔案、設定、帳戶、資料庫等。"</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"系統將永久刪除這個應用程式的資料，包括檔案、設定、資料庫和應用程式的其他資料。"</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/values-zu/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/values-zu/strings.xml
2093c2093
<     <string name="clear_data_dlg_text" msgid="7870723948123690332">"Yonke le datha yohlelo lokusebenza izosuswa ngokuphelele. Lokhu kuhlanganisa wonke amafayela, izilungiselelo, ama-akhawunti, izizinda zemininingwane nokunye."</string>
---
>     <string name="clear_data_dlg_text" msgid="1107610960337399006">"Idatha yale app izosuswa unomphela. Lokhu kuhlanganisa amafayela, amasethingi, isizindalwazi, nenye idatha ye-app."</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/xml/display_settings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml/display_settings.xml
61a62,71
>         <!-- AW CODE：[feat] add fresh mode for eink screen -->
>         <com.android.settings.display.awdisplay.AwEinkRefreshModeListPreference
>             android:key="eink_refresh_mode"
>             android:title="@string/eink_refresh_mode"
>             android:summary="@string/summary_placeholder"
>             android:entries="@array/eink_refresh_mode"
>             android:entryValues="@array/eink_refresh_mode"
>             settings:keywords="@string/keywords_eink_refresh_mode" />
>         <!-- AW:add end -->
> 
157a168,234
> 
>     <PreferenceCategory android:key="second_screen_setting"
>         android:title="@string/second_screen_setting">
>         <ListPreference
>             android:key="second_screen_output_mode"
>             android:title="@string/second_screen_output_mode"
>             android:summary="@string/second_screen_output_mode_summary"
>             android:entries="@array/hdmi_output_mode_entries"
>             android:entryValues="@array/hdmi_output_mode_values" />
>         <SwitchPreference
>             android:key="hdmi_fullscreen"
>             android:title="@string/hdmi_fullscreen"
>             android:summary="@string/hdmi_fullscreen_summary" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="second_screen_width_scale"
>             android:title="@string/second_screen_width_scale" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="second_screen_height_scale"
>             android:title="@string/second_screen_height_scale" />
>     </PreferenceCategory>
> 
>     <PreferenceCategory android:key="enhance_mode_setting"
>         android:title="@string/color_enhance">
>         <SwitchPreference
>             android:key="enhance_mode"
>             android:title="@string/color_enhance"
>             android:summary="@string/color_enhance_summary" />
>         <SwitchPreference
>             android:key="enhance_mode_demo"
>             android:title="@string/color_enhance_demo"
>             android:summary="@string/color_enhance_demo_summary" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="color_bright_setting"
>             android:title="@string/color_bright_setting" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="contrast_setting"
>             android:title="@string/contrast_setting" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="saturation_setting"
>             android:title="@string/saturation_setting" />
>         <SwitchPreference
>             android:key="black_white_mode"
>             android:title="@string/black_white_mode"
>             android:summary="@string/black_white_mode_summary"/>
>         </PreferenceCategory>
>     <PreferenceCategory android:key="smart_backlight_setting"
>         android:title="@string/smart_backlight">
>         <SwitchPreference
>             android:key="smart_backlight"
>             android:title="@string/smart_backlight"
>             android:summary="@string/smart_backlight_summary"/>
>         <SwitchPreference
>             android:key="smart_backlight_demo"
>             android:title="@string/smart_backlight_demo"
>             android:summary="@string/smart_backlight_demo_summary" />
>     </PreferenceCategory>
> 
>     <PreferenceCategory android:key="color_temperature_setting"
>         android:title="@string/color_temperature_scale">
>         <SwitchPreference
>             android:key="reading_mode"
>             android:title="@string/reading_mode" />
>         <com.android.settings.widget.SeekBarPreference
>             android:key="color_temperature_scale"
>             android:title="@string/color_temperature_scale" />
>     </PreferenceCategory>
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/xml/gestures.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml/gestures.xml
94a95,104
>     <Preference
>         android:key="gesture_swipe_screenshot_summary"
>         android:title="@string/title_gesture_screenshot"
>         android:fragment="com.android.settings.gestures.SwipeScreenShotSettings"
>         settings:controller="com.android.settings.gestures.SwipeScreenShotPreferenceController" />
>     <Preference
>         android:key="gesture_swipe_screenrecord_summary"
>         android:title="@string/title_gesture_screenrecord"
>         android:fragment="com.android.settings.gestures.SwipeScreenRecordSettings"
>         settings:controller="com.android.settings.gestures.SwipeScreenRecordPreferenceController" />
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/xml/my_device_info.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml/my_device_info.xml
126a127,134
>         <!-- Version number-->
>         <Preference
>             android:key="version_number"
>             android:order="42"
>             android:title="@string/version_number"
>             android:selectable="true"
>             android:summary="@string/summary_placeholder"/>
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/xml/reset_dashboard_fragment.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml/reset_dashboard_fragment.xml
36a37
>     <!--
41c42
< 
---
>     -->
49a51,55
> 
>     <!-- Reboot recovery -->
>     <Preference
>         android:key="reboot_recovery"
>         android:title="@string/reboot_recovery_title" />
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/res/xml/smart_battery_detail.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml/smart_battery_detail.xml
25c25
<     <com.android.settingslib.widget.IllustrationPreferencee
---
>     <com.android.settingslib.widget.IllustrationPreference
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml: swipe_screenrecord_settings.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml: swipe_screenshot_settings.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/res/xml: version_number.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/accessibility/AccessibilityFooterPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/accessibility/AccessibilityFooterPreferenceController.java
70a71
>         final Intent helpIntent;
72,77c73,78
<             footerPreference.setLearnMoreAction(view -> {
<                 final Intent helpIntent = HelpUtils.getHelpIntent(
<                         mContext, mContext.getString(getHelpResource()),
<                         mContext.getClass().getName());
<                 view.startActivityForResult(helpIntent, 0);
<             });
---
>             // Returns may be null if content is wrong or empty.
>             helpIntent = HelpUtils.getHelpIntent(mContext, mContext.getString(getHelpResource()),
>                     mContext.getClass().getName());
>         } else {
>             helpIntent = null;
>         }
78a80,83
>         if (helpIntent != null) {
>              footerPreference.setLearnMoreAction(view -> {
>                  view.startActivityForResult(helpIntent, 0);
>              });
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/biometrics/BiometricEnrollActivity.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/biometrics/BiometricEnrollActivity.java
239d238
<         // start enrollment process if we haven't bailed out yet
241,242c240
<             mParentalConsentHelper = new ParentalConsentHelper(
<                     mIsFaceEnrollable, mIsFingerprintEnrollable, mGkPwHandle);
---
>             mParentalConsentHelper = new ParentalConsentHelper(mGkPwHandle);
244a243
>             // Start enrollment process if we haven't bailed out yet
260c259,262
<         if (!setupWizard) {
---
>         // Allow parental consent flow to skip this check, since one modality could be consented
>         // and another non-consented. This can also happen if the restriction is applied when
>         // enrollments already exists.
>         if (!setupWizard && !mParentalOptionsRequired) {
326a329,347
>             // Lazily retrieve the values from ParentalControlUtils, since the value may not be
>             // ready in onCreate.
>             final boolean faceConsentRequired = ParentalControlsUtils
>                     .parentConsentRequired(this, BiometricAuthenticator.TYPE_FACE) != null;
>             final boolean fpConsentRequired = ParentalControlsUtils
>                     .parentConsentRequired(this, BiometricAuthenticator.TYPE_FINGERPRINT) != null;
> 
>             final boolean requestFaceConsent = faceConsentRequired && mHasFeatureFace;
>             final boolean requestFpConsent = fpConsentRequired && mHasFeatureFingerprint;
> 
>             Log.d(TAG, "faceConsentRequired: " + faceConsentRequired
>                     + ", fpConsentRequired: " + fpConsentRequired
>                     + ", hasFeatureFace: " + mHasFeatureFace
>                     + ", hasFeatureFingerprint: " + mHasFeatureFingerprint
>                     + ", faceEnrollable: " + mIsFaceEnrollable
>                     + ", fpEnrollable: " + mIsFingerprintEnrollable);
> 
>             mParentalConsentHelper.setConsentRequirement(requestFaceConsent, requestFpConsent);
> 
359d379
<                         Log.d(TAG, "Enrollment consent options set, starting enrollment");
362c382,391
<                         startEnroll();
---
>                         Log.d(TAG, "Enrollment consent options set, starting enrollment: "
>                                 + mParentalOptions);
>                         // Note that we start enrollment with CONVENIENCE instead of the default
>                         // of WEAK in startEnroll(), since we want to allow enrollment for any
>                         // sensor as long as it has been consented for. We should eventually
>                         // clean up this logic and do something like pass in the parental consent
>                         // result, so that we can request enrollment for specific sensors, but
>                         // that's quite a large and risky change to the startEnrollWith() logic.
>                         startEnrollWith(Authenticators.BIOMETRIC_CONVENIENCE,
>                                 WizardManagerHelper.isAnySetupWizard(getIntent()));
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceController.java
107,108c107,119
<         updateStateInternal(ParentalControlsUtils.parentConsentRequired(mContext,
<                 BiometricAuthenticator.TYPE_FACE | BiometricAuthenticator.TYPE_FINGERPRINT));
---
> 
>         final RestrictedLockUtils.EnforcedAdmin faceAdmin = ParentalControlsUtils
>                 .parentConsentRequired(mContext, BiometricAuthenticator.TYPE_FACE);
>         final RestrictedLockUtils.EnforcedAdmin fpAdmin = ParentalControlsUtils
>                 .parentConsentRequired(mContext, BiometricAuthenticator.TYPE_FINGERPRINT);
> 
>         // If the admins are non-null, they are actually always the same. Just the helper class
>         // we create above always return the admin, instead of a boolean.
>         final boolean faceConsentRequired = faceAdmin != null;
>         final boolean fpConsentRequired = fpAdmin != null;
>         final RestrictedLockUtils.EnforcedAdmin admin = faceAdmin != null ? faceAdmin : fpAdmin;
> 
>         updateStateInternal(admin, faceConsentRequired, fpConsentRequired);
112c123,134
<     void updateStateInternal(@Nullable RestrictedLockUtils.EnforcedAdmin enforcedAdmin) {
---
>     void updateStateInternal(@Nullable RestrictedLockUtils.EnforcedAdmin enforcedAdmin,
>             boolean faceConsentRequired, boolean fpConsentRequired) {
>         // Disable the preference (and show the consent flow) only if consent is required for all
>         // modalities. Otherwise, users will not be able to enter and modify settings for modalities
>         // which have already been consented. In any case, the controllers for the modalities which
>         // have not yet been consented will be disabled in the combined page anyway - users can
>         // go through the consent+enrollment flow from there.
>         final boolean disablePreference = faceConsentRequired && fpConsentRequired;
>         if (!disablePreference) {
>             enforcedAdmin = null;
>         }
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/biometrics/ParentalConsentHelper.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/biometrics/ParentalConsentHelper.java
51,52c51,52
<     private final boolean mRequireFace;
<     private final boolean mRequireFingerprint;
---
>     private boolean mRequireFace;
>     private boolean mRequireFingerprint;
62a63,69
>      * @param gkPwHandle for launched intents
>      */
>     public ParentalConsentHelper(@Nullable Long gkPwHandle) {
>         mGkPwHandle = gkPwHandle != null ? gkPwHandle : 0L;
>     }
> 
>     /**
65d71
<      * @param gkPwHandle for launched intents
67,68c73
<     public ParentalConsentHelper(boolean requireFace, boolean requireFingerprint,
<             @Nullable Long gkPwHandle) {
---
>     public void setConsentRequirement(boolean requireFace, boolean requireFingerprint) {
71d75
<         mGkPwHandle = gkPwHandle != null ? gkPwHandle : 0L;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/connecteddevice/ConnectedDeviceDashboardFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/connecteddevice/ConnectedDeviceDashboardFragment.java
21a22,23
> import android.text.TextUtils;
> import android.util.Log;
27a30
> import com.android.settings.password.PasswordUtils;
35a39,41
>     private static final String SETTINGS_PACKAGE_NAME = "com.android.settings";
>     private static final String SYSTEMUI_PACKAGE_NAME = "com.android.systemui";
>     private static final boolean DEBUG = Log.isLoggable(TAG, Log.DEBUG);
66a73,77
>         String callingAppPackageName = PasswordUtils.getCallingAppPackageName(
>                 getActivity().getActivityToken());
>         if (DEBUG) {
>             Log.d(TAG, "onAttach() calling package name is : " + callingAppPackageName);
>         }
72a84,86
>         use(DiscoverableFooterPreferenceController.class).setAlwaysDiscoverable(
>                 TextUtils.equals(SETTINGS_PACKAGE_NAME, callingAppPackageName)
>                         || TextUtils.equals(SYSTEMUI_PACKAGE_NAME, callingAppPackageName));
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/connecteddevice/DiscoverableFooterPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/connecteddevice/DiscoverableFooterPreferenceController.java
54a55
>     private boolean mIsAlwaysDiscoverable;
87c88,90
<         mAlwaysDiscoverable.start();
---
>         if (mIsAlwaysDiscoverable) {
>             mAlwaysDiscoverable.start();
>         }
97c100,112
<         mAlwaysDiscoverable.stop();
---
>         if (mIsAlwaysDiscoverable) {
>             mAlwaysDiscoverable.stop();
>         }
>     }
> 
>     /**
>      * Set whether the device can be discovered. By default the value will be {@code false}.
>      *
>      * @param isAlwaysDiscoverable {@code true} if the device can be discovered,
>      *     otherwise {@code false}
>      */
>     public void setAlwaysDiscoverable(boolean isAlwaysDiscoverable) {
>         mIsAlwaysDiscoverable = isAlwaysDiscoverable;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/connecteddevice/usb/UsbDetailsTranscodeMtpController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/connecteddevice/usb/UsbDetailsTranscodeMtpController.java
94,95c94,96
<         return dataRole == DATA_ROLE_DEVICE && ((functions & UsbManager.FUNCTION_MTP) != 0
<                 || (functions & UsbManager.FUNCTION_PTP) != 0);
---
>         //return dataRole == DATA_ROLE_DEVICE && ((functions & UsbManager.FUNCTION_MTP) != 0
>         //        || (functions & UsbManager.FUNCTION_PTP) != 0);
>         return false;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/datetime/AutoTimeZonePreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/datetime/AutoTimeZonePreferenceController.java
19a20
> import android.os.SystemProperties;
46c47,48
<         return !(Utils.isWifiOnly(mContext) || mIsFromSUW);
---
>         boolean mWifiOnly = SystemProperties.getBoolean("ro.radio.noril", false);
>         return !(Utils.isWifiOnly(mContext) || mIsFromSUW || mWifiOnly);
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/deviceinfo/aboutphone/MyDeviceInfoFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/deviceinfo/aboutphone/MyDeviceInfoFragment.java
26a27,31
> import android.content.IntentFilter;
> import android.content.BroadcastReceiver;
> import androidx.preference.Preference;
> import androidx.preference.PreferenceCategory;
> import androidx.preference.PreferenceScreen;
35a41
> import com.android.settings.deviceinfo.VersionNumberPreferenceController;
49a56,57
> import com.android.internal.telephony.TelephonyIntents;
> import com.android.internal.telephony.PhoneConstants;
59a68,70
>     private static final String KEY_SIM_STATUS = "sim_status";
>     private static final String KEY_IMEI_INFO = "imei_info";
>     private static final String KEY_PREFERENCE_CATEGORY = "device_detail_category";
60a72,73
>     private Preference mSimstatus = null;
>     private Preference mImeiinfo = null;
62a76,110
>     private BroadcastReceiver mRadioStateReceiver = new BroadcastReceiver() {
>         @Override
>         public void onReceive(Context context, Intent intent) {
>             String action = intent.getAction();
>             Utils.mRadioState = intent.getStringExtra(PhoneConstants.STATE_KEY);
>             if (TelephonyIntents.ACTION_RADIO_STATE_CHANGED.equals(action)) {
>                 Utils.mRadioAvailable = Utils.mRadioState.equals("on");
>                 if (Utils.mRadioAvailable) {
>                     final PreferenceCategory category = getPreferenceScreen().findPreference(KEY_PREFERENCE_CATEGORY);
>                     if (findPreference(KEY_SIM_STATUS) == null)
>                         category.addPreference(mSimstatus);
>                     if (findPreference(KEY_IMEI_INFO) == null)
>                         category.addPreference(mImeiinfo);
>                 } else {
>                     if (findPreference(KEY_SIM_STATUS) != null)
>                         removePreference(KEY_SIM_STATUS);
>                     if (findPreference(KEY_IMEI_INFO) != null)
>                         removePreference(KEY_IMEI_INFO);
>                 }
>             }
>         }
>     };
> 
>     @Override
>     public void onCreate(Bundle icicle) {
>         super.onCreate(icicle);
>         mSimstatus = findPreference(KEY_SIM_STATUS);
>         mImeiinfo = findPreference(KEY_IMEI_INFO);
>         if (!Utils.mRadioAvailable) {
>             if (mSimstatus != null) removePreference(KEY_SIM_STATUS);
>             if (mImeiinfo != null) removePreference(KEY_IMEI_INFO);
>         }
>     }
> 
> 
88a137,149
>     public void onResume() {
>         super.onResume();
>         getContext().registerReceiver(mRadioStateReceiver,
>                 new IntentFilter(TelephonyIntents.ACTION_RADIO_STATE_CHANGED));
>     }
> 
>     @Override
>     public void onPause() {
>         super.onPause();
>         getContext().unregisterReceiver(mRadioStateReceiver);
>     }
> 
>     @Override
106a168
>         controllers.add(new VersionNumberPreferenceController(context, lifecycle));
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/deviceinfo/firmwareversion/BasebandVersionPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/deviceinfo/firmwareversion/BasebandVersionPreferenceController.java
39c39
<         return !Utils.isWifiOnly(mContext) ? AVAILABLE : UNSUPPORTED_ON_DEVICE;
---
>         return Utils.mRadioAvailable ? AVAILABLE : UNSUPPORTED_ON_DEVICE;
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/deviceinfo: VersionNumberPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: AwColorTemperaturePreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: awdisplay
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: AwDisplayPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: AwEnhanceModePreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: AwReadingModeTileService.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display: AwSmartBacklightPreferenceController.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/display/ScreenTimeoutPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/display/ScreenTimeoutPreferenceController.java
72a73,79
>         /// AW CODE:[feat] support never timeout
>         if (description != null && description.length() != 0) {
>             if (!Character.isDigit(description.charAt(0))) {
>                 return mContext.getString(R.string.screen_timeout_summary_never);
>             }
>         }
>         /// AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/DisplaySettings.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/DisplaySettings.java
31a32,36
> import com.android.settings.display.AwColorTemperaturePreferenceController;
> import com.android.settings.display.AwEnhanceModePreferenceController;
> import com.android.settings.display.AwDisplayPreferenceController;
> import com.android.settings.display.AwSmartBacklightPreferenceController;
> import com.android.settings.display.awdisplay.AwEinkRefreshModePreferenceController;
84a90,96
>         controllers.add(new AwDisplayPreferenceController(context));
>         controllers.add(new AwEnhanceModePreferenceController(context));
>         controllers.add(new AwSmartBacklightPreferenceController(context));
>         controllers.add(new AwColorTemperaturePreferenceController(context));
>         /// AW CODE：[feat] add fresh mode for eink screen
>         controllers.add(new AwEinkRefreshModePreferenceController(context));
>         /// AW:add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/gestures/GesturesSettingPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/gestures/GesturesSettingPreferenceController.java
79a80,81
>         controllers.add(new SwipeScreenShotPreferenceController(context, FAKE_PREF_KEY));
>         controllers.add(new SwipeScreenRecordPreferenceController(context, FAKE_PREF_KEY));
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/gestures: SwipeScreenRecordPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/gestures: SwipeScreenRecordSettings.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/gestures: SwipeScreenShotPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/gestures: SwipeScreenShotSettings.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/network/MobileNetworkPreferenceController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/network/MobileNetworkPreferenceController.java
141a142,145
> 
>         // add for RadioState is off
>         if (preference == null) return;
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/network/NetworkDashboardFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/network/NetworkDashboardFragment.java
21a22
> import android.content.BroadcastReceiver;
22a24,25
> import android.content.Intent;
> import android.content.IntentFilter;
23a27
> import android.os.SystemProperties;
28a33,34
> import androidx.preference.Preference;
> import androidx.preference.PreferenceScreen;
29a36,37
> import com.android.internal.telephony.TelephonyIntents;
> import com.android.internal.telephony.PhoneConstants;
31a40
> import com.android.settings.core.FeatureFlags;
49a59,110
>     private static final String KEY_MOBILE_NETWORK_SETTINGS = "mobile_network_list";
>     private static final String KEY_MANAGE_MOBILE_PLAN = "manage_mobile_plan";
>     private Preference mMobileNetworkSettings;
>     private Preference mManageMobilePlan;
> 
>     private BroadcastReceiver mRadioStateReceiver = new BroadcastReceiver() {
>         @Override
>         public void onReceive(Context context, Intent intent) {
>             String action = intent.getAction();
>             if (TelephonyIntents.ACTION_SIM_STATE_CHANGED.equals(action)) {
>                 if (SystemProperties.get("gsm.sim.state").equals("LOADED")) {
>                     if (mMobileNetworkSettings != null)
>                         getPreferenceScreen().addPreference(mMobileNetworkSettings);
> 
>                     if (mManageMobilePlan != null)
>                         getPreferenceScreen().addPreference(mManageMobilePlan);
>                 } else {
>                     if (mMobileNetworkSettings != null)
>                         getPreferenceScreen().removePreference(mMobileNetworkSettings);
> 
>                     if (mManageMobilePlan != null)
>                         getPreferenceScreen().removePreference(mManageMobilePlan);
>                 }
>             }
>         }
>     };
> 
>     @Override
>     public void onCreate(Bundle icicle) {
>         super.onCreate(icicle);
>         mMobileNetworkSettings = findPreference(KEY_MOBILE_NETWORK_SETTINGS);
>         mManageMobilePlan = findPreference(KEY_MANAGE_MOBILE_PLAN);
>         if (!Utils.mRadioAvailable) {
>             if (mMobileNetworkSettings != null)
>                 getPreferenceScreen().removePreference(mMobileNetworkSettings);
>             if (mManageMobilePlan != null)
>                 getPreferenceScreen().removePreference(mManageMobilePlan);
>         }
>     }
> 
>     @Override
>     public void onResume() {
>         super.onResume();
>         getContext().registerReceiver(mRadioStateReceiver,
>                 new IntentFilter(TelephonyIntents.ACTION_SIM_STATE_CHANGED));
>     }
> 
>     @Override
>     public void onPause() {
>         super.onPause();
>         getContext().unregisterReceiver(mRadioStateReceiver);
>     }
113a175,176
>         final MobileNetworkPreferenceController mobileNetworkPreferenceController =
>                 new MobileNetworkPreferenceController(context);
123a187
>             lifecycle.addObserver(mobileNetworkPreferenceController);
130a195
>         controllers.add(mobileNetworkPreferenceController);
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/network/NetworkProviderCallsSmsController.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/network/NetworkProviderCallsSmsController.java
21a22
> import android.os.SystemProperties;
183a185,187
>         boolean mWifiOnly = SystemProperties.getBoolean("ro.radio.noril", false);
>         if (mWifiOnly) return false;
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/security/InstallCaCertificateWarning.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/security/InstallCaCertificateWarning.java
18a19,20
> import static android.view.WindowManager.LayoutParams.SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS;
> 
47a50,51
>         getWindow().addSystemFlags(SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS);
> 
59a64
>         mixin.getSecondaryButtonView().setFilterTouchesWhenObscured(true);
68a74
>         mixin.getPrimaryButtonView().setFilterTouchesWhenObscured(true);
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/system: RebootRecoveryPreferenceController.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/system/ResetDashboardFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/system/ResetDashboardFragment.java
64c64
<         use(EraseEuiccDataController.class).setFragment(this);
---
>         //use(EraseEuiccDataController.class).setFragment(this);
72a73
>         controllers.add(new RebootRecoveryPreferenceController(context));
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/src/com/android/settings/Utils.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/src/com/android/settings/Utils.java
136a137,140
>     public static boolean mRadioAvailable = false;
> 
>     public static String mRadioState = "off";
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/tests/robotests/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceControllerTest.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/tests/robotests/src/com/android/settings/biometrics/combination/CombinedBiometricStatusPreferenceControllerTest.java
107c107
<         mController.updateStateInternal(admin);
---
>         mController.updateStateInternal(admin, true, true);
110c110,111
<         reset(admin);
---
>         mController.updateStateInternal(admin, true, false);
>         verify(restrictedPreference).setDisabledByAdmin(eq(null));
112,113c113,117
<         mController.updateStateInternal(null /* enforcedAdmin */);
<         verify(restrictedPreference, never()).setDisabledByAdmin(any());
---
>         mController.updateStateInternal(admin, false, true);
>         verify(restrictedPreference).setDisabledByAdmin(eq(null));
> 
>         mController.updateStateInternal(admin, false, false);
>         verify(restrictedPreference).setDisabledByAdmin(eq(null));
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/tests/robotests/src/com/android/settings/connecteddevice/DiscoverableFooterPreferenceControllerTest.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/tests/robotests/src/com/android/settings/connecteddevice/DiscoverableFooterPreferenceControllerTest.java
20a21
> import static org.mockito.Mockito.never;
107c108,109
<     public void onStart_shouldRegisterBluetoothChanged() {
---
>     public void onStart_setAlwaysDiscoverableAsTrue_shouldRegisterBluetoothChanged() {
>         mDiscoverableFooterPreferenceController.setAlwaysDiscoverable(true);
115c117,118
<     public void onStop_shouldUnregisterBluetoothChanged() {
---
>     public void onStop_setAlwaysDiscoverableAsTrue_shouldUnregisterBluetoothChanged() {
>         mDiscoverableFooterPreferenceController.setAlwaysDiscoverable(true);
120a124,142
>     }
> 
>     @Test
>     public void onStart_setAlwaysDiscoverableAsFalse_shouldNotRegisterBluetoothChanged() {
>         mDiscoverableFooterPreferenceController.setAlwaysDiscoverable(false);
>         mDiscoverableFooterPreferenceController.onStart();
> 
>         assertThat(getRegisteredBroadcastReceivers()).contains(mBluetoothChangedReceiver);
>         verify(mAlwaysDiscoverable, never()).start();
>     }
> 
>     @Test
>     public void onStop_setAlwaysDiscoverableAsFalse_shouldNotUnregisterBluetoothChanged() {
>         mDiscoverableFooterPreferenceController.setAlwaysDiscoverable(false);
>         mDiscoverableFooterPreferenceController.onStart();
>         mDiscoverableFooterPreferenceController.onStop();
> 
>         assertThat(getRegisteredBroadcastReceivers()).doesNotContain(mBluetoothChangedReceiver);
>         verify(mAlwaysDiscoverable, never()).stop();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/Settings/tests/unit/src/com/android/settings/biometrics/ParentalConsentHelperTest.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/Settings/tests/unit/src/com/android/settings/biometrics/ParentalConsentHelperTest.java
170,171c170,171
<         final ParentalConsentHelper helper =
<                 new ParentalConsentHelper(requireFace, requireFingerprint, gkpw);
---
>         final ParentalConsentHelper helper = new ParentalConsentHelper(gkpw);
>         helper.setConsentRequirement(requireFace, requireFingerprint);
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/SettingsIntelligence: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/SpareParts: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Stk: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/StorageManager: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Tag: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Test/connectivity: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/ThemePicker: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/TimeZoneData: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/TimeZoneUpdater: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/Traceur: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/TV: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Android.bp /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Android.bp
20,21c20,21
< android_app {
<     name: "TvSettings",
---
> java_defaults {
>     name: "Tvsettings_defaults",
27,37c27,28
<      aidl: {
<             local_include_dirs: ["Settings/src"],
<         },
<     resource_dirs: ["Settings/res"],
<     defaults: ["SettingsLibDefaults"],
<     platform_apis: true,
<     certificate: "platform",
<     system_ext_specific: true,
<     required: ["privapp_whitelist_com.android.tv.settings"],
<     optimize: {
<         proguard_flags_files: ["Settings/proguard.cfg"],
---
>     aidl: {
>         local_include_dirs: ["Settings/src"],
39c30
<     privileged: true,
---
>     resource_dirs: ["Settings/res"],
41a33
>         "androidx-constraintlayout_constraintlayout-solver",
54a47,48
>         "softwinner.audio.static",
>         "softwinner.display.output",
55a50,67
>     privileged: true,
>     certificate: "platform",
>     platform_apis: true,
>     required: ["privapp_whitelist_com.android.tv.settings"],
>     optimize: {
>         proguard_flags_files: ["Settings/proguard.cfg"],
>         enabled: false,
>     }
> }
> 
> android_app {
>     name: "TvSettings",
>     defaults: [
>         "SettingsLibDefaults",
>         "Tvsettings_defaults",
>     ],
>     system_ext_specific: true,
>     overrides: ["Settings"],
61,64c73,75
<     manifest: "Settings/AndroidManifest.xml",
<     srcs: [
<         "Settings/src/**/*.java",
<         "Settings/src/**/I*.aidl",
---
>     defaults: [
>         "SettingsLibDefaults",
>         "Tvsettings_defaults",
66,69d76
<      aidl: {
<             local_include_dirs: ["Settings/src"],
<         },
<     // Resources in res-twopanel should be applied last so they take precedence
71d77
<         "Settings/res",
75,77d80
<     defaults: ["SettingsLibDefaults"],
<     platform_apis: true,
<     certificate: "platform",
79,99d81
<     required: ["privapp_whitelist_com.android.tv.settings"],
<     optimize: {
<         proguard_flags_files: ["Settings/proguard.cfg"],
<     },
<     privileged: true,
<     static_libs: [
<         "androidx-constraintlayout_constraintlayout",
<         "androidx.recyclerview_recyclerview",
<         "androidx.preference_preference",
<         "androidx.appcompat_appcompat",
<         "androidx.legacy_legacy-preference-v14",
<         "androidx.leanback_leanback-preference",
<         "androidx.leanback_leanback",
<         "androidx.lifecycle_lifecycle-extensions",
<         "androidx.lifecycle_lifecycle-common-java8",
<         "androidx.annotation_annotation",
<         "statslog-tvsettings",
<         "tvsettings-logtags",
<         "TwoPanelSettingsLib",
<         "zxing-core-1.7",
<     ],
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/AndroidManifest.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/AndroidManifest.xml
84a85,130
>         <!-- AW CODE: [feat] add hotspot activities -->
>         <activity
>             android:name=".connectivity.HotspotNameActivity"
>             android:clearTaskOnLaunch="true"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true"
>             android:theme="@style/Theme.SettingsConnectivity" />
>         <activity
>             android:name=".connectivity.HotspotSecurityActivity"
>             android:clearTaskOnLaunch="true"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true"
>            android:theme="@style/Theme.SettingsConnectivity" />
>         <activity
>             android:name=".connectivity.HotspotPasswordActivity"
>             android:clearTaskOnLaunch="true"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true"
>             android:theme="@style/Theme.SettingsConnectivity" />
>         <activity
>             android:name=".connectivity.HotspotApbandActivity"
>             android:clearTaskOnLaunch="true"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true"
>             android:theme="@style/Theme.SettingsConnectivity" />
>         <activity
>             android:name=".bluetooth.BluetoothIncomingFileConfirmDialog"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true" >
>             <intent-filter>
>                 <action android:name="android.bluetooth.device.action.INCOMINGFILE_CONFIRM_REQUEST" />
>                 <category android:name="android.intent.category.DEFAULT" />
>             </intent-filter>
>         </activity>
>         <activity
>             android:name=".bluetooth.DevicePickerActivity"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true" >
>             <intent-filter>
>                 <action android:name="android.bluetooth.devicepicker.action.LAUNCH"/>
85a132,141
>                 <category android:name="android.intent.category.DEFAULT"/>
>             </intent-filter>
>         </activity>
>         <activity
>             android:name=".connectivity.PppoeSetupActivity"
>             android:clearTaskOnLaunch="true"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:theme="@style/Theme.SettingsConnectivity" />
>         <!-- AW:add end -->
407a464,467
>         <activity android:configChanges="keyboard|keyboardHidden|navigation"
>              android:excludeFromRecents="true"
>              android:name=".device.storage.RecoveryActivity"
>              android:theme="@style/Theme.Settings.Transparent"/>
486a547,548
>                 <action android:name="com.android.settings.DISPLAY_SETTINGS" />
>                 <action android:name="android.settings.DISPLAY_SETTINGS" />
495a558,569
>         <activity
>             android:name=".device.display.DisplayPercentageActivity"
>             android:theme="@style/Theme.Settings.Transparent"
>             android:configChanges="keyboard|keyboardHidden|navigation"
>             android:excludeFromRecents="true"
>             android:exported="true" >
>             <intent-filter>
>                 <action android:name="android.intent.action.MAIN" />
>                 <category android:name="android.intent.category.DEFAULT" />
>             </intent-filter>
>         </activity>
> 
671,672c745,746
<             android:name=".accessories.BluetoothPairingRequest"
<             android:exported="true">
---
>             android:exported="true"
>             android:name=".bluetooth.BluetoothPairingRequest">
679d752
<             android:name=".accessories.BluetoothPairingDialog"
682a756
>             android:name=".bluetooth.BluetoothPairingDialog"
859c933
<             android:name=".accessories.BluetoothRequestPermissionActivity"
---
>             android:name=".bluetooth.BluetoothRequestPermissionActivity"
1150,1153d1223
< 
<         <activity
<             android:name=".accessories.BluetoothActionActivity"
<             android:exported="false" />
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: circle.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: four_direction_down.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: four_direction_left.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: four_direction.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: four_direction_right.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: four_direction_up.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: horizontal_scale_dec.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: horizontal_scale_inc.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_cellphone.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_headphones_a2dp.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_headset_hfp.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_laptop.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_misc_hid.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_bt_pointing_hid.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_devices_other.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_folder_vd_theme_24.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_menu_add.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_settings_bluetooth.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_settings_devicename.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_settings_print.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_settings.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_wifi6_signal_0.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_wifi6_signal_1.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_wifi6_signal_2.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_wifi6_signal_3.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: ic_wifi6_signal_4.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: vertical_scale_dec.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/drawable: vertical_scale_inc.png
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: audio_channels_select.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: bluetooth_device_picker.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: bt_incomingfile_confirm_display.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: dialog_edittext.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: display_percentage.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/layout/password_checkbox.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout/password_checkbox.xml
21c21,23
<               android:orientation="vertical">
---
>               android:focusable="false"
>               android:orientation="vertical"
>               android:id="@+id/ll_root_password_checkbox">
30c32
<         android:focusable="true"
---
>         android:focusable="false"
33c35
< </LinearLayout>
\ No newline at end of file
---
> </LinearLayout>
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: preference_category_compact_layout.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: preference_empty_list.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout: preference_progress_category.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/layout/setup_password_item.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout/setup_password_item.xml
21c21,22
<               android:orientation="vertical">
---
>               android:orientation="vertical"
>               android:id="@+id/ll_root_setup_text_input">
44c45
< </LinearLayout>
\ No newline at end of file
---
> </LinearLayout>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/layout/setup_text_input_item.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/layout/setup_text_input_item.xml
20c20,21
<     android:clipToPadding="false">
---
>     android:clipToPadding="false"
>     android:id="@+id/rl_root_setup_text_input">
34c35
<         <EditText
---
>         <com.android.tv.settings.connectivity.util.SettingsInputAddressEditText
43c44
<         </EditText>
---
>         </com.android.tv.settings.connectivity.util.SettingsInputAddressEditText>
54c55
< </RelativeLayout>
\ No newline at end of file
---
> </RelativeLayout>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values/arrays.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values/arrays.xml
24a25
>         <item>Never</item>
39a41,42
>         <!-- Do not translate. -->
>         <item>2147483647</item>
231a235,248
>     </string-array>
> 
>     <!-- List entries for controlling surround sound passthrough setting -->
>     <string-array name="surround_sound_entries" translatable="false">
>         <item>@string/surround_sound_auto_summary</item>
>         <item>@string/surround_sound_none_summary</item>
>         <item>@string/surround_sound_manual_summary</item>
>     </string-array>
> 
>     <!-- Entry values for surround sound preference -->
>     <string-array name="surround_sound_entry_values" translatable="false">
>         <item>auto</item>
>         <item>never</item>
>         <item>manual</item>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values/colors.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values/colors.xml
18a19,20
>     <color name="black">#000000</color>
>     <color name="colorPrimary">#008577</color>
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values: custom.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values/strings.xml
242a243,244
>     <!-- Preference which shows recovery settings. [CHAR LIMIT=50] -->
>     <string name="device_recovery">Recovery Mode</string>
293a296,297
>     <!-- Text for a radio button that if selected will cause the device to never use a surround sound format. [CHAR LIMIT=50] -->
>     <string name="surround_sound_none_summary">None: Never use surround sound</string>
1916a1921
> 
2133a2139,2144
>     <!-- Enter recovery mode tips -->
>     <string name="recovery_mode_description">This will enter recovery mode</string>
>     <!-- Enter recovery mode screen, message on screen after user selects enter button -->
>     <string name="confirm_recovery_mode_description">Enter recovery mode, are you sure?</string>
>     <!-- Enter recovery mode screen, button on screen after user selects Enter button -->
>     <string name="confirm_recovery_mode_device">Enter</string>
2510a2522,2525
> 
> 
>     <!-- AW CODE: [feat] add location item title -->
>     <string name="location_title">Location</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values-zh-rCN/arrays.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values-zh-rCN/arrays.xml
24a25
>     <item>"永不"</item>
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values-zh-rCN: custom.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values-zh-rCN/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values-zh-rCN/strings.xml
118a119
>     <string name="device_recovery">"Recovery模式"</string>
945a947,949
>     <string name="recovery_mode_description">"此操作将会进入Recovery模式"</string>
>     <string name="confirm_recovery_mode_description">即将进入Recovery，您确定吗？</string>
>     <string name="confirm_recovery_mode_device">进入</string>
1067a1072,1075
> 
> 
>     <!-- AW CODE: [feat] add location item title -->
>     <string name="location_title">定位</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/values-zh-rTW/strings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/values-zh-rTW/strings.xml
117a118
>     <string name="device_recovery" >"Recovery模式"</string>
943a945,947
>     <string name="recovery_mode_description">"此操作將會進入Recovery模式"</string>
>     <string name="confirm_recovery_mode_description">即將進入Recovery，您確定嗎？</string>
>     <string name="confirm_recovery_mode_device">進入</string>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/advanced_display.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/advanced_display.xml
20a21,87
>     <PreferenceCategory
>         android:key="hdmi_setting"
>         android:title="@string/hdmi_setting">
>         <ListPreference
>             android:key="hdmi_output_mode"
>             android:title="@string/hdmi_output_mode"
>             android:summary="@string/hdmi_output_mode_summary"
>             android:entries="@array/hdmi_output_mode_entries"
>             android:entryValues="@array/hdmi_output_mode_values" />
>         <SeekBarPreference
>             android:key="hdmi_percentage"
>             android:title="@string/display_percentage_title"
>             android:summary = "@string/display_percentage_summary" />
>         <Preference
>             android:key="hdmi_percentage_entry"
>             android:title="@string/display_percentage_title"
>             android:summary = "@string/display_percentage_summary" />
>     </PreferenceCategory>
> 
>     <PreferenceCategory
>         android:key="cvbs_setting"
>         android:title="@string/cvbs_setting">
>         <ListPreference
>             android:key="cvbs_output_mode"
>             android:title="@string/cvbs_output_mode_title"
>             android:summary="@string/cvbs_output_mode_summary"
>             android:entries="@array/cvbs_output_mode_entries"
>             android:entryValues="@array/cvbs_output_mode_values" />
>         <SeekBarPreference
>             android:key="cvbs_percentage"
>             android:title="@string/display_percentage_title"
>             android:summary = "@string/display_percentage_summary" />
>         <Preference
>             android:key="cvbs_percentage_entry"
>             android:title="@string/display_percentage_title"
>             android:summary = "@string/display_percentage_summary" />
>     </PreferenceCategory>
> 
>     <PreferenceCategory
>         android:key="hdmi_advance_setting"
>         android:title="@string/hdmi_advance_setting">
>         <ListPreference
>             android:key="hdmi_color_mode"
>             android:title="@string/hdmi_color_space_and_deep"
>             android:summary="@string/current_mode_summary"
>             android:entries="@array/hdmi_color_entries"
>             android:entryValues="@array/hdmi_color_values" />
> 
>         <ListPreference
>             android:key="hdr_mode"
>             android:title="@string/tv_hdr_mode"
>             android:summary="@string/current_mode_summary"
>             android:entries="@array/hdmi_hdr_entries"
>             android:entryValues="@array/hdmi_hdr_values" />
>     </PreferenceCategory>
> 
>     <PreferenceCategory
>             android:key="screen_orientation_settings"
>             android:title="@string/screen_orientation_settings">
>             <ListPreference
>                  android:key="screen_rotation"
>                  android:title="@string/screen_rotation_title"
>                  android:summary="@string/screen_rotation_summary"
>                  android:entries="@array/screen_rotation_entries"
>                  android:entryValues="@array/screen_rotation_values" />
>      </PreferenceCategory>
> 
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: bluetooth_pairing_detail.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: bluetooth_rename_unpair.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: bluetooth_settings.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/device_info_settings_vendor.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/device_info_settings_vendor.xml
83a84,88
>     <!-- Bigdroid Version number-->
>     <Preference
>         android:key="bigdroid_version_number"
>         android:title="@string/version_number"/>
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/device_info_settings.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/device_info_settings.xml
49a50,57
>     <Preference
>         android:key="recovery"
>         android:title="@string/device_recovery">
>         <intent
>             android:targetClass="com.android.tv.settings.device.storage.RecoveryActivity"
>             android:targetPackage="com.android.tv.settings"/>
>     </Preference>
> 
82a91,95
> 
>     <!-- Bigdroid Version number-->
>     <Preference
>         android:key="bigdroid_version_number"
>         android:title="@string/version_number"/>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/device_info_settings_x.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/device_info_settings_x.xml
86a87,91
>     <!-- Bigdroid Version number-->
>     <Preference
>         android:key="bigdroid_version_number"
>         android:title="@string/version_number"/>
> 
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: device_picker.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/device.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/device.xml
40a41,45
>         android:fragment="com.android.tv.settings.system.InputsFragment"
>         android:icon="@drawable/ic_input_132dp"
>         android:key="inputs"
>         android:title="@string/system_inputs"/>
>     <Preference
115c120
< </PreferenceScreen>
\ No newline at end of file
---
> </PreferenceScreen>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/display_sound.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/display_sound.xml
49a50,59
>     <!-- audio output mode -->
>     <Preference
>         android:key="audio_output_mode"
>         android:title="@string/audio_output_mode_title"/>
>     <!-- enable pass through -->
>     <CheckBoxPreference
>         android:key="enable_pass_through"
>         android:title="@string/enable_pass_through"
>         android:summary="@string/enable_pass_through_summary"
>         android:persistent="false" />
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/display_sound_x.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/display_sound_x.xml
59a60,73
>     <!-- audio output mode -->
> <!--
>     <Preference
>         android:key="audio_output_mode"
>         android:title="@string/audio_output_mode_title"/>
> -->
>     <!-- enable pass through -->
> <!--
>     <CheckBoxPreference
>         android:key="enable_pass_through"
>         android:title="@string/enable_pass_through"
>         android:summary="@string/enable_pass_through_summary"
>         android:persistent="false" />
> -->
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: ic_devices_other.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/inputs.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/inputs.xml
21,32d20
<         android:key="connected_inputs"
<         android:orderingFromXml="false"/>
< 
<     <PreferenceCategory
<         android:key="standby_inputs"
<         android:orderingFromXml="false"/>
< 
<     <PreferenceCategory
<         android:key="disconnected_inputs"
<         android:orderingFromXml="false"/>
< 
<     <PreferenceCategory
49a38,47
>         <SwitchPreference
>             android:key="tv_auto_set_language"
>             android:persistent="true"
>             android:title="@string/inputs_tv_auto_set_language"
>             android:summary="@string/inputs_tv_auto_set_language_desc" />
>         <SwitchPreference
>             android:key="tv_auto_input_passthrough"
>             android:persistent="true"
>             android:title="@string/inputs_tv_auto_input_passthrough"
>             android:summary="@string/inputs_tv_auto_input_passthrough_desc" />
50a49,63
> 
>     <PreferenceCategory
>         android:key="connected_inputs"
>         android:orderingFromXml="false"
>         android:layout="@layout/preference_category_compact_layout"/>
> 
>     <PreferenceCategory
>         android:key="standby_inputs"
>         android:orderingFromXml="false"
>         android:layout="@layout/preference_category_compact_layout"/>
> 
>     <PreferenceCategory
>         android:key="disconnected_inputs"
>         android:orderingFromXml="false"
>         android:layout="@layout/preference_category_compact_layout"/>
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/main_prefs.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/main_prefs.xml
30a31,35
>             android:icon="@drawable/ic_settings_bluetooth"
>             android:key="bluetooth"
>             android:title="@string/bluetooth_settings"
>             android:fragment="com.android.tv.settings.bluetooth.BluetoothFragment" />
>         <Preference
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/res/xml/network.xml /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml/network.xml
49a50,55
>         <!-- AW CODE: [feat] add hotspot preference -->
>         <Preference
>             android:key="wifi_hotspot"
>             android:title="@string/wifi_setting_other_options_hotspot"
>             android:fragment="com.android.tv.settings.connectivity.HotspotFragment" />
>         <!-- AW:add end -->
66a73,78
>         <!-- AW CODE: [feat] add switch for location -->
>         <SwitchPreference
>             android:key="location"
>             android:persistent="true"
>             android:title="@string/location_title" />
>         <!-- AW add end -->
80a93,98
>         <!-- AW CODE: [feat] add pppoe preference -->
>         <Preference
>         android:key="pppoe"
>         android:title="@string/pppoe_title"
>         android:fragment="com.android.tv.settings.connectivity.PppoeFragment" />
>         <!-- AW:add end -->
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: paired_device_management.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: pppoe.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/res/xml: wifi_hotspot.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/about/AboutFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/about/AboutFragment.java
95a96,103
>     /// AW CODE: [feat] support show bigdroid version
>     private static final String BIGDROID_VERSION = "bigdroid_version_number";
>     // add prop name
>     private static final String BIGDROID_VERSION_PROP_NAME = "ro.build.Bigdroid.version";
>     // add default value
>     private static final String BIGDROID_VERSION_NUMBER_DEFAULT_VALUE = "BigdroidOS 2.0.0";
>     /// AW CODE add end
> 
147a156,163
> 
>         /// AW CODE: [feat] support show bigdroid version
>         String bigdroidVersion = SystemProperties.get(BIGDROID_VERSION_PROP_NAME);
>         final Preference bigdroidVersionPref = findPreference(BIGDROID_VERSION);
>         bigdroidVersionPref.setSummary(
>                     bigdroidVersion == null ? BIGDROID_VERSION_NUMBER_DEFAULT_VALUE : bigdroidVersion);
>         bigdroidVersionPref.setEnabled(true);
>         /// AW CODE add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/BaseSettingsFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/BaseSettingsFragment.java
97a98,108
>     // AW CODE [fix]: Pressing btn_right of mouse will directly exit after using mouse to enter the multi-level menu of TvSettings
>     public void onBackPressed() {
>         FragmentManager fragmentManager = getChildFragmentManager();
>         if (fragmentManager.getBackStackEntryCount() > 0) {
>             fragmentManager.popBackStack();
>         } else {
>             getActivity().finish();
>         }
>     }
>     // AW CODE end
> 
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings: bluetooth
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: HotspotApbandActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: HotspotFragment.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: HotspotNameActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: HotspotPasswordActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: HotspotSecurityActivity.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/NetworkFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/NetworkFragment.java
29a30
> import android.content.pm.PackageInfo;
30a32,35
> import android.content.ContentValues;
> import android.content.ContentResolver;
> import android.database.Cursor;
> import android.net.Uri;
58a64
> import android.util.Log;
62a69
> import java.util.List;
70a78
>     private final String TAG = "NetworkFragment";
76a85,94
>     ///AW CODE: [feat]: add some constants
>     private static final String KEY_WIFI_HOTSPOT = "wifi_hotspot";
>     private static final String KEY_PPPOE = "pppoe";
>     private static final String KEY_LOCATION = "location";
> 
>     private static final String NETWORK_FLAG = "network_location_opt_in";
>     private static final String PACKAGE_NAME_GMS = "com.google.android.gms";
>     private String mNetworkLocationValue = "0";
>     private boolean mLocationHasValue = false;
>     ///AW: add end
101a120,124
>     ///AW CODE: [feat] add Preference Object
>     private Preference mHotspotPref;
>     private Preference mPppoePref;
>     private TwoStatePreference mLocationPref;
>     ///AW: add end
181a205,214
>         ///AW CODE: [feat] add mHotspotPref
>         mHotspotPref = findPreference(KEY_WIFI_HOTSPOT);
>         mLocationPref = findPreference(KEY_LOCATION);
>         setNetworkLocationValue();
>         if (mNetworkLocationValue.equals("1")) {
>             mLocationPref.setChecked(true);
>         } else {
>             mLocationPref.setChecked(false);
>         }
>         ///AW:add end
282a316,318
>             case KEY_LOCATION:
>                 updateProvider();
>                 break;
285a322,390
>     /// AW CODE: [feat] support location
>     private boolean isPackageContain( Context context, String packageName ) {
>         final PackageManager packageManager = context.getPackageManager();
> 
>         List<PackageInfo> pinfo = packageManager.getInstalledPackages(0);
>         for ( int i = 0; i < pinfo.size(); i++ ) {
>             if(pinfo.get(i).packageName.contains(packageName)){
>                 Log.d(TAG, packageName + "exists in packagemanager.");
>                 return true;
>             }
>         }
>         return false;
>     }
>     private void setNetworkLocationValue() {
>         Log.d(TAG, "setNetworkLocationValue");
>         if (!isPackageContain(getContext(), PACKAGE_NAME_GMS)) {
>             Log.d(TAG, "mLocationPref was set to be inVisible");
>             mLocationPref.setVisible(false);
>             return;
>         } else {
>             mLocationPref.setVisible(true);
>         }
>         boolean hasValue = false;
>         ContentResolver cr = getActivity().getContentResolver();
>         Uri uri = Uri.parse("content://com.google.settings/partner");
>         try (Cursor cursor = cr.query(uri,
>                 null, null, null, null)) {
>             if (cursor != null) {
>                 Log.w("zhouyuchen", "cursor: " + cursor.getCount());
>                 for (int i = 0; i < cursor.getCount(); i++) {
>                     cursor.moveToNext();
>                     String key = cursor.getString(cursor.getColumnIndex("name"));
>                     if (NETWORK_FLAG.equals(key))
>                     {
>                         String value = cursor.getString(cursor.getColumnIndex("value"));
>                         mLocationHasValue = true;
>                         // 依据value打开或者关闭switch
>                         mNetworkLocationValue = value;
>                         Log.d(TAG, "mNetworkLocationValue=" + mNetworkLocationValue);
>                     }
>                 }
>             }
>         } catch (Exception e) {
>             Log.e(TAG, "Failed to query data from Provider.", e);
>         }
>     }
>     private void updateProvider() {
>         Log.d(TAG, "updateProvider");
>         ContentResolver cr = getActivity().getContentResolver();
>         Uri uri = Uri.parse("content://com.google.settings/partner");
>         if (mNetworkLocationValue.equals("0")) {
>             mNetworkLocationValue = "1";
>         } else {
>             mNetworkLocationValue = "0";
>         }
>         ContentValues cv = new ContentValues();
>         cv.put("value", mNetworkLocationValue);
>         try {
>             if (mLocationHasValue) {
>                 cr.update(uri, cv, "name=?" , new String[] {NETWORK_FLAG});
>             } else {
>                 cv.put("name", NETWORK_FLAG);
>                 cr.insert(uri, cv);
>             }
>         } catch (Exception e) {
>             e.printStackTrace();
>         }
>     }
>     /// AW add end
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: PppoeFragment.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity: PppoeSetupActivity.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/AdvancedOptionsFlowInfo.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/AdvancedOptionsFlowInfo.java
46a47,49
>     public static final int PPPOE_INTERFACE = 12;
>     public static final int PPPOE_USERNAME = 13;
>     public static final int PPPOE_PASSWORD = 14;
59c62,65
<             DNS2
---
>             DNS2,
>             PPPOE_INTERFACE,
>             PPPOE_USERNAME,
>             PPPOE_PASSWORD
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/AdvancedWifiOptionsFlow.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/AdvancedWifiOptionsFlow.java
44a45,46
>     /** Flag that set advanced flow start with pppoe settings page */
>     public static final int START_PPPOE_SETUP_PAGE = 3;
50c52,54
<             START_PROXY_SETTINGS_PAGE
---
>             START_PROXY_SETTINGS_PAGE,
>             START_PROXY_SETTINGS_PAGE,
>             START_PPPOE_SETUP_PAGE
95a100,103
>         State pppoeSetupState = new PppoeSetupState(activity);
>         State pppoeUsernameState = new PppoeUsernameState(activity);
>         State pppoePasswordState = new PppoePasswordState(activity);
>         State pppoeSetupInvalidState = new PppoeSetupInvalidState(activity);
113a122,124
>             case START_PPPOE_SETUP_PAGE :
>                 startState = pppoeSetupState;
>                 break;
260a272,305
>         );
>         /* Pppoe Settings */
>         stateMachine.addState(
>                 pppoeSetupState,
>                 StateMachine.ADVANCED_FLOW_COMPLETE,
>                 advancedFlowCompleteState
>         );
> 
>         stateMachine.addState(
>                 pppoeSetupState,
>                 StateMachine.CONTINUE,
>                 pppoeUsernameState
>         );
> 
>         stateMachine.addState(
>                 pppoeUsernameState,
>                 StateMachine.CONTINUE,
>                 pppoePasswordState
>         );
> 
>         stateMachine.addState(
>                 pppoePasswordState,
>                 StateMachine.ADVANCED_FLOW_COMPLETE,
>                 advancedFlowCompleteState);
>         stateMachine.addState(
>                 pppoePasswordState,
>                 StateMachine.PPPOE_SETUP_INVALID,
>                 pppoeSetupInvalidState
>         );
>         /* PPPoE Setup Invalid */
>         stateMachine.addState(
>                 pppoeSetupInvalidState,
>                 StateMachine.CONTINUE,
>                 pppoeSetupState
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ConnectState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ConnectState.java
245a246,249
>                     case WifiConfiguration.NetworkSelectionStatus.DISABLED_NO_INTERNET_TEMPORARY:
>                     case WifiConfiguration.NetworkSelectionStatus.DISABLED_NO_INTERNET_PERMANENT:
>                         notifyListener(StateMachine.RESULT_SUCCESS);
>                         break;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/Dns1State.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/Dns1State.java
29a30,31
> import android.widget.RelativeLayout;
> import android.widget.EditText;
33a36
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
79a83,84
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
107a113,124
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
>                 }
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/Dns2State.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/Dns2State.java
28a29,30
> import android.widget.RelativeLayout;
> import android.widget.EditText;
33a36
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
77a81,82
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
105a111,121
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/EnterPasswordState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/EnterPasswordState.java
33c33
< 
---
> import android.widget.LinearLayout;
46a47
> import com.android.tv.settings.connectivity.util.SettingsGuidedActionEditText;
102c103,104
<         private EditText mTextInput;
---
>         private SettingsGuidedActionEditText mTextInput;
>         private LinearLayout mllRootTextInput;
103a106
>         private LinearLayout mllRootPsdCheckbox;
143a147,148
>                         mllRootPsdCheckbox = (LinearLayout) vh.itemView.findViewById(
>                                                         R.id.ll_root_password_checkbox);
150a156,157
>                         mllRootPsdCheckbox.setFocusable(false);
>                         mCheckBox.setFocusable(false);
152c159,161
<                         mTextInput = (EditText) vh.itemView.findViewById(
---
>                         mllRootTextInput = (LinearLayout) vh.itemView.findViewById(
>                                                         R.id.ll_root_setup_text_input);
>                         mTextInput = (SettingsGuidedActionEditText) vh.itemView.findViewById(
156a166,168
>                         mTextInput.setFocusable(true);
>                         mTextInput.setLeaderView(mllRootTextInput);
>                         mTextInput.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/EnterSsidState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/EnterSsidState.java
29a30,31
> import android.widget.RelativeLayout;
> import android.widget.EditText;
33a36
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
77a81,82
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
105a111,121
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/GatewayState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/GatewayState.java
29a30,31
> import android.widget.RelativeLayout;
> import android.widget.EditText;
33a36
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
77a81,82
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
106a112,122
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotApbandState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotChooseSecurityState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotNameInvalidState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotNameState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotPasswordInvalidState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: HotspotPasswordState.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/IpAddressState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/IpAddressState.java
21a22,23
> import android.widget.RelativeLayout;
> import android.widget.EditText;
32a35
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
76a80,81
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
104a110,120
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                           R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                           R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/NetworkPrefixLengthState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/NetworkPrefixLengthState.java
28a29,30
> import android.widget.RelativeLayout;
> import android.widget.EditText;
32a35
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
76a80,81
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
92a98,108
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: PppoePasswordState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: PppoeSetupInvalidState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: PppoeSetupState.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup: PppoeUsernameState.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyBypassState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyBypassState.java
28a29,30
> import android.widget.RelativeLayout;
> import android.widget.EditText;
34a37
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
78a82,83
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
105a111,121
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyHostNameState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyHostNameState.java
21a22,23
> import android.widget.RelativeLayout;
> import android.widget.EditText;
33a36
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
73a77,78
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
92a98,109
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                           R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                           R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
>                 }
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyPortState.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/ProxyPortState.java
28a29,30
> import android.widget.RelativeLayout;
> import android.widget.EditText;
32a35
> import com.android.tv.settings.connectivity.util.SettingsInputAddressEditText;
72a76,77
>         private RelativeLayout mRlRoot;
>         private SettingsInputAddressEditText mEtTitle;
100a106,116
>                 }
> 
>                 @Override
>                 public void onBindViewHolder(ViewHolder vh, GuidedAction action) {
>                     super.onBindViewHolder(vh, action);
>                     mRlRoot = (RelativeLayout) vh.itemView.findViewById(
>                         R.id.rl_root_setup_text_input);
>                     mEtTitle = (SettingsInputAddressEditText) vh.itemView.findViewById(
>                         R.id.guidedactions_item_title);
>                     mEtTitle.setLeaderView(mRlRoot);
>                     mEtTitle.moveCursorToLast();
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/UserChoiceInfo.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/setup/UserChoiceInfo.java
46a47,52
>     ///AW CODE: [feat] add constants
>     public static final int HOTSPOTNAME = 12;
>     public static final int HOTSPOTSECURITY = 13;
>     public static final int HOTSPOTPASSWORD = 14;
>     public static final int HOTSPOTAPBAND = 15;
>     ///AW: add end
71a78,102
>     ///AW CODE: [feat] add containsPage and get functions
>     /**
>      * Check if the Hashmap contains the summary of a particular page.
>      *
>      * @param page the queried page
>      * @return true if contains.
>      */
>     public boolean containsPage(@PAGE int page) {
>         return mDataSummary.containsKey(page);
>     }
> 
>     /**
>      * Get summary of a page.
>      *
>      * @param page The queried page.
>      * @return The summary of the page.
>      */
>     public String get(@PAGE int page) {
>         if (!mDataSummary.containsKey(page)) {
>             return "";
>         }
>         return mDataSummary.get(page).toString();
>     }
>     ///AW: add end
> 
255a287,292
>         ///AW CODE: [feat] use the defined constants
>             HOTSPOTNAME,
>             HOTSPOTSECURITY,
>             HOTSPOTPASSWORD,
>             HOTSPOTAPBAND,
>         ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/AdvancedOptionsFlowUtil.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/AdvancedOptionsFlowUtil.java
22a23,25
> import android.net.PppoeManager;
> import android.content.Context;
> import android.util.Log;
30a34
> import com.android.tv.settings.connectivity.PppoeFragment;
41a46,51
>     public static String pppoeinterface;
>     public static String pppoeusername;
>     public static String pppoepassword;
>     public static String preinterface;
>     private static PppoeManager mPppoeManager;
>     private static final String TAG = "AdvancedOptionsFlowUtil";
164a175,241
>         }
>         return 0;
>     }
> 
>     /**
>      * Process PPPoE Setup.
>      *
>      * @param activity the activity that calls this method.
>      * @return 0 if successful, or other different values based on the result.
>      */
>     public static int processPppoeSetup(FragmentActivity activity) {
>         AdvancedOptionsFlowInfo flowInfo = ViewModelProviders
>                 .of(activity)
>                 .get(AdvancedOptionsFlowInfo.class);
>         mPppoeManager = (PppoeManager)activity.getSystemService(Context.PPPOE_SERVICE);
>         String getinterface  = flowInfo.get(AdvancedOptionsFlowInfo.PPPOE_INTERFACE);
>         if (getinterface == null || TextUtils.isEmpty(getinterface)) {
>             return -1;
>         }
>         String username = flowInfo.get(AdvancedOptionsFlowInfo.PPPOE_USERNAME);
>         if (username == null || TextUtils.isEmpty(username)) {
>             return -1;
>         }
>         String password = flowInfo.get(AdvancedOptionsFlowInfo.PPPOE_PASSWORD);
>         if (password == null || TextUtils.isEmpty(password)) {
>             return -1;
>         }
>         pppoeinterface = getinterface;
>         pppoeusername = username;
>         pppoepassword = password;
>         Log.w(TAG, "interface is : " + pppoeinterface);
>         Log.w(TAG, "preinterface is : " + preinterface);
>         Log.w(TAG, "username  is : " + pppoeusername);
>         if (!pppoeinterface.equals(preinterface)) {
>             if (mPppoeManager.isPppoeEnabled()) {
>                 Log.d(TAG, "Saved,but pppoe already enabled");
>                 Thread disConnectThread = new Thread(new Runnable() {
>                     public void run() {
>                         if (mPppoeManager.getPppoeState(preinterface)
>                                 != PppoeManager.PPPOE_STATE_DISCONNECTED) {
>                             Log.d(TAG, "Saved,disconnectPppoe");
>                             mPppoeManager.disconnectPppoe(preinterface);
>                         }
>                     }
>                 });
>                 disConnectThread.start();
>                 PppoeFragment.mEnablePppoePref.setChecked(false);
>             }
>         }
>         return 0;
>     }
> 
>     public static int processProxyNone(FragmentActivity activity) {
>         AdvancedOptionsFlowInfo flowInfo = ViewModelProviders
>                 .of(activity)
>                 .get(AdvancedOptionsFlowInfo.class);
>         IpConfiguration mIpConfiguration = flowInfo.getIpConfiguration();
>         boolean hasProxySettings =
>                 (!flowInfo.containsPage(AdvancedOptionsFlowInfo.ADVANCED_OPTIONS)
>                         || !flowInfo.choiceChosen(
>                                 activity.getString(R.string.wifi_action_advanced_no),
>                                 AdvancedOptionsFlowInfo.ADVANCED_OPTIONS))
>                 && !flowInfo.choiceChosen(activity.getString(R.string.wifi_action_proxy_none),
>                                             AdvancedOptionsFlowInfo.PROXY_SETTINGS);
>         if (hasProxySettings) {
>             mIpConfiguration.setProxySettings(IpConfiguration.ProxySettings.NONE);
>             mIpConfiguration.setHttpProxy(null);
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/SettingsGuidedActionEditText.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/SettingsGuidedActionEditText.java
20a21
> import android.text.InputType;
21a23
> import android.util.Log;
26c28,30
< 
---
> import android.view.View;
> import android.view.MotionEvent;
> import android.view.inputmethod.InputMethodManager;
32a37,38
> 
>     private static final String TAG = "SettingsGuidedActionEditText";
33a40
>     private View mLeaderView;
60a68,71
>         if (keyCode == KeyEvent.KEYCODE_BACK
>             && event.getAction() == KeyEvent.ACTION_DOWN) {
>             setFocusable(false);
>         }
63a75,125
>     public void setLeaderView(View leaderView) {
>         this.mLeaderView = leaderView;
>         if (mLeaderView != null) {
>             mLeaderView.setFocusable(false);
>             mLeaderView.setOnKeyListener(new View.OnKeyListener() {
>                 @Override
>                 public boolean onKey(View v, int keyCode, KeyEvent event) {
>                     if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
>                         Log.d(TAG,"click ok btn.");
>                         setFocus(true);
>                     }
>                     return false;
>                 }
>             });
>             mLeaderView.setOnGenericMotionListener(new View.OnGenericMotionListener() {
>                 @Override
>                 public boolean onGenericMotion(View view, MotionEvent event) {
>                     if(event.getActionButton() == MotionEvent.BUTTON_PRIMARY &&
>                             event.getActionMasked() == MotionEvent.ACTION_BUTTON_PRESS) {
>                         Log.d(TAG,"touch left mouse.");
>                         setFocus(true);
>                     }
>                     return true;
>                 }
>             });
>         }
>     }
> 
>     public void moveCursorToLast() {
>         String hint = getText().toString();
>         if (hint != null && hint.length() != 0) {
>             setSelection(hint.length());
>         }
>     }
> 
>     private void setFocus(boolean focus) {
>         this.setFocusable(focus);
>         this.setFocusableInTouchMode(focus);
>         if (mLeaderView != null) {
>             mLeaderView.setFocusable(!focus);
>             mLeaderView.setFocusableInTouchMode(!focus);
>         }
>         if (focus) {
>             InputMethodManager inputManager = (InputMethodManager) getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
>             inputManager.showSoftInput(this, 0);
>             moveCursorToLast();
>             this.requestFocus();
>         }
>         this.setInputType(focus ? InputType.TYPE_CLASS_TEXT : InputType.TYPE_NULL);
>     }
> 
76c138,139
<             setFocusable(false);
---
>             //setFocusable(false);
>             setFocus(false);
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util: SettingsInputAddressEditText.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/StateMachine.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util/StateMachine.java
70a71,76
>     ///AW CODE: [feat] add constants
>     public static final int SOFTAP_NAME_INVALID = 29;
>     public static final int SOFTAP_PASSWORD_INVALID = 30;
>     public static final int PPPOE_SETUP = 31;
>     public static final int PPPOE_SETUP_INVALID = 32;
>     ///AW: add end
100c106,111
<             FINISH_SECURITY_FLOW})
---
>             FINISH_SECURITY_FLOW,
>         ///AW CODE: [feat] use the defined constants
>             SOFTAP_NAME_INVALID,
>             SOFTAP_PASSWORD_INVALID,
>             PPPOE_SETUP_INVALID})
>         ///AW: add end
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/connectivity/util: WifiHotspotParameter.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/DevicePrefFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/DevicePrefFragment.java
130c130
<             inputPref.setVisible(mInputSettingNeeded);
---
>             inputPref.setVisible(true/*mInputSettingNeeded*/);
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: CvbsPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: DisplayOutputImpl.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: DisplayPercentageActivity.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: HdmiAdvancePreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: HdmiPreferenceController.java
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/display: ScreenOrientationController.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/displaysound/AdvancedDisplayFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/displaysound/AdvancedDisplayFragment.java
22a23
> import android.content.Context;
26a28
> import android.util.Log;
31a34,38
> import java.util.ArrayList;
> import java.util.List;
> 
> import com.android.settingslib.core.AbstractPreferenceController;
> import com.android.tv.settings.PreferenceControllerFragment;
33c40,43
< import com.android.tv.settings.SettingsPreferenceFragment;
---
> import com.android.tv.settings.device.display.HdmiAdvancePreferenceController;
> import com.android.tv.settings.device.display.HdmiPreferenceController;
> import com.android.tv.settings.device.display.CvbsPreferenceController;
> import com.android.tv.settings.device.display.ScreenOrientationController;
39c49
< public class AdvancedDisplayFragment extends SettingsPreferenceFragment {
---
> public class AdvancedDisplayFragment extends PreferenceControllerFragment {
41a52,60
>     public static AdvancedDisplayFragment newInstance() {
>         return new AdvancedDisplayFragment();
>     }
> 
>     @Override
>     protected int getPreferenceScreenResId() {
>         return R.xml.advanced_display;
>     }
> 
43,44c62,63
<     public void onCreatePreferences(Bundle bundle, String s) {
<         setPreferencesFromResource(R.xml.advanced_display, null);
---
>     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
>         super.onCreatePreferences(savedInstanceState, rootKey);
46a66,75
>     }
> 
>     @Override
>     protected List<AbstractPreferenceController> onCreatePreferenceControllers(Context context) {
>         final List<AbstractPreferenceController> controllers = new ArrayList<>();
>         controllers.add(new HdmiPreferenceController(context));
>         controllers.add(new CvbsPreferenceController(context));
>         controllers.add(new ScreenOrientationController(context));
>         controllers.add(new HdmiAdvancePreferenceController(context));
>         return controllers;
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/displaysound: AudioChannelsSelect.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/displaysound/DisplaySoundFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/displaysound/DisplaySoundFragment.java
38a39
> import com.android.tv.settings.device.displaysound.AudioChannelsSelect;
49a51,52
>     private static final String KEY_AUDIO_OUTPUT_MODE = "audio_output_mode";
>     private static final String KEY_ENABLE_PASS_THROUGH = "enable_pass_through";
52a56,58
>     private Preference mAudioOutputPreference;
>     private AudioChannelsSelect mAudioSelector;
>     private TwoStatePreference mEnablePassThrough;
66a73
>         mAudioSelector = new AudioChannelsSelect(context);
87a95,98
>         mEnablePassThrough = (TwoStatePreference) findPreference(KEY_ENABLE_PASS_THROUGH);
>         mAudioOutputPreference = findPreference(KEY_AUDIO_OUTPUT_MODE);
>         mEnablePassThrough.setChecked(Settings.System.getInt(getActivity().getContentResolver(),Settings.System.ENABLE_PASS_THROUGH, 0) != 0);
>         getPreferenceScreen().removePreference(soundPref);
99a111,120
>         if (preference == mEnablePassThrough) {
>             Settings.System.putInt(getActivity().getContentResolver(), Settings.System.ENABLE_PASS_THROUGH,
>             mEnablePassThrough.isChecked() ? 1 : 0);
>             return true;
>         }
>         if (preference == mAudioOutputPreference) {
>             mAudioSelector.showChannelsSelectDialog();
>             return true;
>         }
> 
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/storage/ConfirmClearCacheFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/storage/ConfirmClearCacheFragment.java
24c24
< import androidx.leanback.app.GuidedStepFragment;
---
> import androidx.leanback.app.GuidedStepSupportFragment;
32c32
< public class ConfirmClearCacheFragment extends GuidedStepFragment {
---
> public class ConfirmClearCacheFragment extends GuidedStepSupportFragment {
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/storage: RecoveryActivity.java
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/storage/StorageFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/device/storage/StorageFragment.java
23a24
> import android.os.SystemProperties;
235c236,240
<         mAvailablePref.setSize(Math.max(0L, details.availSize - cachePartitionSize()));
---
>         if ("homlet".equals(SystemProperties.get("ro.product.platform", null)) || "homlet".equals(SystemProperties.get("ro.build.characteristics", null))) {
>             mAvailablePref.setSize(Math.max(0L, details.availSize));//cache partition is nonexistent
>         } else {
>             mAvailablePref.setSize(Math.max(0L, details.availSize - cachePartitionSize()));
>         }
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/MainFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/MainFragment.java
47a48
> import android.os.SystemProperties;
110a112,113
>     static final String KEY_GENERAL_SETTINGS = "general_settings";
>     static final String KEY_BLUETOOTH = "bluetooth";
202a206,213
>         ///AW CODE: [feat] add general_settings and Direct get supported state from feature
>         PreferenceCategory general_settings =
>                 (PreferenceCategory)findPreference(KEY_GENERAL_SETTINGS);
>         general_settings.removePreference(findPreference(KEY_ACCESSORIES));
>         if (!supportBluetooth()) {
>             general_settings.removePreference(findPreference(KEY_BLUETOOTH));
>         }
>         ///AW:add end
390c401,406
<             accessoryPreference.setVisible(false);
---
>             ///AW CODE: [feat] add conditional statement
>             if (accessoryPreference != null) {
>                 accessoryPreference.setVisible(false);
>             }
>             //accessoryPreference.setVisible(false);
>             ///AW: add end
407c423,428
<             accessoryPreference.setVisible(info == null);
---
>             ///AW CODE: [feat] add conditional statement
>             if (accessoryPreference != null) {
>                 accessoryPreference.setVisible(info == null);
>             }
>             //accessoryPreference.setVisible(info == null);
>             ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/SettingsPreferenceFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/SettingsPreferenceFragment.java
40a41
> import android.text.TextUtils;
44a46,47
> import androidx.preference.Preference;
> import androidx.preference.PreferenceGroup;
58a62
> import android.util.ArrayMap;
67a72
>     private ArrayMap<String, Preference> mPreferenceCache;
279a285,312
>     ///AW CODE: [feat] add cacheRemoveAllPrefs function
>     protected void cacheRemoveAllPrefs(PreferenceGroup group) {
>         mPreferenceCache = new ArrayMap<String, Preference>();
>         final int N = group.getPreferenceCount();
>         for (int i = 0; i < N; i++) {
>             Preference p = group.getPreference(i);
>             if (TextUtils.isEmpty(p.getKey())) {
>                 continue;
>             }
>             mPreferenceCache.put(p.getKey(), p);
>         }
>     }
> 
>     protected Preference getCachedPreference(String key) {
>         return mPreferenceCache != null ? mPreferenceCache.remove(key) : null;
>     }
> 
>     protected void removeCachedPrefs(PreferenceGroup group) {
>         for (Preference p : mPreferenceCache.values()) {
>             group.removePreference(p);
>         }
>         mPreferenceCache = null;
>     }
> 
>     protected int getCachedCount() {
>         return mPreferenceCache != null ? mPreferenceCache.size() : 0;
>     }
>     ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/system/InputsFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/system/InputsFragment.java
24a25
> import android.provider.Settings.Global;
25a27
> import android.util.Log;
31a34,36
> import com.android.internal.app.LocalePicker;
> import com.android.internal.app.LocalePicker.LocaleInfo;
> import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
34a40,41
> import java.util.List;
> import java.util.Locale;
42c49,50
< public class InputsFragment extends SettingsPreferenceFragment {
---
> public class InputsFragment extends SettingsPreferenceFragment implements
>         Preference.OnPreferenceChangeListener {
49a58,59
>     private static final String KEY_TV_AUTO_SET_LANGUAGE = "tv_auto_set_language";
>     private static final String KEY_TV_AUTO_INPUT_PASSTHROUGH = "tv_auto_input_passthrough";
57a68,69
>     private TwoStatePreference mTvAutoSetLanguage;
>     private TwoStatePreference mTvAutoInputPassThrough;
92a105
>         mHdmiControlPref.setOnPreferenceChangeListener(this);
94a108,109
>         mTvAutoSetLanguage = (TwoStatePreference) findPreference(KEY_TV_AUTO_SET_LANGUAGE);
>         mTvAutoInputPassThrough = (TwoStatePreference) findPreference(KEY_TV_AUTO_INPUT_PASSTHROUGH);
98a114
>         setPreferncesEnabled(mHdmiControlPref.isChecked());
101a118,119
>         mTvAutoSetLanguage.setChecked(readCecOption(Settings.Global.HDMI_CONTROL_AUTO_SET_LANGUAGE));
>         mTvAutoInputPassThrough.setChecked(readCecOption(Settings.Global.HDMI_CONTROL_AUTO_INPUT_PASSTHROUGH));
141d158
< 
163a181
>         Log.d("TvSettings","AWAW onPreferenceTreeClick key: " + key);
169a188,200
>                 int hdmiControlEnabled = readCecOption(Settings.Global.HDMI_CONTROL_ENABLED) ? 1 : 0;
>                 Log.d("TvSettings","AWAW hdmiControlEnabled: " + hdmiControlEnabled);
>                 if(mHdmiControlPref.isChecked() == false) {
>                     writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_DEVICE_OFF_ENABLED,false);
>                     writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_WAKEUP_ENABLED,false);
>                     writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_SET_LANGUAGE,false);
>                     writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_INPUT_PASSTHROUGH,false);
> 
>                     mDeviceAutoOffPref.setChecked(false);
>                     mTvAutoOnPref.setChecked(false);
>                     mTvAutoSetLanguage.setChecked(false);
>                     mTvAutoInputPassThrough.setChecked(false);
>                 }
178a210,239
>             case KEY_TV_AUTO_SET_LANGUAGE:
>                 writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_SET_LANGUAGE, mTvAutoSetLanguage.isChecked());
>  //               String lan = Settings.Global.getString(getContext().getContentResolver(), Settings.Global.HDMI_CONTROL_TV_LANGUAGE);
>  //               if(lan == null)
>                 String lan = "len";
>                 Log.d("cec", "lan = " + lan);
>                 Locale currentLocale = getContext().getResources().getConfiguration().locale;
>                 Log.d("cec", "current = " + currentLocale.getISO3Language());
>                 if (currentLocale.getISO3Language().equals(lan) ||
>                         (currentLocale.getISO3Language().equals("zho") && lan.equals("chi"))) {
>                     // Do not switch language if the new language is the same as the current one.
>                     // This helps avoid accidental country variant switching from en_US to en_AU
>                     // due to the limitation of CEC. See the warning below.
>                     return true;
>                 }
>                 final List<LocaleInfo> localeInfos = LocalePicker.getAllAssetLocales(getContext(), false);
>                 for(LocaleInfo localeInfo : localeInfos) {
>                     if(localeInfo.getLocale().getISO3Language().equals(lan)) {
>                         LocalePicker.updateLocale(localeInfo.getLocale());
>                     }
>                     else if (localeInfo.getLocale().getISO3Language().equals("zho") &&
>                             lan.equals("chi")) {
>                         LocalePicker.updateLocale(localeInfo.getLocale());
>                     }
>                 }
>                 return true;
>             case KEY_TV_AUTO_INPUT_PASSTHROUGH:
>                 writeCecOption(Settings.Global.HDMI_CONTROL_AUTO_INPUT_PASSTHROUGH,
>                         mTvAutoInputPassThrough.isChecked());
>                 return true;
184c245
<         return Settings.Global.getInt(getContext().getContentResolver(), key, 1) == 1;
---
>         return Settings.Global.getInt(getContext().getContentResolver(), key, 0) == 1;
217a279,296
>     }
> 
>     public int getMetricsCategory() {
>         return MetricsEvent.SETTINGS_TV_INPUTS_CATEGORY;
>     }
> 
>     @Override
>     public boolean onPreferenceChange(Preference preference, Object newValue) {
>             boolean isChecked = (boolean)newValue;
>             setPreferncesEnabled(isChecked);
>             return true;
>     }
> 
>     private void setPreferncesEnabled(boolean value){
>         mDeviceAutoOffPref.setEnabled(value);
>         mTvAutoOnPref.setEnabled(value);
>         mTvAutoSetLanguage.setEnabled(value);
>         mTvAutoInputPassThrough.setEnabled(value);
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/TvSettingsActivity.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/TvSettingsActivity.java
27a28
> 
36a38
> import static com.android.tv.settings.overlay.FeatureFactoryImpl.SettingsFragment;
75d76
< 
153a155,164
> 
>     // AW CODE [fix]: Pressing btn_right of mouse will directly exit after using mouse to enter the multi-level menu of TvSettings
>     @Override
>     public void onBackPressed() {
>         SettingsFragment fragment = (SettingsFragment) getSupportFragmentManager().findFragmentByTag(SETTINGS_FRAGMENT_TAG);
>         if (fragment != null) {
>             fragment.onBackPressed();
>         }
>     }
>     // AW CODE end
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/widget/AccessPointPreference.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/widget/AccessPointPreference.java
60c60
<   private AccessPoint mAccessPoint;
---
>   protected AccessPoint mAccessPoint;
diff -r /home/yajat/Desktop/aosp12_r11/packages/apps/TvSettings/Settings/src/com/android/tv/settings/widget/TvAccessPointPreference.java /home/yajat/Desktop/H618-Android12-Src/packages/apps/TvSettings/Settings/src/com/android/tv/settings/widget/TvAccessPointPreference.java
20a21,22
> import android.net.wifi.ScanResult;
> import android.net.wifi.WifiInfo;
22a25,26
> import android.util.Log;
> 
28a33,34
> import java.util.List;
> 
32a39
>     private final static String TAG = "TvAccessPointPreference";
34a42,48
>     private static final int[] WIFI6_PIE = {
>         R.drawable.ic_wifi6_signal_0,
>         R.drawable.ic_wifi6_signal_1,
>         R.drawable.ic_wifi6_signal_2,
>         R.drawable.ic_wifi6_signal_3,
>         R.drawable.ic_wifi6_signal_4
>     };
39a54
>         Log.d(TAG, "TvAccessPointPreference accessPoint=" + accessPoint);
43a59,80
>         ///AW CODE: [feat] support wifi6 logo
>         AccessPoint ap = super.mAccessPoint;
>         Log.d(TAG, "updateIcon level="+level + ", ap="+(ap));
>         if (ap != null) {
>             List<ScanResult.InformationElement> infos = ap.getInformationElements();
> 
>             boolean isWifiSixType = false;
>             Log.d(TAG, "infos=" + infos);
>             if (infos != null) {
>                 for (ScanResult.InformationElement ie : infos) {
>                     if ((ie.getId() == 0xFF) && (ie.getIdExt() == 0x23)) {
>                         isWifiSixType = true;
>                     }
>                 }
>                 Log.d(TAG, "isWifiSixType="+isWifiSixType);
>                 if (isWifiSixType) {
>                     setIcon(WIFI6_PIE[level]);
>                     return;
>                 }
>             }
>         }
>         ///AW add end
Only in /home/yajat/Desktop/H618-Android12-Src/packages/apps: UnifiedEmail
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/UniversalMediaPlayer: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/WallpaperPicker: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/apps/WallpaperPicker2: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME: .git
Only in /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/res/values: config_homlet.xml
Only in /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/res/xml: prefs_screen_advanced_homlet.xml
diff -r /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/keyboard/Keyboard.java /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/keyboard/Keyboard.java
19a20
> import android.util.Log;
52a54
>     private final String TAG = "Keyboard";
102a105,108
>     /* support for ir key */
>     private static Key mLastKey = null;
>     private static Key mCurrentKey = null;
> 
121a128,129
>         mLastKey = null;
>         mCurrentKey = null;
149a158,159
>         mLastKey = null;
>         mCurrentKey = null;
154a165,193
> 
>     /* add for homley */
>     public static boolean isLetterCode(final int code) {
>         return code >= Constants.CODE_SPACE;
>     }
> 
>     public Key getLastKey() {
>         if (mLastKey == null && mSortedKeys != null && mSortedKeys.size() != 0) {
>             mLastKey = (mCurrentKey == null) ? getSortedKeys().get(0) : mCurrentKey;
>         }
>         return mLastKey;
>     }
> 
>     public void setCurrentKey(Key key) {
>         mCurrentKey = key;
>     }
> 
>     public void setLastKey(Key key) {
>         mLastKey = key;
>     }
> 
>     public int findKeyIndex(Key key) {
>         if (mSortedKeys == null) return -1;
>         for (int i = 0; i < mSortedKeys.size(); i++){
>             if (key == mSortedKeys.get(i)) return i;
>         }
>         return -1;
>     }
>     /* add for homlet end */
diff -r /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/keyboard/MainKeyboardView.java /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/keyboard/MainKeyboardView.java
28a29
> import android.graphics.Paint.Style;
29a31
> import android.graphics.Rect;
61a64
> import com.android.inputmethod.latin.utils.ProductCheckUtils;
62a66,67
> import java.util.ArrayList;
> import java.util.List;
173a179,181
>     /* add for homlet */
>     private boolean mNeedsToDimEntireKeyboard;
> 
276a285,335
> 
>     /* add for homlet */
>     private int abs(int value) {
>         return value >= 0 ? value : -value;
>     }
> 
>     @Override
>     protected void onDraw(final Canvas canvas) {
>         super.onDraw(canvas);
>         if (!ProductCheckUtils.isHomlet())
>             return;
>         Keyboard currentKeyboard = getKeyboard();
>         List<Key> keys = currentKeyboard.getSortedKeys();
>         Paint p = new Paint();
>         p.setColor(Color.GREEN);
>         p.setStyle(Style.STROKE);
>         p.setStrokeWidth(3.75f);
>         Key mLastKey = currentKeyboard.getLastKey();
>         if (mLastKey == null && keys != null && keys.size() != 0) {
>             mLastKey = keys.get(0);
>         } else {
>             Key mostMatchKey = null;
>             int distX;
>             int distY;
>             int dist=99999;
>             List<Key> nearestKeyIndices = currentKeyboard.getNearestKeys(mLastKey.getX(),mLastKey.getY());
>             for (int i = 0; i < nearestKeyIndices.size(); i++) {
>                 Key nearKey = nearestKeyIndices.get(i);
>                 distX = abs(mLastKey.getX() - nearKey.getX());
>                 distY = abs(mLastKey.getY() - nearKey.getY());
>                 if (distX+distY < dist ) {
>                     mostMatchKey = nearKey;
>                     dist = distX+distY;
>                 }
>             }
>             if (mostMatchKey != null) {
>                 mLastKey = mostMatchKey;
>             }
>         }
>         Rect rect = new Rect(
>                 mLastKey.getX(), mLastKey.getY(),
>                 mLastKey.getX() + mLastKey.getWidth(),
>                 mLastKey.getY() + mLastKey.getHeight()
>             );
>         canvas.drawRect(rect, p);
>         // Overlay a dark rectangle to dim.
>         if (mNeedsToDimEntireKeyboard) {
>             canvas.drawRect(0.0f, 0.0f, getWidth(), getHeight(), mBackgroundDimAlphaPaint);
>         }
>     }
>     /* add for homlet end */
diff -r /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/LatinIME.java /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/LatinIME.java
42a43
> import android.os.SystemClock;
50a52
> import android.view.MotionEvent;
57a60
> import android.widget.TextView;
102a106,107
> import com.android.inputmethod.latin.utils.ProductCheckUtils;
> import com.android.inputmethod.keyboard.Key;
586a592,621
>     /* add for homlet */
>     private int mCurKeyboardKeyNums = 0;
>     private Keyboard mCurrentKeyboard;
>     private List<Key> mKeys;
>     private Key mLastKey = null;
>     private Key mPreKey = null;
>     private MainKeyboardView mMainInputView;
>     private int accuracy = 3;
> 
>     private boolean setFields(){
>         mMainInputView = mKeyboardSwitcher.getMainKeyboardView();
>         if (mMainInputView == null || !mMainInputView.isShown()) {
>             return false;
>         }
>         mCurrentKeyboard = mMainInputView.getKeyboard();
>         mKeys = mCurrentKeyboard.getSortedKeys();
>         if (mKeys != null) {
>             mCurKeyboardKeyNums = mKeys.size();
>         } else {
>             mCurKeyboardKeyNums = 0;
>             return false;
>         }
> 
>         mLastKey = mCurrentKeyboard.getLastKey();
>         if (mLastKey == null) {
>             return false;
>         }
>         return true;
>     }
> 
593a629,630
>         // get Product type , such as homlet
>         ProductCheckUtils.checkProductType();
1331a1369,1598
>     /* make LatinIME support key operation */
>     private int abs(int value){
>         return value >= 0? value: -value;
>     }
> 
>     private static final int UP = 0;
>     private static final int DOWN = 1;
>     private static final int LEFT = 2;
>     private static final int RIGHT = 3;
>     private Key findNearestKey(int direction,Key srcKey){
>         int i = 0;
>         int distX;
>         int tmpX = 9999;
>         int distY;
>         int tmpY = 9999;
>         Key retKey = null;
>         List<Key> nearestKeyIndices = null;
> 
>         switch (direction) {
>             case UP:
>                 nearestKeyIndices = mCurrentKeyboard.getNearestKeys(srcKey.getX(),srcKey.getY());
>                 for (i = 0; i < nearestKeyIndices.size(); i++) {
>                     Key nearKey = nearestKeyIndices.get(i);
>                     distY = srcKey.getY() - nearKey.getY();
>                     if (distY >= nearKey.getHeight()) {
>                         distX = abs(nearKey.getX() - srcKey.getX());
>                         if ((distY < tmpY) ||
>                                 (distY == tmpY && distX <= tmpX)) {
>                             retKey = nearKey;
>                             tmpY = distY;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>             case DOWN:
>                 nearestKeyIndices = mCurrentKeyboard.getNearestKeys(srcKey.getX(),srcKey.getY());
>                 for (i = 0; i < nearestKeyIndices.size(); i++) {
>                     Key nearKey = nearestKeyIndices.get(i);
>                     distY = nearKey.getY() - srcKey.getY();
>                     if (distY >= srcKey.getHeight()) {
>                         distX = abs(nearKey.getX() - srcKey.getX());
>                         if ((distY < tmpY) ||(distY == tmpY && distX <= tmpX)) {
>                             retKey = nearKey;
>                             tmpY = distY;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>             case LEFT:
>                 for (i = 0; i < mKeys.size(); i++) {
>                     Key nearKey = mKeys.get(i);
>                     int dY = nearKey.getY() - srcKey.getY();
>                     if ((dY >= (0 - accuracy)) && (dY <= accuracy)) {
>                         distX = srcKey.getX() - nearKey.getX();
>                         if (distX >= nearKey.getWidth() && distX <= tmpX) {
>                             retKey= nearKey;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>             case RIGHT:
>                 for (i = 0; i < mKeys.size(); i++) {
>                     Key nearKey = mKeys.get(i);
>                     int dY = nearKey.getY() - srcKey.getY();
>                     if ((dY >= (0 - accuracy)) && (dY <= accuracy)) {
>                         distX = nearKey.getX() - srcKey.getX();
>                         if (distX >= srcKey.getWidth() && distX <= tmpX) {
>                             retKey= nearKey;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>         }
>         return retKey;
>     }
> 
>     private Key circleToNextKey(int direction, Key srcKey) {
>         Key retKey = null;
>         int i = 0;
>         int distX;
>         int tmpX = 0;
>         switch (direction) {
>             case LEFT:
>                 for (i = 0; i < mKeys.size(); i++) {
>                     Key nearKey = mKeys.get(i);
>                     int dY = nearKey.getY() - srcKey.getY();
>                     if ((dY >= (0 - accuracy)) && (dY <= accuracy)) {
>                         distX = nearKey.getX() - srcKey.getX();
>                         if (distX >= nearKey.getWidth() && distX >= tmpX) {
>                             retKey = nearKey;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>             case RIGHT:
>                 for (i = 0; i < mKeys.size(); i++) {
>                     Key nearKey = mKeys.get(i);
>                     int dY = nearKey.getY() - srcKey.getY();
>                     if ((dY >= (0 - accuracy)) && (dY <= accuracy)) {
>                         distX = srcKey.getX() - nearKey.getX();
>                         if (distX >= nearKey.getWidth() && distX >= tmpX) {
>                             retKey = nearKey;
>                             tmpX = distX;
>                         }
>                     }
>                 }
>                 break;
>         }
>         return retKey;
>     }
> 
>     private boolean onKeyDownForHomlet(int keyCode, KeyEvent event) {
>         Key nearestKey = null;
>         switch (keyCode) {
>             case KeyEvent.KEYCODE_DPAD_DOWN:
>                 AudioAndHapticFeedbackManager.getInstance().performAudioFeedback(keyCode);
>                 if (!setFields()) {
>                     break;
>                 }
>                 nearestKey = findNearestKey(DOWN, mLastKey);
>                 if (nearestKey != null) {
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 }
>                 mMainInputView.invalidate();
>                 return true;
> 
>             case KeyEvent.KEYCODE_DPAD_UP:
>                 AudioAndHapticFeedbackManager.getInstance().performAudioFeedback(keyCode);
>                 if (!setFields()) {
>                     break;
>                 }
>                 nearestKey = findNearestKey(UP, mLastKey);
>                 if (nearestKey != null) {
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 }
>                 mMainInputView.invalidate();
>                 return true;
> 
>             case KeyEvent.KEYCODE_DPAD_LEFT:
>                 AudioAndHapticFeedbackManager.getInstance().performAudioFeedback(keyCode);
>                 if (!setFields()) {
>                     break;
>                 }
>                 nearestKey = findNearestKey(LEFT, mLastKey);
>                 if (nearestKey != null) {
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 } else {
>                     nearestKey = circleToNextKey(LEFT, mLastKey);
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 }
>                 mMainInputView.invalidate();
>                 return true;
> 
>             case KeyEvent.KEYCODE_DPAD_RIGHT:
>                 AudioAndHapticFeedbackManager.getInstance().performAudioFeedback(keyCode);
>                 if (!setFields()) {
>                     break;
>                 }
>                 nearestKey = findNearestKey(RIGHT, mLastKey);
>                 if (nearestKey != null) {
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 } else {
>                     nearestKey = circleToNextKey(RIGHT, mLastKey);
>                     mCurrentKeyboard.setLastKey(nearestKey);
>                     mCurrentKeyboard.setCurrentKey(nearestKey);
>                 }
>                 mMainInputView.invalidate();
>                 return true;
> 
>             case KeyEvent.KEYCODE_DPAD_CENTER:
>                 if (!setFields()) {
>                     Log.d(TAG,"setFields fail, break");
>                     break;
>                 }
>                 if (mPreKey == mLastKey) {
>                     Log.d(TAG,"return true");
>                     return true;
>                 }
>                 mPreKey = mLastKey;
>                 final MotionEvent me = MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, mLastKey.getX()+mLastKey.getWidth()/2, mLastKey.getY()+mLastKey.getHeight()/2, 0);
>                 final MainKeyboardView tempInputView = mMainInputView;
>                 if (mPreKey.getCode() == Constants.CODE_ENTER) {
>                     mHandler.postDelayed(new Runnable() {
>                         public void run() {
>                             tempInputView.onTouchEvent(me);
>                         }
>                     }, 100);
>                 } else {
>                     tempInputView.onTouchEvent(me);
>                 }
>                 return true;
>         }
>         return super.onKeyDown(keyCode, event);
>     }
> 
>     private boolean onKeyUpForHomlet(final int keyCode, final KeyEvent keyEvent) {
>         switch (keyCode) {
>             case KeyEvent.KEYCODE_DPAD_CENTER:
>                 if (!setFields() || mPreKey == null)
>                     break;
>                 final MotionEvent me = MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, mLastKey.getX() + mLastKey.getWidth()/2, mLastKey.getY() + mLastKey.getHeight()/2, 0);
>                 final MainKeyboardView tempInputView = mMainInputView;
>                 if (mPreKey.getCode() == Constants.CODE_ENTER) {
>                     mHandler.postDelayed (new Runnable() {
>                         public void run() {
>                             tempInputView.onTouchEvent(me);
>                         }
>                     }, 100);
>                 } else {
>                     tempInputView.onTouchEvent(me);
>                 }
>                 mPreKey = null;
>                 break;
>         }
>         return super.onKeyUp(keyCode, keyEvent);
>     }
> 
>     // This will reset the whole input state to the starting state. It will clear
>     // the composing word, reset the last composed word, tell the inputconnection about it.
> 
1759a2027,2029
>         if (ProductCheckUtils.isHomlet()) {
>             return onKeyDownForHomlet(keyCode, keyEvent);
>         }
1784a2055,2057
>         if (ProductCheckUtils.isHomlet()) {
>             return onKeyUpForHomlet(keyCode, keyEvent);
>         }
diff -r /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/settings/AdvancedSettingsFragment.java /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/settings/AdvancedSettingsFragment.java
30a31
> import com.android.inputmethod.latin.utils.ProductCheckUtils;
47c48,52
<         addPreferencesFromResource(R.xml.prefs_screen_advanced);
---
>         if (ProductCheckUtils.isHomlet()) {
>             addPreferencesFromResource(R.xml.prefs_screen_advanced_homlet);
> 		} else {
>             addPreferencesFromResource(R.xml.prefs_screen_advanced);
>         }
229,230c234,240
<         final SeekBarDialogPreference pref = (SeekBarDialogPreference)findPreference(
<                 Settings.PREF_KEY_LONGPRESS_TIMEOUT);
---
>         String prefKey;
>         if (ProductCheckUtils.isHomlet()) {
>             prefKey = Settings.PREF_KEY_LONGPRESS_TIMEOUT_HOMLET;
>         } else {
>             prefKey = Settings.PREF_KEY_LONGPRESS_TIMEOUT;
>         }
>         final SeekBarDialogPreference pref = (SeekBarDialogPreference)findPreference(prefKey);
diff -r /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/settings/Settings.java /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/settings/Settings.java
36a37
> import com.android.inputmethod.latin.utils.ProductCheckUtils;
92a94
>     public static final String PREF_KEY_LONGPRESS_TIMEOUT_HOMLET = "pref_key_longpress_timeout_homlet";
305a308,313
>         String prefKey;
>         if (ProductCheckUtils.isHomlet()) {
>             prefKey = PREF_KEY_LONGPRESS_TIMEOUT_HOMLET;
>         } else {
>             prefKey = PREF_KEY_LONGPRESS_TIMEOUT;
>         }
307c315
<                 PREF_KEY_LONGPRESS_TIMEOUT, UNDEFINED_PREFERENCE_VALUE_INT);
---
>                 prefKey, UNDEFINED_PREFERENCE_VALUE_INT);
312a321,322
>         if (ProductCheckUtils.isHomlet())
>             return res.getInteger(R.integer.config_default_longpress_key_timeout_homlet);
Only in /home/yajat/Desktop/H618-Android12-Src/packages/inputmethods/LatinIME/java/src/com/android/inputmethod/latin/utils: ProductCheckUtils.java
Only in /home/yajat/Desktop/aosp12_r11/packages/inputmethods/LeanbackIME: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/adb: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/ArtPrebuilt: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/BootPrebuilt/5.10/arm64: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/BootPrebuilt/5.4/arm64: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/CaptivePortalLogin: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/CellBroadcastService: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/common: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/framework/api/current.txt /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/framework/api/current.txt
139a140
>     field @Deprecated public static final int TYPE_PPPOE = 19; // 0x13
335a337
>     field public static final int TRANSPORT_PPPOE = 9; // 0x9
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/framework/api/system-current.txt /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/framework/api/system-current.txt
121a122
>     enum_constant public static final android.net.IpConfiguration.IpAssignment PPPOE;
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/framework/src/android/net/ConnectivityManager.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/framework/src/android/net/ConnectivityManager.java
49a50
> import android.os.SystemProperties;
738a740,744
>     ///AW CODE: [feat] set TYPE_PPPOE
>     @Deprecated
>     public static final int TYPE_PPPOE = 19;
>     ///AW: add end
> 
776c782
<     public static final int MAX_RADIO_TYPE = TYPE_TEST;
---
>     public static final int MAX_RADIO_TYPE = TYPE_PPPOE;
779c785
<     public static final int MAX_NETWORK_TYPE = TYPE_TEST;
---
>     public static final int MAX_NETWORK_TYPE = TYPE_PPPOE;
960c966,973
<         return MIN_NETWORK_TYPE <= networkType && networkType <= MAX_NETWORK_TYPE;
---
>         ///AW CODE: [feat] add TYPE_PPPOE and change the returned value
>         if (SystemProperties.get("ro.product.platform").equals("homlet")||
>         "homlet".equals(SystemProperties.get("ro.build.characteristics", null))||
>         "stb".equals(SystemProperties.get("ro.build.characteristics", null))) {
>             return MIN_NETWORK_TYPE <= networkType && networkType <= MAX_NETWORK_TYPE;
>         }
>         return MIN_NETWORK_TYPE <= networkType && networkType <= TYPE_TEST;
>         ///AW:add end
1013a1027,1028
>             case TYPE_PPPOE:
>                 return "PPPOE";
1862a1878,1880
>         ///AW CODE: [feat]
>         sLegacyTypeToTransport.put(TYPE_PPPOE,        NetworkCapabilities.TRANSPORT_PPPOE);
>         ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/framework/src/android/net/IpConfiguration.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/framework/src/android/net/IpConfiguration.java
47a48,50
>         ///AW CODE: [feat] Use for pppoe
>         PPPOE,
>         ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/framework/src/android/net/NetworkCapabilities.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/framework/src/android/net/NetworkCapabilities.java
880a881
>             TRANSPORT_PPPOE,
931a933,938
>     ///AW CODE: [feat]
>     /**
>      * Indicates this network uses a PPPOE transport.
>      */
>     public static final int TRANSPORT_PPPOE = 9;
>     ///AW: add end
933a941,945
>     ///AW CODE: [feat]
>     /** @hide */
>     public static final int MAX_TRANSPORT = TRANSPORT_PPPOE;
>     ///AW: add end
> 
935c947
<     public static final int MAX_TRANSPORT = TRANSPORT_USB;
---
>     //public static final int MAX_TRANSPORT = TRANSPORT_USB;
951c963,964
<         "USB"
---
>         "USB",
>         "PPPOE"
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/service/src/com/android/server/connectivity/FullScore.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/service/src/com/android/server/connectivity/FullScore.java
32a33
> import android.os.SystemProperties;
304c305,311
<             score -= UNVALIDATED_SCORE_PENALTY;
---
>             ///AW CODE: [feat] add a if statement
>             if (!(SystemProperties.get("ro.product.platform").equals("homlet") ||
>                 SystemProperties.get("ro.build.characteristics").equals("homlet")||
>                 SystemProperties.get("ro.build.characteristics").equals("stb"))) {
>                 score -= UNVALIDATED_SCORE_PENALTY;
>             }
>             ///AW: add end
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/service/src/com/android/server/connectivity/NetworkRanker.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/service/src/com/android/server/connectivity/NetworkRanker.java
66c66
<     private static final boolean USE_POLICY_RANKING = true;
---
>     private static final boolean USE_POLICY_RANKING = false;
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Connectivity/service/src/com/android/server/ConnectivityService.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Connectivity/service/src/com/android/server/ConnectivityService.java
85a86,88
> import static android.net.RouteInfo.RTN_THROW;
> import static android.net.RouteInfo.RTN_UNICAST;
> import static android.net.RouteInfo.RTN_UNREACHABLE;
190a194,195
> import android.net.shared.RouteUtils;
> import android.net.shared.RouteUtils.ModifyOperation;
223a229
> import android.util.Log;
1367a1374,1401
>         ///AW CODE: [feat] set the mNetworkRequests
>         if (SystemProperties.get("ro.product.platform").equals("homlet") ||
>                 SystemProperties.get("ro.build.characteristics").equals("homlet")||
>                 SystemProperties.get("ro.build.characteristics").equals("stb")) {
>             final NetworkRequest mWifiRequest = createDefaultInternetRequestForTransport(
>                                                  NetworkCapabilities.TRANSPORT_WIFI,
>                                                  NetworkRequest.Type.REQUEST);
>             NetworkRequestInfo wifiNRI = new NetworkRequestInfo( Process.myUid(), mWifiRequest, null, new Binder(), NetworkCallback.FLAG_INCLUDE_LOCATION_INFO, null);
>             mNetworkRequests.put(mWifiRequest, wifiNRI);
>             mNetworkRequestInfoLogs.log("REGISTER " + wifiNRI);
> 
>             final NetworkRequest mEthernetRequest = createDefaultInternetRequestForTransport(
>                                                      NetworkCapabilities.TRANSPORT_ETHERNET,
>                                                      NetworkRequest.Type.REQUEST);
>             NetworkRequestInfo ethernetNRI = new NetworkRequestInfo( Process.myUid(), mEthernetRequest, null, new Binder(), NetworkCallback.FLAG_INCLUDE_LOCATION_INFO, null);
>             mNetworkRequests.put(mEthernetRequest, ethernetNRI);
>             mNetworkRequestInfoLogs.log("REGISTER " + ethernetNRI);
> 
>             final NetworkRequest mPppoeRequest = createDefaultInternetRequestForTransport(
>                                                   NetworkCapabilities.TRANSPORT_PPPOE,
>                                                   NetworkRequest.Type.REQUEST);
>             NetworkRequestInfo pppoeNRI = new NetworkRequestInfo( Process.myUid(), mPppoeRequest, null, new Binder(), NetworkCallback.FLAG_INCLUDE_LOCATION_INFO, null);
>             mNetworkRequests.put(mPppoeRequest, pppoeNRI);
>             mNetworkRequestInfoLogs.log("REGISTER " + pppoeNRI);
>             Log.d("pppoeNRI:", ""+pppoeNRI);
>         }
>         ///AW: add end
> 
1848a1883,1897
> 
>         if (checkMobileType(networkType)) {
>             try {
>                 String[] packages = mContext.getPackageManager().getPackagesForUid(uid);
>                 for (String pkg : packages) {
>                     if ("android.telephony.cts".equals(pkg) ||
>                             "android.net.cts".equals(pkg) ||
>                             "com.google.android.gts.telephony".equals(pkg)) {
>                         return null;
>                     }
>                 }
>             } catch (Exception e) {
>                 Log.e("TAG", "Exception = "  + e );
>             }
>         }
1870a1920,1937
>     private boolean checkMobileType(int type) {
>         switch (type) {
>             case TYPE_MOBILE:
>             case TYPE_MOBILE_MMS:
>             case TYPE_MOBILE_SUPL:
>             case TYPE_MOBILE_DUN:
>             case TYPE_MOBILE_HIPRI:
>             case TYPE_MOBILE_FOTA:
>             case TYPE_MOBILE_IMS:
>             case TYPE_MOBILE_CBS:
>             case TYPE_MOBILE_IA:
>             case TYPE_MOBILE_EMERGENCY:
>                 return true;
>             default:
>                 return false;
>         }
>     }
> 
1873a1941,1952
>         final int uid = mDeps.getCallingUid();
>         int packageUid;
>         boolean isCtsTest = false;
>         try {
>             packageUid = mContext.getPackageManager().getPackageUid("android.net.cts", 0);
>             if (packageUid == uid) {
>                 Log.d(TAG, "Claim do not support mobile network during cts net testcase.");
>                 isCtsTest = true;
>             }
>         } catch (Exception e) {
>             Log.e(TAG, "Exception = "  + e );
>         }
1877a1957,1958
>             if (isCtsTest && checkMobileType(networkType))
>                 continue;
1977a2059,2071
>         if (checkMobileType(networkType)) {
>             final int uid = mDeps.getCallingUid();
>             int packageUid;
>             try {
>                 packageUid = mContext.getPackageManager().getPackageUid("android.net.cts", 0);
>                 if (packageUid == uid) {
>                     Log.d(TAG, "Claim do not support mobile network during cts net testcase.");
>                     return false;
>                 }
>             } catch (Exception e) {
>                 Log.e(TAG, "Exception = "  + e );
>             }
>         }
6719d6812
< 
7099a7193,7198
>                 ///AW CODE: [feat] set the RounteInfo and mNMS
>                 if (route.getInterface().equals("ppp0") || route.getInterface().equals("ppp1")) {
>                      RouteInfo xroute = RouteInfo.makeHostRoute(route.getGateway(), route.getInterface());
>                      mNetd.networkAddRouteParcel(netId, convertRouteInfo(xroute));
>                 }
>                 ///AW: add end
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Cronet: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsProxyListener.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsProxyListener.cpp
440c440
<     if (!WOULD_LOG(DEBUG)) return;
---
>     if (!WOULD_LOG(VERBOSE)) return;
443c443
<     LOG(DEBUG) << __func__ << ": DNS records:";
---
>     LOG(VERBOSE) << __func__ << ": DNS records:";
447c447
<             LOG(DEBUG) << __func__ << ": [" << i << "] " << hp->h_addrtype;
---
>             LOG(VERBOSE) << __func__ << ": [" << i << "] " << hp->h_addrtype;
449c449
<             PLOG(DEBUG) << __func__ << ": [" << i << "] numeric hostname translation fail";
---
>             PLOG(VERBOSE) << __func__ << ": [" << i << "] numeric hostname translation fail";
455c455
<     if (!WOULD_LOG(DEBUG)) return;
---
>     if (!WOULD_LOG(VERBOSE)) return;
460c460
<     LOG(DEBUG) << __func__ << ": DNS records:";
---
>     LOG(VERBOSE) << __func__ << ": DNS records:";
467c467
<             LOG(DEBUG) << __func__ << ": [" << i << "] " << ai->ai_flags << " " << ai->ai_family
---
>             LOG(VERBOSE) << __func__ << ": [" << i << "] " << ai->ai_flags << " " << ai->ai_family
470c470
<             LOG(DEBUG) << __func__ << ": [" << i << "] numeric hostname translation fail " << ret;
---
>             LOG(VERBOSE) << __func__ << ": [" << i << "] numeric hostname translation fail " << ret;
726c726
<     LOG(DEBUG) << "GetAddrInfoHandler::run: {" << mNetContext.app_netid << " "
---
>     LOG(VERBOSE) << "GetAddrInfoHandler::run: {" << mNetContext.app_netid << " "
901c901
<     LOG(DEBUG) << "ResNSendHandler::run: " << mFlags << " / {" << mNetContext.app_netid << " "
---
>     LOG(VERBOSE) << "ResNSendHandler::run: " << mFlags << " / {" << mNetContext.app_netid << " "
1158c1158
<     LOG(DEBUG) << "GetHostByNameHandler::run: result: " << gai_strerror(rv);
---
>     LOG(VERBOSE) << "GetHostByNameHandler::run: result: " << gai_strerror(rv);
1313c1313
<     LOG(DEBUG) << "GetHostByAddrHandler::run: result: " << gai_strerror(rv);
---
>     LOG(VERBOSE) << "GetHostByAddrHandler::run: result: " << gai_strerror(rv);
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsResolver.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsResolver.cpp
32c32
<     LOG(INFO) << __func__ << ": Initializing resolver";
---
>     LOG(VERBOSE) << __func__ << ": Initializing resolver";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsTlsDispatcher.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsTlsDispatcher.cpp
75c75
<                     LOG(DEBUG) << "Skip using DoT server " << tlsServer.toIpString() << " on "
---
>                     LOG(VERBOSE) << "Skip using DoT server " << tlsServer.toIpString() << " on "
191c191
<             LOG(DEBUG) << "Response too large: " << result.response.size() << " > " << ans.size();
---
>             LOG(VERBOSE) << "Response too large: " << result.response.size() << " > " << ans.size();
194c194
<             LOG(DEBUG) << "Got response successfully";
---
>             LOG(VERBOSE) << "Got response successfully";
199c199
<         LOG(DEBUG) << "Query failed: " << (unsigned int)code;
---
>         LOG(VERBOSE) << "Query failed: " << (unsigned int)code;
236c236
<     LOG(DEBUG) << "Sending query of length " << query.size();
---
>     LOG(VERBOSE) << "Sending query of length " << query.size();
241c241
<     LOG(DEBUG) << "Awaiting response";
---
>     LOG(VERBOSE) << "Awaiting response";
322c322
<     LOG(DEBUG) << "Transport is initialized with { " << triggerThr << ", " << unusableThr << ", "
---
>     LOG(VERBOSE) << "Transport is initialized with { " << triggerThr << ", " << unusableThr << ", "
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsTlsQueryMap.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsTlsQueryMap.cpp
152c152
<     LOG(DEBUG) << "Sending result to dispatcher";
---
>     LOG(VERBOSE) << "Sending result to dispatcher";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsTlsSessionCache.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsTlsSessionCache.cpp
50c50
<     LOG(DEBUG) << "Recording session";
---
>     LOG(VERBOSE) << "Recording session";
59c59
<         LOG(DEBUG) << "Too many sessions; trimming";
---
>         LOG(VERBOSE) << "Too many sessions; trimming";
67c67
<         LOG(DEBUG) << "No known sessions";
---
>         LOG(VERBOSE) << "No known sessions";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsTlsSocket.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsTlsSocket.cpp
74c74
<     LOG(DEBUG) << mMark << " connecting TCP socket";
---
>     LOG(VERBOSE) << mMark << " connecting TCP socket";
184c184
<     LOG(DEBUG) << "DnsTlsSocket is initialized with { mConnectTimeoutMs: " << mConnectTimeoutMs
---
>     LOG(VERBOSE) << "DnsTlsSocket is initialized with { mConnectTimeoutMs: " << mConnectTimeoutMs
256c256
<         LOG(DEBUG) << "Setting session";
---
>         LOG(VERBOSE) << "Setting session";
259c259
<         LOG(DEBUG) << "No session available";
---
>         LOG(VERBOSE) << "No session available";
272c272
<         LOG(DEBUG) << " Calling SSL_connect with mark 0x" << std::hex << mMark;
---
>         LOG(VERBOSE) << " Calling SSL_connect with mark 0x" << std::hex << mMark;
274c274
<         LOG(DEBUG) << " SSL_connect returned " << ret << " with mark 0x" << std::hex << mMark;
---
>         LOG(VERBOSE) << " SSL_connect returned " << ret << " with mark 0x" << std::hex << mMark;
305c305
<     LOG(DEBUG) << mMark << " handshake complete";
---
>     LOG(VERBOSE) << mMark << " handshake complete";
317c317
<         LOG(DEBUG) << " Calling SSL_connect with mark 0x" << std::hex << mMark;
---
>         LOG(VERBOSE) << " Calling SSL_connect with mark 0x" << std::hex << mMark;
319c319
<         LOG(DEBUG) << " SSL_connect returned " << ret << " with mark 0x" << std::hex << mMark;
---
>         LOG(VERBOSE) << " SSL_connect returned " << ret << " with mark 0x" << std::hex << mMark;
358c358
<     LOG(DEBUG) << mMark << " handshake complete";
---
>     LOG(VERBOSE) << mMark << " handshake complete";
372c372
<     LOG(DEBUG) << mMark << " Writing " << buffer.size() << " bytes";
---
>     LOG(VERBOSE) << mMark << " Writing " << buffer.size() << " bytes";
389c389
<                     LOG(DEBUG) << "SSL_write error " << ssl_err;
---
>                     LOG(VERBOSE) << "SSL_write error " << ssl_err;
394c394
<     LOG(DEBUG) << mMark << " Wrote " << buffer.size() << " bytes";
---
>     LOG(VERBOSE) << mMark << " Wrote " << buffer.size() << " bytes";
418c418
<         LOG(DEBUG) << "Handshaking succeeded";
---
>         LOG(VERBOSE) << "Handshaking succeeded";
445c445
<             LOG(DEBUG) << "Idle timeout";
---
>             LOG(VERBOSE) << "Idle timeout";
449c449
<             PLOG(DEBUG) << "Poll failed";
---
>             PLOG(VERBOSE) << "Poll failed";
461c461
<                     LOG(DEBUG) << "SSL remote close or read error.";
---
>                     LOG(VERBOSE) << "SSL remote close or read error.";
483c483
<                 LOG(DEBUG) << "Negative eventfd read indicates destructor-initiated shutdown";
---
>                 LOG(VERBOSE) << "Negative eventfd read indicates destructor-initiated shutdown";
500c500
<     LOG(DEBUG) << "Disconnecting";
---
>     LOG(VERBOSE) << "Disconnecting";
502c502
<     LOG(DEBUG) << "Calling onClosed";
---
>     LOG(VERBOSE) << "Calling onClosed";
505c505
<     LOG(DEBUG) << "Ending loop";
---
>     LOG(VERBOSE) << "Ending loop";
509c509
<     LOG(DEBUG) << "Destructor";
---
>     LOG(VERBOSE) << "Destructor";
521c521
<         LOG(DEBUG) << "Waiting for loop thread to terminate";
---
>         LOG(VERBOSE) << "Waiting for loop thread to terminate";
525c525
<     LOG(DEBUG) << "Destructor completed";
---
>     LOG(VERBOSE) << "Destructor completed";
602c602
<                 LOG(DEBUG) << "SSL_read error " << ssl_err;
---
>                 LOG(VERBOSE) << "SSL_read error " << ssl_err;
617c617
<     LOG(DEBUG) << mMark << " SSL_write complete";
---
>     LOG(VERBOSE) << mMark << " SSL_write complete";
622c622
<     LOG(DEBUG) << "reading response";
---
>     LOG(VERBOSE) << "reading response";
626c626
<         LOG(DEBUG) << "Ignoring spurious wakeup from server";
---
>         LOG(VERBOSE) << "Ignoring spurious wakeup from server";
636c636
<     LOG(DEBUG) << mMark << " Expecting response of size " << responseSize;
---
>     LOG(VERBOSE) << mMark << " Expecting response of size " << responseSize;
639c639
<         LOG(DEBUG) << mMark << " Failed to read " << response.size() << " bytes";
---
>         LOG(VERBOSE) << mMark << " Failed to read " << response.size() << " bytes";
647c647
<             LOG(DEBUG) << mMark << " Failed to discard " << discard.size() << " bytes";
---
>             LOG(VERBOSE) << mMark << " Failed to discard " << discard.size() << " bytes";
652c652
<     LOG(DEBUG) << mMark << " SSL_read complete";
---
>     LOG(VERBOSE) << mMark << " SSL_read complete";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/DnsTlsTransport.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/DnsTlsTransport.cpp
88c88
<     LOG(DEBUG) << "answer count: " << ancount;
---
>     LOG(VERBOSE) << "answer count: " << ancount;
164c164
<         LOG(DEBUG) << "No socket for query.  Opening socket and sending.";
---
>         LOG(VERBOSE) << "No socket for query.  Opening socket and sending.";
188c188
<     LOG(DEBUG) << "Constructing new socket";
---
>     LOG(VERBOSE) << "Constructing new socket";
199c199
<         LOG(DEBUG) << "Initialization succeeded.  Reissuing " << queries.size() << " queries.";
---
>         LOG(VERBOSE) << "Initialization succeeded.  Reissuing " << queries.size() << " queries.";
206c206
<         LOG(DEBUG) << "Initialization failed.";
---
>         LOG(VERBOSE) << "Initialization failed.";
208c208
<         LOG(DEBUG) << "Failing all pending queries.";
---
>         LOG(VERBOSE) << "Failing all pending queries.";
245c245
<         LOG(DEBUG) << "Fast reconnect to retry remaining queries";
---
>         LOG(VERBOSE) << "Fast reconnect to retry remaining queries";
248c248
<         LOG(DEBUG) << "No pending queries.  Going idle.";
---
>         LOG(VERBOSE) << "No pending queries.  Going idle.";
254c254
<     LOG(DEBUG) << "Destructor";
---
>     LOG(VERBOSE) << "Destructor";
257c257
<         LOG(DEBUG) << "Locked destruction procedure";
---
>         LOG(VERBOSE) << "Locked destruction procedure";
265c265
<         LOG(DEBUG) << "Waiting for reconnect thread to terminate";
---
>         LOG(VERBOSE) << "Waiting for reconnect thread to terminate";
272c272
<     LOG(DEBUG) << "Destructor completed";
---
>     LOG(VERBOSE) << "Destructor completed";
279c279
<     LOG(DEBUG) << "Beginning validation with mark " << std::hex << mark;
---
>     LOG(VERBOSE) << "Beginning validation with mark " << std::hex << mark;
316c316
<     LOG(INFO) << fmt::format("Use flags: latencyFactor={}, latencyOffsetMs={}", latencyFactor,
---
>     LOG(VERBOSE) << fmt::format("Use flags: latencyFactor={}, latencyOffsetMs={}", latencyFactor,
328c328
<             LOG(INFO) << fmt::format("UDP probe for {} {}, took {:.3f}ms", server.toIpString(),
---
>             LOG(VERBOSE) << fmt::format("UDP probe for {} {}, took {:.3f}ms", server.toIpString(),
356c356
<         LOG(INFO) << fmt::format("DoT probe for {} {}, took {:.3f}ms", server.toIpString(),
---
>         LOG(VERBOSE) << fmt::format("DoT probe for {} {}, took {:.3f}ms", server.toIpString(),
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/getaddrinfo.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/getaddrinfo.cpp
371c371
<             LOG(DEBUG) << __func__ << ": explore_numeric: ai_family=" << tmp.ai_family
---
>             LOG(VERBOSE) << __func__ << ": explore_numeric: ai_family=" << tmp.ai_family
444c444
<         LOG(DEBUG) << __func__ << ": explore_fqdn(): ai_family=" << tmp.ai_family
---
>         LOG(VERBOSE) << __func__ << ": explore_fqdn(): ai_family=" << tmp.ai_family
506c506
<     LOG(DEBUG) << __func__;
---
>     LOG(VERBOSE) << __func__;
619c619
<     LOG(DEBUG) << __func__;
---
>     LOG(VERBOSE) << __func__;
957c957
<                 LOG(DEBUG) << __func__ << ": asked for \"" << qname << " " << p_class(C_IN) << " "
---
>                 LOG(VERBOSE) << __func__ << ": asked for \"" << qname << " " << p_class(C_IN) << " "
966c966
<                     LOG(DEBUG) << __func__ << ": asked for \"" << canonname << "\", got \"" << bp
---
>                     LOG(VERBOSE) << __func__ << ": asked for \"" << canonname << "\", got \"" << bp
1620c1620
<     LOG(DEBUG) << __func__ << ": (" << cl << ", " << type << ")";
---
>     LOG(VERBOSE) << __func__ << ": (" << cl << ", " << type << ")";
1655c1655
<             LOG(DEBUG) << __func__ << ": retry without EDNS0";
---
>             LOG(VERBOSE) << __func__ << ": retry without EDNS0";
1662c1662
<     LOG(DEBUG) << __func__ << ": rcode=" << hp->rcode << ", ancount=" << ntohs(hp->ancount);
---
>     LOG(VERBOSE) << __func__ << ": rcode=" << hp->rcode << ", ancount=" << ntohs(hp->ancount);
1756c1756
<         LOG(DEBUG) << __func__ << ": (" << cl << ", " << type << ")";
---
>         LOG(VERBOSE) << __func__ << ": (" << cl << ", " << type << ")";
1782c1782
<                 LOG(DEBUG) << __func__ << ": retry without EDNS0";
---
>                 LOG(VERBOSE) << __func__ << ": retry without EDNS0";
1786c1786
<             LOG(DEBUG) << __func__ << ": rcode=" << hp->rcode << ", ancount=" << ntohs(hp->ancount);
---
>             LOG(VERBOSE) << __func__ << ": rcode=" << hp->rcode << ", ancount=" << ntohs(hp->ancount);
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/gethnamaddr.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/gethnamaddr.cpp
266c266
<                 LOG(DEBUG) << __func__ << ": asked for \"" << qname << " " << p_class(C_IN) << " "
---
>                 LOG(VERBOSE) << __func__ << ": asked for \"" << qname << " " << p_class(C_IN) << " "
274c274
<                     LOG(DEBUG) << __func__ << ": asked for \"" << qname << "\", got \"" << bp
---
>                     LOG(VERBOSE) << __func__ << ": asked for \"" << qname << "\", got \"" << bp
302c302
<                     LOG(DEBUG) << __func__ << ": asked for \"" << hent->h_name << "\", got \"" << bp
---
>                     LOG(VERBOSE) << __func__ << ": asked for \"" << hent->h_name << "\", got \"" << bp
330c330
<                     LOG(DEBUG) << __func__ << ": size (" << n << ") too big";
---
>                     LOG(VERBOSE) << __func__ << ": size (" << n << ") too big";
336c336
<                         LOG(DEBUG) << __func__ << ": Too many addresses (" << MAXADDRS << ")";
---
>                         LOG(VERBOSE) << __func__ << ": Too many addresses (" << MAXADDRS << ")";
674c674
<         LOG(DEBUG) << __func__ << ": res_nsearch failed (" << n << ")";
---
>         LOG(VERBOSE) << __func__ << ": res_nsearch failed (" << n << ")";
736c736
<         LOG(DEBUG) << __func__ << ": res_nquery failed (" << n << ")";
---
>         LOG(VERBOSE) << __func__ << ": res_nquery failed (" << n << ")";
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/PrivateDnsConfiguration.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/PrivateDnsConfiguration.cpp
62c62
<     LOG(DEBUG) << "PrivateDnsConfiguration::set(" << netId << ", 0x" << std::hex << mark << std::dec
---
>     LOG(VERBOSE) << "PrivateDnsConfiguration::set(" << netId << ", 0x" << std::hex << mark << std::dec
142c142
<     LOG(DEBUG) << "PrivateDnsConfiguration::clear(" << netId << ")";
---
>     LOG(VERBOSE) << "PrivateDnsConfiguration::clear(" << netId << ")";
242c242
<     LOG(DEBUG) << "Sending validation " << (success ? "success" : "failure") << " event on netId "
---
>     LOG(VERBOSE) << "Sending validation " << (success ? "success" : "failure") << " event on netId "
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/res_cache.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/res_cache.cpp
355c355
<     LOG(INFO) << __func__ << ": malformed QNAME";
---
>     LOG(VERBOSE) << __func__ << ": malformed QNAME";
371c371
<         LOG(INFO) << __func__ << ": unsupported TYPE";
---
>         LOG(VERBOSE) << __func__ << ": unsupported TYPE";
376c376
<         LOG(INFO) << __func__ << ": unsupported CLASS";
---
>         LOG(VERBOSE) << __func__ << ": unsupported CLASS";
391c391
<         LOG(INFO) << __func__ << ": query packet too small";
---
>         LOG(VERBOSE) << __func__ << ": query packet too small";
398c398
<         LOG(INFO) << __func__ << ": query packet flags unsupported";
---
>         LOG(VERBOSE) << __func__ << ": query packet flags unsupported";
426c426
<         LOG(INFO) << __func__ << ": query packet contains non-query records";
---
>         LOG(VERBOSE) << __func__ << ": query packet contains non-query records";
431c431
<         LOG(INFO) << __func__ << ": query packet doesn't contain query record";
---
>         LOG(VERBOSE) << __func__ << ": query packet doesn't contain query record";
472c472
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: read-overflow";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: read-overflow";
481c481
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: malformed domain";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: malformed domain";
485c485
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: simple label read-overflow";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: simple label read-overflow";
570c570
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: read-overflow";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: read-overflow";
583c583
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: malformed domain";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: malformed domain";
587c587
<             LOG(INFO) << __func__ << ": INTERNAL_ERROR: simple label read-overflow";
---
>             LOG(VERBOSE) << __func__ << ": INTERNAL_ERROR: simple label read-overflow";
596c596
<     LOG(INFO) << __func__ << ": different DN";
---
>     LOG(VERBOSE) << __func__ << ": different DN";
644c644
<         LOG(INFO) << __func__ << ": different RD";
---
>         LOG(VERBOSE) << __func__ << ": different RD";
649c649
<         LOG(INFO) << __func__ << ": different CD or AD";
---
>         LOG(VERBOSE) << __func__ << ": different CD or AD";
661c661
<         LOG(INFO) << __func__ << ": different QDCOUNT";
---
>         LOG(VERBOSE) << __func__ << ": different QDCOUNT";
673c673
<         LOG(INFO) << __func__ << ": different ARCOUNT";
---
>         LOG(VERBOSE) << __func__ << ": different ARCOUNT";
680c680
<             LOG(INFO) << __func__ << ": different QR";
---
>             LOG(VERBOSE) << __func__ << ": different QR";
688c688
<             LOG(INFO) << __func__ << ": different additional RR";
---
>             LOG(VERBOSE) << __func__ << ": different additional RR";
795c795
<                     PLOG(INFO) << __func__ << ": ns_parserr failed ancount no = " << n;
---
>                     PLOG(VERBOSE) << __func__ << ": ns_parserr failed ancount no = " << n;
800c800
<         PLOG(INFO) << __func__ << ": ns_initparse failed";
---
>         PLOG(VERBOSE) << __func__ << ": ns_initparse failed";
803c803
<     LOG(INFO) << __func__ << ": TTL = " << result;
---
>     LOG(VERBOSE) << __func__ << ": TTL = " << result;
972c972
<         LOG(INFO) << "DNS cache flushed";
---
>         LOG(VERBOSE) << "DNS cache flushed";
1123c1123
<     LOG(INFO) << __func__ << ": " << buf;
---
>     LOG(VERBOSE) << __func__ << ": " << buf;
1167c1167
<     LOG(INFO) << __func__ << ": entry " << e->id << " added (count=" << cache->num_entries << ")";
---
>     LOG(VERBOSE) << __func__ << ": entry " << e->id << " added (count=" << cache->num_entries << ")";
1177c1177
<     LOG(INFO) << __func__ << ": entry " << e->id << " removed (count=" << cache->num_entries - 1
---
>     LOG(VERBOSE) << __func__ << ": entry " << e->id << " removed (count=" << cache->num_entries - 1
1193c1193
<         LOG(INFO) << __func__ << ": OLDEST NOT IN HTABLE ?";
---
>         LOG(VERBOSE) << __func__ << ": OLDEST NOT IN HTABLE ?";
1196c1196
<     LOG(INFO) << __func__ << ": Cache full - removing oldest";
---
>     LOG(VERBOSE) << __func__ << ": Cache full - removing oldest";
1212c1212
<                 LOG(INFO) << __func__ << ": ENTRY NOT IN HTABLE ?";
---
>                 LOG(VERBOSE) << __func__ << ": ENTRY NOT IN HTABLE ?";
1242c1242
<     LOG(INFO) << __func__ << ": lookup";
---
>     LOG(VERBOSE) << __func__ << ": lookup";
1246c1246
<         LOG(INFO) << __func__ << ": unsupported query";
---
>         LOG(VERBOSE) << __func__ << ": unsupported query";
1264c1264
<         LOG(INFO) << __func__ << ": NOT IN CACHE";
---
>         LOG(VERBOSE) << __func__ << ": NOT IN CACHE";
1270c1270
<             LOG(INFO) << __func__ << ": Waiting for previous request";
---
>             LOG(VERBOSE) << __func__ << ": Waiting for previous request";
1301c1301
<         LOG(INFO) << __func__ << ": NOT IN CACHE (STALE ENTRY " << *lookup << "DISCARDED)";
---
>         LOG(VERBOSE) << __func__ << ": NOT IN CACHE (STALE ENTRY " << *lookup << "DISCARDED)";
1310c1310
<         LOG(INFO) << __func__ << ": ANSWER TOO LONG";
---
>         LOG(VERBOSE) << __func__ << ": ANSWER TOO LONG";
1322c1322
<     LOG(INFO) << __func__ << ": FOUND IN CACHE entry=" << e;
---
>     LOG(VERBOSE) << __func__ << ": FOUND IN CACHE entry=" << e;
1337c1337
<         LOG(INFO) << __func__ << ": passed invalid query?";
---
>         LOG(VERBOSE) << __func__ << ": passed invalid query?";
1353c1353
<         LOG(INFO) << __func__ << ": ALREADY IN CACHE (" << e << ") ? IGNORING ADD";
---
>         LOG(VERBOSE) << __func__ << ": ALREADY IN CACHE (" << e << ") ? IGNORING ADD";
1367c1367
<             LOG(INFO) << __func__ << ": ALREADY IN CACHE (" << e << ") ? IGNORING ADD";
---
>             LOG(VERBOSE) << __func__ << ": ALREADY IN CACHE (" << e << ") ? IGNORING ADD";
1625c1625
<     LOG(INFO) << __func__ << ": netId = " << netid << ", numservers = " << numservers;
---
>     LOG(VERBOSE) << __func__ << ": netId = " << netid << ", numservers = " << numservers;
1649c1649
<             LOG(INFO) << __func__ << ": netid = " << netid
---
>             LOG(VERBOSE) << __func__ << ": netid = " << netid
1713c1713
<     LOG(INFO) << __func__ << ": netid=" << statp->netid;
---
>     LOG(VERBOSE) << __func__ << ": netid=" << statp->netid;
1734c1734
<     LOG(INFO) << __func__ << ": adding sample to stats, next = " << unsigned(stats->sample_next)
---
>     LOG(VERBOSE) << __func__ << ": adding sample to stats, next = " << unsigned(stats->sample_next)
1769c1769
<         LOG(INFO) << __func__ << ": nscount " << num << " > MAXNS " << MAXNS;
---
>         LOG(VERBOSE) << __func__ << ": nscount " << num << " > MAXNS " << MAXNS;
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/res_mkquery.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/res_mkquery.cpp
113c113
<     LOG(DEBUG) << __func__ << ": (" << _res_opcodes[op] << ", " << p_class(cl) << ", "
---
>     LOG(VERBOSE) << __func__ << ": (" << _res_opcodes[op] << ", " << p_class(cl) << ", "
203c203
<     LOG(DEBUG) << __func__;
---
>     LOG(VERBOSE) << __func__;
222c222
<         LOG(DEBUG) << __func__ << ": ENDS0 DNSSEC";
---
>         LOG(VERBOSE) << __func__ << ": ENDS0 DNSSEC";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/ResolverController.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/ResolverController.cpp
51c51
<     LOG(DEBUG) << "Sending Nat64Prefix " << (args.added ? "added" : "removed") << " event on netId "
---
>     LOG(VERBOSE) << "Sending Nat64Prefix " << (args.added ? "added" : "removed") << " event on netId "
277c277
<         LOG(INFO) << "No valid NAT64 prefix (" << netId << ", " << p.toString().c_str() << ")";
---
>         LOG(VERBOSE) << "No valid NAT64 prefix (" << netId << ", " << p.toString().c_str() << ")";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/res_query.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/res_query.cpp
118c118
<     LOG(DEBUG) << __func__ << ": (" << cl << ", " << type << ")";
---
>     LOG(VERBOSE) << __func__ << ": (" << cl << ", " << type << ")";
128c128
<         LOG(DEBUG) << __func__ << ": mkquery failed";
---
>         LOG(VERBOSE) << __func__ << ": mkquery failed";
140c140
<             LOG(DEBUG) << __func__ << ": retry without EDNS0";
---
>             LOG(VERBOSE) << __func__ << ": retry without EDNS0";
144c144
<         LOG(DEBUG) << __func__ << ": send error";
---
>         LOG(VERBOSE) << __func__ << ": send error";
172c172
<         LOG(DEBUG) << __func__ << ": rcode = (" << p_rcode(hp->rcode)
---
>         LOG(VERBOSE) << __func__ << ": rcode = (" << p_rcode(hp->rcode)
339c339
<         LOG(DEBUG) << __func__ << ": (null, " << cl << ", " << type << ")";
---
>         LOG(VERBOSE) << __func__ << ": (null, " << cl << ", " << type << ")";
356c356
<         LOG(DEBUG) << __func__ << ": (" << cl << ", " << type << ")";
---
>         LOG(VERBOSE) << __func__ << ": (" << cl << ", " << type << ")";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/res_send.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/res_send.cpp
422c422
<     LOG(DEBUG) << __func__;
---
>     LOG(VERBOSE) << __func__;
472c472
<             LOG(DEBUG) << __func__ << ": got answer from DoT";
---
>             LOG(VERBOSE) << __func__ << ": got answer from DoT";
529c529
<             LOG(DEBUG) << __func__ << ": Querying server (# " << ns + 1
---
>             LOG(VERBOSE) << __func__ << ": Querying server (# " << ns + 1
555c555
<                 LOG(INFO) << __func__ << ": used send_vc " << resplen << " terrno: " << terrno;
---
>                 LOG(VERBOSE) << __func__ << ": used send_vc " << resplen << " terrno: " << terrno;
562c562
<                 LOG(INFO) << __func__ << ": used send_dg " << resplen << " terrno: " << terrno;
---
>                 LOG(VERBOSE) << __func__ << ": used send_dg " << resplen << " terrno: " << terrno;
613c613
<             LOG(DEBUG) << __func__ << ": got answer:";
---
>             LOG(VERBOSE) << __func__ << ": got answer:";
647c647
<     LOG(INFO) << __func__ << ": using timeout of " << msec << " msec";
---
>     LOG(VERBOSE) << __func__ << ": using timeout of " << msec << " msec";
667c667
<     LOG(INFO) << __func__ << ": using send_vc";
---
>     LOG(VERBOSE) << __func__ << ": using send_vc";
706c706
<             PLOG(DEBUG) << __func__ << ": socket(vc): ";
---
>             PLOG(VERBOSE) << __func__ << ": socket(vc): ";
722c722
<                 PLOG(DEBUG) << __func__ << ": setsockopt: ";
---
>                 PLOG(VERBOSE) << __func__ << ": setsockopt: ";
762c762
<         PLOG(DEBUG) << __func__ << ": write failed: ";
---
>         PLOG(VERBOSE) << __func__ << ": write failed: ";
778c778
<         PLOG(DEBUG) << __func__ << ": read failed: ";
---
>         PLOG(VERBOSE) << __func__ << ": read failed: ";
797c797
<         LOG(DEBUG) << __func__ << ": response truncated";
---
>         LOG(VERBOSE) << __func__ << ": response truncated";
806c806
<         LOG(DEBUG) << __func__ << ": undersized: " << len;
---
>         LOG(VERBOSE) << __func__ << ": undersized: " << len;
818c818
<         PLOG(DEBUG) << __func__ << ": read(vc): ";
---
>         PLOG(VERBOSE) << __func__ << ": read(vc): ";
850c850
<         LOG(DEBUG) << __func__ << ": ld answer (unexpected):";
---
>         LOG(VERBOSE) << __func__ << ": ld answer (unexpected):";
884c884
<         LOG(INFO) << __func__ << ": " << sock << " send_vc";
---
>         LOG(VERBOSE) << __func__ << ": " << sock << " send_vc";
892c892
<     LOG(INFO) << __func__ << ": " << sock << " connect_with_const timeout returning " << res;
---
>     LOG(VERBOSE) << __func__ << ": " << sock << " connect_with_const timeout returning " << res;
900c900
<     LOG(INFO) << __func__ << ": " << sock << " retrying_poll";
---
>     LOG(VERBOSE) << __func__ << ": " << sock << " retrying_poll";
910c910
<         LOG(INFO) << __func__ << ": " << sock << " retrying_poll timeout";
---
>         LOG(VERBOSE) << __func__ << ": " << sock << " retrying_poll timeout";
916c916
<         PLOG(INFO) << __func__ << ": " << sock << " retrying_poll failed";
---
>         PLOG(VERBOSE) << __func__ << ": " << sock << " retrying_poll failed";
924c924
<             PLOG(INFO) << __func__ << ": " << sock << " retrying_poll getsockopt failed";
---
>             PLOG(VERBOSE) << __func__ << ": " << sock << " retrying_poll getsockopt failed";
928c928
<     LOG(INFO) << __func__ << ": " << sock << " retrying_poll returning " << n;
---
>     LOG(VERBOSE) << __func__ << ": " << sock << " retrying_poll returning " << n;
942c942
<         LOG(DEBUG) << __func__ << ": poll";
---
>         LOG(VERBOSE) << __func__ << ": poll";
951c951
<             PLOG(INFO) << __func__ << ": failed";
---
>             PLOG(VERBOSE) << __func__ << ": failed";
960c960
<         LOG(DEBUG) << __func__ << ": "
---
>         LOG(VERBOSE) << __func__ << ": "
984c984
<         LOG(DEBUG) << __func__ << ": old answer:";
---
>         LOG(VERBOSE) << __func__ << ": old answer:";
989c989
<         LOG(DEBUG) << __func__ << ": not our server:";
---
>         LOG(VERBOSE) << __func__ << ": not our server:";
994c994
<         LOG(DEBUG) << __func__ << ": wrong query name:";
---
>         LOG(VERBOSE) << __func__ << ": wrong query name:";
1020c1020
<             PLOG(DEBUG) << __func__ << ": socket(dg): ";
---
>             PLOG(VERBOSE) << __func__ << ": socket(dg): ";
1057c1057
<         LOG(DEBUG) << __func__ << ": new DG socket";
---
>         LOG(VERBOSE) << __func__ << ": new DG socket";
1061c1061
<         PLOG(DEBUG) << __func__ << ": send: ";
---
>         PLOG(VERBOSE) << __func__ << ": send: ";
1081c1081
<             LOG(DEBUG) << __func__ << ": " << (isTimeout) ? "timeout" : "poll";
---
>             LOG(VERBOSE) << __func__ << ": " << (isTimeout) ? "timeout" : "poll";
1093c1093
<                 PLOG(DEBUG) << __func__ << ": recvfrom: ";
---
>                 PLOG(VERBOSE) << __func__ << ": recvfrom: ";
1099c1099
<                 LOG(DEBUG) << __func__ << ": undersized: " << resplen;
---
>                 LOG(VERBOSE) << __func__ << ": undersized: " << resplen;
1117c1117
<                 LOG(DEBUG) << __func__ << ": server rejected query with EDNS0:";
---
>                 LOG(VERBOSE) << __func__ << ": server rejected query with EDNS0:";
1128c1128
<                 LOG(DEBUG) << __func__ << ": server rejected query:";
---
>                 LOG(VERBOSE) << __func__ << ": server rejected query:";
1136c1136
<                 LOG(DEBUG) << __func__ << ": truncated answer";
---
>                 LOG(VERBOSE) << __func__ << ": truncated answer";
1159c1159
<     if (!WOULD_LOG(DEBUG)) return;
---
>     if (!WOULD_LOG(VERBOSE)) return;
1168c1168
<     PLOG(DEBUG) << __func__ << ": " << str << " ([" << hbuf << "]." << sbuf << "): ";
---
>     PLOG(VERBOSE) << __func__ << ": " << str << " ([" << hbuf << "]." << sbuf << "): ";
1253c1253
<     LOG(INFO) << __func__ << ": performing query over TLS";
---
>     LOG(VERBOSE) << __func__ << ": performing query over TLS";
1258c1258
<     LOG(INFO) << __func__ << ": TLS query result: " << static_cast<int>(response);
---
>     LOG(VERBOSE) << __func__ << ": TLS query result: " << static_cast<int>(response);
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/res_stats.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/res_stats.cpp
36c36
<     LOG(INFO) << __func__ << ": rcode = " << rcode << ", sec = " << rtt;
---
>     LOG(VERBOSE) << __func__ << ": rcode = " << rcode << ", sec = " << rtt;
122c122
<         LOG(INFO) << __func__ << ": NS stats: S " << successes << " + E " << errors << " + T "
---
>         LOG(VERBOSE) << __func__ << ": NS stats: S " << successes << " + E " << errors << " + T "
127c127
<             LOG(INFO) << __func__ << ": success rate " << success_rate;
---
>             LOG(VERBOSE) << __func__ << ": success rate " << success_rate;
134c134
<                     LOG(INFO) << __func__ << ": samples stale, retrying server";
---
>                     LOG(VERBOSE) << __func__ << ": samples stale, retrying server";
137c137
<                     LOG(INFO) << __func__ << ": too many resolution errors, ignoring server";
---
>                     LOG(VERBOSE) << __func__ << ": too many resolution errors, ignoring server";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/dns_responder/dns_responder.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/dns_responder/dns_responder.cpp
537,538c537,538
<         LOG(INFO) << "Hex dump:";
<         LOG(INFO) << android::netdutils::toHex(
---
>         LOG(VERBOSE) << "Hex dump:";
>         LOG(VERBOSE) << android::netdutils::toHex(
629c629
<     LOG(INFO) << "adding UDP socket to epoll";
---
>     LOG(VERBOSE) << "adding UDP socket to epoll";
635c635
<     LOG(INFO) << "adding TCP socket to epoll";
---
>     LOG(VERBOSE) << "adding TCP socket to epoll";
641c641
<     LOG(INFO) << "adding eventfd to epoll";
---
>     LOG(VERBOSE) << "adding eventfd to epoll";
651c651
<     LOG(INFO) << "server started successfully";
---
>     LOG(VERBOSE) << "server started successfully";
661c661
<     LOG(INFO) << "stopping server";
---
>     LOG(VERBOSE) << "stopping server";
670c670
<     LOG(INFO) << "server stopped successfully";
---
>     LOG(VERBOSE) << "server stopped successfully";
732c732
<     LOG(DEBUG) << "request: '" << str2hex(buffer, len) << "', on " << dnsproto2str(protocol);
---
>     LOG(VERBOSE) << "request: '" << str2hex(buffer, len) << "', on " << dnsproto2str(protocol);
746c746
<         LOG(INFO) << "unsupported request opcode received";
---
>         LOG(VERBOSE) << "unsupported request opcode received";
750c750
<         LOG(INFO) << "no questions present";
---
>         LOG(VERBOSE) << "no questions present";
754c754
<         LOG(INFO) << "already " << header.answers.size() << " answers present in query";
---
>         LOG(VERBOSE) << "already " << header.answers.size() << " answers present in query";
759c759
<         LOG(INFO) << "force to return RCODE FORMERR";
---
>         LOG(VERBOSE) << "force to return RCODE FORMERR";
764c764
<         LOG(INFO) << "DNS request has an additional section (assumed EDNS). Simulating an ancient "
---
>         LOG(VERBOSE) << "DNS request has an additional section (assumed EDNS). Simulating an ancient "
786c786
<             LOG(INFO) << "returning RCODE " << static_cast<int>(error_rcode_)
---
>             LOG(VERBOSE) << "returning RCODE " << static_cast<int>(error_rcode_)
836c836
<         LOG(INFO) << "no mapping found for " << question.qname.name << " "
---
>         LOG(VERBOSE) << "no mapping found for " << question.qname.name << " "
958c958
<         LOG(INFO) << "Return truncated response because original response length " << buffer_len
---
>         LOG(VERBOSE) << "Return truncated response because original response length " << buffer_len
976c976
<             LOG(INFO) << "unsupported question class " << question.qclass;
---
>             LOG(VERBOSE) << "unsupported question class " << question.qclass;
999c999
<         LOG(INFO) << "unsupported question count " << questions.size();
---
>         LOG(VERBOSE) << "unsupported question count " << questions.size();
1004c1004
<         LOG(INFO) << "unsupported question class " << questions[0].qclass;
---
>         LOG(VERBOSE) << "unsupported question class " << questions[0].qclass;
1023c1023
<         LOG(INFO) << "no mapping found for " << name << " " << dnstype2str(qtype)
---
>         LOG(VERBOSE) << "no mapping found for " << name << " " << dnstype2str(qtype)
1063c1063
<         LOG(INFO) << "no mapping found, couldn't build a response from BinaryPacket mapping";
---
>         LOG(VERBOSE) << "no mapping found, couldn't build a response from BinaryPacket mapping";
1134c1134
<     LOG(DEBUG) << "read " << len << " bytes on " << dnsproto2str(protocol);
---
>     LOG(VERBOSE) << "read " << len << " bytes on " << dnsproto2str(protocol);
1176c1176
<             LOG(DEBUG) << "sent " << len << " bytes to " << host_str;
---
>             LOG(VERBOSE) << "sent " << len << " bytes to " << host_str;
1208c1208
<         PLOG(INFO) << "ignore reading eventfd failed, rt=" << rt;
---
>         PLOG(VERBOSE) << "ignore reading eventfd failed, rt=" << rt;
1244c1244
<         LOG(INFO) << "bound to " << socket_str << " " << host_str << ":" << listen_service_;
---
>         LOG(VERBOSE) << "bound to " << socket_str << " " << host_str << ":" << listen_service_;
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/dns_responder/dns_tls_frontend.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/dns_responder/dns_tls_frontend.cpp
115c115
<             PLOG(INFO) << "ignore creating socket failed " << s.get();
---
>             PLOG(VERBOSE) << "ignore creating socket failed " << s.get();
121c121
<             PLOG(INFO) << "failed to bind TCP " << host_str.c_str() << ":"
---
>             PLOG(VERBOSE) << "failed to bind TCP " << host_str.c_str() << ":"
125c125
<         LOG(INFO) << "bound to TCP " << host_str.c_str() << ":" << listen_service_.c_str();
---
>         LOG(VERBOSE) << "bound to TCP " << host_str.c_str() << ":" << listen_service_.c_str();
131c131
<         PLOG(INFO) << "failed to listen socket " << socket_.get();
---
>         PLOG(VERBOSE) << "failed to listen socket " << socket_.get();
149c149
<         PLOG(INFO) << "backend socket " << backend_socket_.get() << " creation failed";
---
>         PLOG(VERBOSE) << "backend socket " << backend_socket_.get() << " creation failed";
161c161
<         PLOG(INFO) << "failed to create eventfd " << event_fd_.get();
---
>         PLOG(VERBOSE) << "failed to create eventfd " << event_fd_.get();
169c169
<     LOG(INFO) << "server started successfully";
---
>     LOG(VERBOSE) << "server started successfully";
174c174
<     LOG(DEBUG) << "Request handler started";
---
>     LOG(VERBOSE) << "Request handler started";
195c195
<             LOG(DEBUG) << "Trying to accept a client";
---
>             LOG(VERBOSE) << "Trying to accept a client";
200c200
<                 PLOG(INFO) << "failed to accept client socket " << client.get();
---
>                 PLOG(VERBOSE) << "failed to accept client socket " << client.get();
206c206
<                 LOG(DEBUG) << "TEST ONLY: unresponsive to SSL handshake";
---
>                 LOG(VERBOSE) << "TEST ONLY: unresponsive to SSL handshake";
216c216
<             LOG(DEBUG) << "Doing SSL handshake";
---
>             LOG(VERBOSE) << "Doing SSL handshake";
218c218
<                 LOG(INFO) << "SSL negotiation failure";
---
>                 LOG(VERBOSE) << "SSL negotiation failure";
220c220
<                 LOG(DEBUG) << "SSL handshake complete";
---
>                 LOG(VERBOSE) << "SSL handshake complete";
228c228
<                 LOG(DEBUG) << "hold the current connection until next connection request";
---
>                 LOG(VERBOSE) << "hold the current connection until next connection request";
233c233
<     LOG(DEBUG) << "Ending loop";
---
>     LOG(VERBOSE) << "Ending loop";
245c245
<             LOG(INFO) << "Not enough header bytes";
---
>             LOG(VERBOSE) << "Not enough header bytes";
254c254
<                 LOG(INFO) << "Error while reading query";
---
>                 LOG(VERBOSE) << "Error while reading query";
261c261
<             LOG(INFO) << "Failed to send query";
---
>             LOG(VERBOSE) << "Failed to send query";
281c281
<             LOG(INFO) << "Failed to receive response";
---
>             LOG(VERBOSE) << "Failed to receive response";
302c302
<     LOG(DEBUG) << "Sending " << queryCounts << "queries at once, byte = " << replyLen;
---
>     LOG(VERBOSE) << "Sending " << queryCounts << "queries at once, byte = " << replyLen;
315c315
<     LOG(DEBUG) << __func__ << " return: " << queryCounts;
---
>     LOG(VERBOSE) << __func__ << " return: " << queryCounts;
322c322
<         LOG(INFO) << "server not running";
---
>         LOG(VERBOSE) << "server not running";
326c326
<     LOG(INFO) << "stopping frontend";
---
>     LOG(VERBOSE) << "stopping frontend";
335c335
<     LOG(INFO) << "frontend stopped successfully";
---
>     LOG(VERBOSE) << "frontend stopped successfully";
353c353
<             LOG(DEBUG) << "Query arrived in " << count << "/" << limit << " of allotted time";
---
>             LOG(VERBOSE) << "Query arrived in " << count << "/" << limit << " of allotted time";
363c363
<         PLOG(INFO) << "failed to write eventfd, rt=" << rt;
---
>         PLOG(VERBOSE) << "failed to write eventfd, rt=" << rt;
372c372
<         PLOG(INFO) << "ignore reading eventfd failed, rt=" << rt;
---
>         PLOG(VERBOSE) << "ignore reading eventfd failed, rt=" << rt;
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/resolv_integration_test.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/resolv_integration_test.cpp
307c307
<             LOG(INFO) << "Skip unexpected DnsEvent: " << dnsEvent.value();
---
>             LOG(VERBOSE) << "Skip unexpected DnsEvent: " << dnsEvent.value();
321c321
<             LOG(INFO) << "Skip unexpected dns health result:" << result.value();
---
>             LOG(VERBOSE) << "Skip unexpected dns health result:" << result.value();
1674c1674
<         LOG(INFO) << "Waiting for private DNS validation on " << tls[i]->listen_address() << ".";
---
>         LOG(VERBOSE) << "Waiting for private DNS validation on " << tls[i]->listen_address() << ".";
1676c1676
<         LOG(INFO) << "private DNS validation on " << tls[i]->listen_address() << " done.";
---
>         LOG(VERBOSE) << "private DNS validation on " << tls[i]->listen_address() << " done.";
5957c5957
<         LOG(INFO) << "ResolverTest#DnsServerSelection: averageTime " << averageTime << "us";
---
>         LOG(VERBOSE) << "ResolverTest#DnsServerSelection: averageTime " << averageTime << "us";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/resolv_stats_test_utils.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/resolv_stats_test_utils.cpp
90c90
<         LOG(DEBUG) << "Str:" << match_str << " Name:" << protoField[1]
---
>         LOG(VERBOSE) << "Str:" << match_str << " Name:" << protoField[1]
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/resolv_stress_test.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/resolv_stress_test.cpp
81c81
<         LOG(INFO) << StringPrintf("%u hosts, %u threads, %u queries, %Es", num_hosts, num_threads,
---
>         LOG(VERBOSE) << StringPrintf("%u hosts, %u threads, %u queries, %Es", num_hosts, num_threads,
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/resolv_tls_unit_test.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/resolv_tls_unit_test.cpp
237c237
<         LOG(DEBUG) << "FakeSocketDelay got query with ID " << int(id);
---
>         LOG(VERBOSE) << "FakeSocketDelay got query with ID " << int(id);
246c246
<         LOG(DEBUG) << "Up to " << mResponses.size() << " out of " << sDelay << " queries";
---
>         LOG(VERBOSE) << "Up to " << mResponses.size() << " out of " << sDelay << " queries";
498c498
<             LOG(DEBUG) << "~FakeSocketLimited acquiring mLock";
---
>             LOG(VERBOSE) << "~FakeSocketLimited acquiring mLock";
500c500
<             LOG(DEBUG) << "~FakeSocketLimited acquired mLock";
---
>             LOG(VERBOSE) << "~FakeSocketLimited acquired mLock";
502c502
<                 LOG(DEBUG) << "~FakeSocketLimited joining response thread";
---
>                 LOG(VERBOSE) << "~FakeSocketLimited joining response thread";
504c504
<                 LOG(DEBUG) << "~FakeSocketLimited joined response thread";
---
>                 LOG(VERBOSE) << "~FakeSocketLimited joined response thread";
510c510
<             LOG(DEBUG) << "~FakeSocketLimited joining closer thread";
---
>             LOG(VERBOSE) << "~FakeSocketLimited joining closer thread";
512c512
<             LOG(DEBUG) << "~FakeSocketLimited joined closer thread";
---
>             LOG(VERBOSE) << "~FakeSocketLimited joined closer thread";
516c516
<         LOG(DEBUG) << "FakeSocketLimited::query acquiring mLock";
---
>         LOG(VERBOSE) << "FakeSocketLimited::query acquiring mLock";
518c518
<         LOG(DEBUG) << "FakeSocketLimited::query acquired mLock";
---
>         LOG(VERBOSE) << "FakeSocketLimited::query acquired mLock";
522c522
<             LOG(DEBUG) << "size " << query.size() << " vs. limit of " << sMaxSize;
---
>             LOG(VERBOSE) << "size " << query.size() << " vs. limit of " << sMaxSize;
538c538
<             LOG(DEBUG) << "FakeSocketLimited::sendClose acquiring mLock";
---
>             LOG(VERBOSE) << "FakeSocketLimited::sendClose acquiring mLock";
540c540
<             LOG(DEBUG) << "FakeSocketLimited::sendClose acquired mLock";
---
>             LOG(VERBOSE) << "FakeSocketLimited::sendClose acquired mLock";
542c542
<                 LOG(DEBUG) << "FakeSocketLimited::sendClose joining response thread";
---
>                 LOG(VERBOSE) << "FakeSocketLimited::sendClose joining response thread";
544c544
<                 LOG(DEBUG) << "FakeSocketLimited::sendClose joined response thread";
---
>                 LOG(VERBOSE) << "FakeSocketLimited::sendClose joined response thread";
1059c1059
<     LOG(DEBUG) << "Shutdown took " << delay / std::chrono::nanoseconds{1} << "ns";
---
>     LOG(VERBOSE) << "Shutdown took " << delay / std::chrono::nanoseconds{1} << "ns";
1105c1105
<         LOG(INFO) << "Shutdown took " << delay / std::chrono::nanoseconds{1} << "ns";
---
>         LOG(VERBOSE) << "Shutdown took " << delay / std::chrono::nanoseconds{1} << "ns";
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/DnsResolver/tests/tun_forwarder.cpp /home/yajat/Desktop/H618-Android12-Src/packages/modules/DnsResolver/tests/tun_forwarder.cpp
207c207
<         LOG(DEBUG) << "validatePacket failed: " << result.error();
---
>         LOG(VERBOSE) << "validatePacket failed: " << result.error();
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/ExtServices: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/GeoTZ: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Gki: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/IPsec: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/ModuleMetadata: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/NetworkPermissionConfig: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/NetworkStack/common/networkstackclient/src/android/net/shared/ProvisioningConfiguration.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/NetworkStack/common/networkstackclient/src/android/net/shared/ProvisioningConfiguration.java
440c440
<     public boolean mUsingIpReachabilityMonitor = true;
---
>     public boolean mUsingIpReachabilityMonitor = false;
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/NetworkStack: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/NeuralNetworks: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Permission: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Permission/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt /home/yajat/Desktop/H618-Android12-Src/packages/modules/Permission/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt
420c420,421
<                 if (groupState.group.permGroupName == LOCATION && isLocationAccuracyEnabled()) {
---
>                 if (groupState.group.permGroupName == LOCATION && isLocationAccuracyEnabled() &&
>                         packageInfo.targetSdkVersion >= Build.VERSION_CODES.S) {
435a437,442
>                                 if (!fgState.affectedPermissions.contains(ACCESS_COARSE_LOCATION)) {
>                                     Log.e(LOG_TAG, "ACCESS_FINE_LOCATION must be requested " +
>                                             "with ACCESS_COARSE_LOCATION.")
>                                     value = null
>                                     return
>                                 }
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/RuntimeI18n: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Scheduling: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/SdkExtensions: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/StatsD: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/TestModule: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Virtualization: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/vndk: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/modules/Wifi: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Wifi/service/java/com/android/server/wifi/ClientModeImpl.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Wifi/service/java/com/android/server/wifi/ClientModeImpl.java
5994,6007c5994,5995
<         // Already present, just return.
<         String factoryMacAddressStr = mSettingsConfigStore.get(WIFI_STA_FACTORY_MAC_ADDRESS);
<         if (factoryMacAddressStr != null) return MacAddress.fromString(factoryMacAddressStr);
< 
<         MacAddress factoryMacAddress = mWifiNative.getStaFactoryMacAddress(mInterfaceName);
<         if (factoryMacAddress == null) {
<             // the device may be running an older HAL (version < 1.3).
<             Log.w(TAG, "Failed to retrieve factory MAC address");
<             return null;
<         }
<         Log.i(TAG, "Factory MAC address retrieved and stored in config store: "
<                 + factoryMacAddress);
<         mSettingsConfigStore.put(WIFI_STA_FACTORY_MAC_ADDRESS, factoryMacAddress.toString());
<         return factoryMacAddress;
---
>         // Get value from hal to update MAC address.
>         return mWifiNative.getStaFactoryMacAddress(mInterfaceName);
diff -r /home/yajat/Desktop/aosp12_r11/packages/modules/Wifi/service/java/com/android/server/wifi/WifiServiceImpl.java /home/yajat/Desktop/H618-Android12-Src/packages/modules/Wifi/service/java/com/android/server/wifi/WifiServiceImpl.java
939a940,945
>         if (enable) {
>             mReconnectAfterEnable.mShouldReconnect = true;
>             mReconnectAfterEnable.mReconnectCnt = 3;
>             mWifiThreadRunner.postDelayed(mReconnectAfterEnable, 5000);
>             // mWifiThreadRunner.postDelayed(() -> reconnect(packageName), 5000);
>         }
941a948,987
> 
>     private class ReconnectRunnable implements Runnable {
>         boolean mShouldReconnect = false;
>         int mReconnectCnt;
> 
>         boolean isWifiConnected() {
>             boolean ret = false;
>             try {
>                 WifiInfo wifiInfo = mWifiThreadRunner.call(
>                         () -> getClientModeManagerIfSecondaryCmmRequestedByCallerPresent(
>                                 UserHandle.myUserId(), mContext.getOpPackageName())
>                                 .syncRequestConnectionInfo(), new WifiInfo());
>                 if (wifiInfo != null && wifiInfo.getWifiSsid() != null) {
>                     ret = true;
>                 }
>             } finally {
>                 return ret;
>             }
>         }
> 
>         @Override
>         public void run() {
>             if (!mShouldReconnect || isWifiConnected()) {
>                 mReconnectCnt = 0;
>                 mShouldReconnect = false;
>                 Log.d("chongyuzhao", "stop reconnect");
>                 return;
>             }
>             mWifiThreadRunner.post(() -> {
>                 mActiveModeWarden.getPrimaryClientModeManager().reconnect(new WorkSource(UserHandle.myUserId()));
>             });
>             if (mReconnectCnt > 0) mReconnectCnt--;
>             if (mReconnectCnt <= 0) mShouldReconnect = false;
>             if (mShouldReconnect) {
>                 Log.d("chongyuzhao", "reconnect again");
>                 mWifiThreadRunner.postDelayed(this, 5000);
>             }
>         }
>     }
>     ReconnectRunnable mReconnectAfterEnable = new ReconnectRunnable();
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/BlockedNumberProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/BookmarkProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/CalendarProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/CallLogProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/ContactsProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/DownloadProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/MediaProvider: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/providers/MediaProvider/src/com/android/providers/media/MediaProvider.java /home/yajat/Desktop/H618-Android12-Src/packages/providers/MediaProvider/src/com/android/providers/media/MediaProvider.java
2658c2658,2671
<                     return PackageManager.PERMISSION_GRANTED;
---
>                     c.moveToFirst();
>                     final long cursorId = c.getLong(0);
> 
>                     long uriId = -1;
>                     try {
>                         uriId = ContentUris.parseId(uri);
>                     } catch (NumberFormatException ignored) {
>                         // if the id is not a number, the uri doesn't have a valid ID at the end of
>                         // the uri, (i.e., uri is uri of the table not of the item/row)
>                     }
> 
>                     if (uriId != -1 && cursorId == uriId) {
>                         return PackageManager.PERMISSION_GRANTED;
>                     }
2662,2663c2675,2688
<             try {
<                 if (ContentUris.parseId(uri) != -1) {
---
>             // For the uri with id cases, if it isn't returned in above query section, the result
>             // isn't as expected. Don't grant the permission.
>             switch (table) {
>                 case AUDIO_MEDIA_ID:
>                 case IMAGES_MEDIA_ID:
>                 case VIDEO_MEDIA_ID:
>                 case DOWNLOADS_ID:
>                 case FILES_ID:
>                 case AUDIO_MEDIA_ID_GENRES_ID:
>                 case AUDIO_GENRES_ID:
>                 case AUDIO_PLAYLISTS_ID:
>                 case AUDIO_PLAYLISTS_ID_MEMBERS_ID:
>                 case AUDIO_ARTISTS_ID:
>                 case AUDIO_ALBUMS_ID:
2665,2666c2690,2692
<                 }
<             } catch (NumberFormatException ignored) { }
---
>                 default:
>                     // continue below
>             }
2676,2678d2701
< 
<             // For prefix grant on the uri with content uri without id, we don't allow apps to
<             // grant access as they might end up granting access to all files.
8857a8881,8900
>                 break;
>             default:
>                 // continue below
>         }
> 
>         // Check whether the uri is a specific table or not. Don't allow the global access to these
>         // table uris
>         switch (table) {
>             case AUDIO_MEDIA:
>             case IMAGES_MEDIA:
>             case VIDEO_MEDIA:
>             case DOWNLOADS:
>             case FILES:
>             case AUDIO_ALBUMS:
>             case AUDIO_ARTISTS:
>             case AUDIO_GENRES:
>             case AUDIO_PLAYLISTS:
>                 return false;
>             default:
>                 // continue below
diff -r /home/yajat/Desktop/aosp12_r11/packages/providers/MediaProvider/src/com/android/providers/media/scan/ModernMediaScanner.java /home/yajat/Desktop/H618-Android12-Src/packages/providers/MediaProvider/src/com/android/providers/media/scan/ModernMediaScanner.java
530c530
<                             FileColumns.IS_PENDING}, queryArgs, mSignal)) {
---
>                             FileColumns.IS_PENDING,MediaStore.Video.Media.TAGS}, queryArgs, mSignal)) {
535a536,537
>                         final String strRecording = c.getString(4);
>                         final boolean isRecording = (strRecording != null && strRecording.equals("recording"));
540c542
<                         if (isPending && dateExpire > System.currentTimeMillis() / 1000) {
---
>                         if (isPending && dateExpire > System.currentTimeMillis() / 1000 || isRecording) {
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/PartnerBookmarksProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/TelephonyProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/TvProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/providers/UserDictionaryProvider: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/screensavers/Basic: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/screensavers/PhotoTable: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/AlternativeNetworkAccess: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/BuiltInPrintService: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Car: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Iwlan: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Mms: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Mtp: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Telecomm: .git
diff -r /home/yajat/Desktop/aosp12_r11/packages/services/Telecomm/src/com/android/server/telecom/CreateConnectionProcessor.java /home/yajat/Desktop/H618-Android12-Src/packages/services/Telecomm/src/com/android/server/telecom/CreateConnectionProcessor.java
664c664
<             return account1.hashCode() - account2.hashCode();
---
>             return Integer.compare(account1.hashCode(), account2.hashCode());
Only in /home/yajat/Desktop/aosp12_r11/packages/services/Telephony: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/wallpapers/ImageWallpaper: .git
Only in /home/yajat/Desktop/aosp12_r11/packages/wallpapers/LivePicker: .git
